{"version":3,"sources":["assets/logo.svg","components/Footer.tsx","consts/colors.ts","components/Header.tsx","consts/regex.ts","services/inputParser.ts","components/Keyboard.tsx","services/audio.ts","components/Player.tsx","containers/Song.tsx","containers/SongList.tsx","containers/App.tsx","consts/presets.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","footerStyle","css","linkStyle","Footer","className","role","aria-label","rel","target","href","headerStyle","logoStyle","Header","src","logo","alt","NOTE_REGEX","parseNotes","notes","split","map","note","match","filter","duration","extendedLength","sharp","tone","octave","pauseDuration","extendedPauseLength","rest","parseInt","Boolean","serializeNotes","join","Key","DURATIONS","TONES","1","2","3","4","5","6","7","mainStyle","lastSequence","Button","keyVal","children","onPress","React","timer","setTimer","onMouseOut","clearTimeout","onLongPress","type","onMouseDown","setTimeout","onMouseUp","onBlur","onMouseLeave","KEYS","Star","Hash","presses","Keyboard","activeIndex","setActiveNote","onNotesChange","length","onKeyPress","shift","key","long","prompt","k","console","log","activeNote","Left","Right","C","slice","newNotes","splice","Eight","durationIndex","indexOf","Math","max","Nine","min","newNote","Zero","Object","assign","One","Two","Three","Four","Five","Six","Seven","Tone","require","separatorStyle","tempoInputStyle","Player","tempo","onTempoChange","audio","Transport","bpm","value","stop","synth","Synth","toMaster","nextTone","parts","forEach","index","Time","toUpperCase","push","sequence","Part","time","triggerAttackRelease","loop","playbackRate","start","createAudio","onClick","onChange","e","newTempo","inputStyle","toolbarStyle","nameStyle","activeStyle","Song","song","onSave","history","setNotes","active","setActive","parsed","setParsed","name","setName","setTempo","rawNotes","historyInstance","useHistory","notesHtml","goBack","placeholder","id","replace","contentEditable","onInput","innerText","dangerouslySetInnerHTML","__html","listStyle","SongList","songs","to","layoutStyle","saved","JSON","parse","localStorage","getItem","presets","s","n","preset","isLocalhost","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","injectGlobal","ReactDOM","render","setSongs","onSaveClick","data","includes","uuidv1","newSongList","setItem","stringify","path","exact","props","find","item","params","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.439e767f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5ee23392.svg\";","import { css } from 'emotion';\nimport * as React from 'react';\n\nimport { SECONDARY_TEXT_COLOR } from '../consts/colors';\n\nconst footerStyle = css`\n  font-size: 12px;\n  text-align: center;\n  box-shadow: 0 0 5px #000;\n  padding: 2px 0 4px;\n`;\n\nconst linkStyle = css`\n  color: ${SECONDARY_TEXT_COLOR};\n  font-weight: 600;\n  text-decoration: none;\n`;\n\nexport const Footer = () => (\n  <div className={footerStyle}>\n    Made with{' '}\n    <span role=\"img\" aria-label=\"love\">\n      ❤️\n    </span>{' '}\n    by{' '}\n    <a className={linkStyle} rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://twitter.com/DarkoKukovec\">\n      @DarkoKukovec\n    </a>\n  </div>\n);\n","export const LINK_COLOR = '#61dafb';\nexport const BACKGROUND_PRIMARY = '#282c34';\n\nexport const PRIMARY_COLOR = '#79a682';\nexport const SECONDARY_COLOR = '#2B303D';\n\nexport const PRIMARY_TEXT_COLOR = '#242D23';\nexport const SECONDARY_TEXT_COLOR = '#D9EFF9';\n","import { css } from 'emotion';\nimport * as React from 'react';\n\nimport logo from '../assets/logo.svg';\n\nconst headerStyle = css`\n  height: 32px;\n  box-shadow: 0 0 5px #000;\n  padding: 7px 16px;\n  text-align: center;\n`;\n\nconst logoStyle = css`\n  height: 32px;\n`;\n\nexport const Header = () => (\n  <header className={headerStyle}>\n    <img className={logoStyle} src={logo} alt=\"Retro Composer\" />\n  </header>\n);\n","export const NOTE_REGEX = /(\\d+)(\\.)?(#)?([abcdefg])([123])|(\\d+)(\\.)?(-)/;\n","import { NOTE_REGEX } from '../consts/regex';\nimport { INoteRecord } from '../interfaces/INoteRecord';\nimport { Tone } from '../enums/Tone';\n\nexport function parseNotes(notes: string): Array<INoteRecord> {\n  return notes\n    .split(/\\s+/g)\n    .map((note) => note.match(NOTE_REGEX))\n    .filter((note) => note !== null)\n    .map(([_match, duration, extendedLength, sharp, tone, octave, pauseDuration, extendedPauseLength, rest]: any) =>\n      duration\n        ? {\n            duration: parseInt(duration, 10),\n            extendedLength: Boolean(extendedLength),\n            sharp: Boolean(sharp),\n            tone: tone as Tone,\n            octave: parseInt(octave, 10),\n          }\n        : {\n            duration: parseInt(pauseDuration, 10),\n            extendedLength: Boolean(extendedPauseLength),\n            rest: Boolean(rest),\n          },\n    );\n}\n\nexport function serializeNotes(notes: Array<INoteRecord>): string {\n  return notes\n    .map((note) =>\n      'tone' in note\n        ? `${note.duration}${note.extendedLength ? '.' : ''}${note.sharp ? '#' : ''}${note.tone}${note.octave}`\n        : `${note.duration}${note.extendedLength ? '.' : ''}-`,\n    )\n    .join(' ');\n}\n","/* eslint-disable react/jsx-no-bind */\nimport { css } from 'emotion';\nimport * as React from 'react';\nimport { SECONDARY_COLOR } from '../consts/colors';\nimport { INoteRecord } from '../interfaces/INoteRecord';\nimport { serializeNotes } from '../services/inputParser';\n\nconst DURATIONS = [32, 16, 8, 4, 2, 1];\nconst DEFAULT_DURATION = 8;\nconst DEFAULT_OCTAVE = 2;\nconst TONES = { 1: 'c', 2: 'd', 3: 'e', 4: 'f', 5: 'g', 6: 'a', 7: 'b' };\n\nconst mainStyle = css`\n  width: 100%;\n  height: 200px;\n  background: ${SECONDARY_COLOR};\n  z-index: 1;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 8px;\n  padding: 8px 0;\n\n  button {\n    background: linear-gradient(#f0f2e8, #787b7c);\n    color: #000;\n    border-radius: 8px;\n    font-size: 28px;\n    font-family: Quicksand, sans-serif;\n\n    &:hover {\n      background: linear-gradient(#c0c2c8, #787b7c);\n      color: #000;\n    }\n\n    &:active {\n      background: linear-gradient(#787b7c, #f0f2e8);\n      color: #000;\n    }\n  }\n`;\n\nenum Key {\n  Zero,\n  One,\n  Two,\n  Three,\n  Four,\n  Five,\n  Six,\n  Seven,\n  Eight,\n  Nine,\n  Star,\n  Hash,\n  Left,\n  Right,\n  C,\n}\n\nconst Button: React.FC<{ keyVal: Key; children: any; onPress(key: Key, long: boolean): void }> = ({\n  keyVal,\n  children,\n  onPress,\n}) => {\n  const [timer, setTimer] = React.useState();\n\n  const onMouseUp = () => {\n    if (timer) {\n      clearTimeout(timer);\n      setTimer(null);\n      onPress(keyVal, false);\n    }\n  };\n\n  const onMouseOut = () => {\n    clearTimeout(timer);\n    setTimer(null);\n  };\n\n  const onLongPress = () => {\n    onPress(keyVal, true);\n    setTimer(null);\n  };\n\n  const onMouseDown = () => {\n    setTimer(setTimeout(onLongPress, 400));\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n      onMouseOut={onMouseOut}\n      onBlur={onMouseOut}\n      onMouseLeave={onMouseOut}\n    >\n      {children}\n    </button>\n  );\n};\n\nconst KEYS = { '*': Key.Star, '#': Key.Hash };\n\nlet presses: Array<Key> = [];\nlet timer: number | null = null;\n\nexport const Keyboard: React.FC<{\n  notes: Array<INoteRecord>;\n  activeIndex: number;\n  setActiveNote(index: number): void;\n  onNotesChange(notes: string): void;\n}> = ({ notes, activeIndex, setActiveNote, onNotesChange }) => {\n  if (presses.length) {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    timer = (setTimeout(() => {\n      onKeyPress(presses.shift() as Key, false);\n    }, 100) as unknown) as number;\n  }\n  const onKeyPress = (key: Key, long: boolean) => {\n    if (key === Key.Star && long) {\n      presses =\n        prompt()\n          ?.split(' ')\n          .map((k: string) => ((KEYS as any)[k] as Key) || (parseInt(k, 10) as Key)) || [];\n      console.log(presses);\n      onKeyPress(presses.shift() as Key, false);\n      return;\n    }\n    const activeNote = notes[activeIndex];\n    if (key === Key.Left) {\n      if (activeIndex > -1) {\n        setActiveNote(activeIndex - 1);\n      }\n    } else if (key === Key.Right) {\n      if (activeIndex < notes.length) {\n        setActiveNote(activeIndex + 1);\n      }\n    } else if (key === Key.C) {\n      if (activeIndex === notes.length) {\n        onNotesChange(serializeNotes(notes.slice(0, -1)));\n        setActiveNote(activeIndex - 1);\n      } else if (activeIndex !== -1) {\n        const newNotes = notes.slice();\n        newNotes.splice(activeIndex, 1);\n        onNotesChange(serializeNotes(newNotes));\n      }\n    } else if (key === Key.Eight) {\n      if (activeNote) {\n        const newNotes = notes.slice();\n        const durationIndex = DURATIONS.indexOf(activeNote.duration);\n        newNotes.splice(activeIndex, 1, {\n          ...activeNote,\n          duration: DURATIONS[Math.max(0, durationIndex - 1)],\n        });\n        onNotesChange(serializeNotes(newNotes));\n      }\n    } else if (key === Key.Nine) {\n      if (activeNote) {\n        const newNotes = notes.slice();\n        const durationIndex = DURATIONS.indexOf(activeNote.duration);\n        newNotes.splice(activeIndex, 1, {\n          ...activeNote,\n          duration: DURATIONS[Math.min(DURATIONS.length - 1, durationIndex + 1)],\n        });\n        onNotesChange(serializeNotes(newNotes));\n      }\n    } else if (key === Key.Hash) {\n      if (activeNote && 'sharp' in activeNote && activeNote.tone !== 'b' && activeNote.tone !== 'e') {\n        const newNotes = notes.slice();\n        newNotes.splice(activeIndex, 1, {\n          ...activeNote,\n          sharp: !activeNote.sharp,\n        });\n        onNotesChange(serializeNotes(newNotes));\n      }\n    } else if (key === Key.Star) {\n      if (activeNote && 'sharp' in activeNote) {\n        const newNotes = notes.slice();\n        newNotes.splice(activeIndex, 1, {\n          ...activeNote,\n          octave: ((activeNote.octave + 3) % 3) + 1,\n        });\n        onNotesChange(serializeNotes(newNotes));\n      }\n    } else {\n      const newNote: Partial<INoteRecord> = {\n        duration: DEFAULT_DURATION, // activeNote ? activeNote.duration : DEFAULT_DURATION,\n      };\n      if (key === Key.Zero) {\n        Object.assign(newNote, { rest: true });\n      } else {\n        console.log(key, TONES[key]);\n        Object.assign(newNote, {\n          extendedLength: long,\n          octave: activeNote && 'octave' in activeNote ? activeNote.octave : DEFAULT_OCTAVE,\n          tone: TONES[key],\n        });\n      }\n      if (activeIndex === -1) {\n        onNotesChange(serializeNotes([newNote as INoteRecord, ...notes]));\n        setActiveNote(0);\n      } else if (!activeNote) {\n        onNotesChange(serializeNotes([...notes, newNote as INoteRecord]));\n      } else {\n        const newNotes = notes.slice();\n        newNotes.splice(activeIndex + 1, 0, newNote as INoteRecord);\n        onNotesChange(serializeNotes(newNotes));\n        setActiveNote(activeIndex + 1);\n      }\n    }\n    console.log(key, long);\n  };\n\n  return (\n    <div className={mainStyle}>\n      <Button keyVal={Key.Left} onPress={onKeyPress}>\n        &lt;-\n      </Button>\n      <Button keyVal={Key.C} onPress={onKeyPress}>\n        C\n      </Button>\n      <Button keyVal={Key.Right} onPress={onKeyPress}>\n        -&gt;\n      </Button>\n      <Button keyVal={Key.One} onPress={onKeyPress}>\n        1\n      </Button>\n      <Button keyVal={Key.Two} onPress={onKeyPress}>\n        2\n      </Button>\n      <Button keyVal={Key.Three} onPress={onKeyPress}>\n        3\n      </Button>\n      <Button keyVal={Key.Four} onPress={onKeyPress}>\n        4\n      </Button>\n      <Button keyVal={Key.Five} onPress={onKeyPress}>\n        5\n      </Button>\n      <Button keyVal={Key.Six} onPress={onKeyPress}>\n        6\n      </Button>\n      <Button keyVal={Key.Seven} onPress={onKeyPress}>\n        7\n      </Button>\n      <Button keyVal={Key.Eight} onPress={onKeyPress}>\n        8\n      </Button>\n      <Button keyVal={Key.Nine} onPress={onKeyPress}>\n        9\n      </Button>\n      <Button keyVal={Key.Star} onPress={onKeyPress}>\n        *\n      </Button>\n      <Button keyVal={Key.Zero} onPress={onKeyPress}>\n        0\n      </Button>\n      <Button keyVal={Key.Hash} onPress={onKeyPress}>\n        #\n      </Button>\n    </div>\n  );\n};\n","import { INoteRecord } from '../interfaces/INoteRecord';\n\nconst Tone = require('tone');\n\nlet lastSequence: any;\n\nexport function createAudio(notes: Array<INoteRecord>, tempo: number, setActiveNote: (index: number) => void) {\n  Tone.Transport.bpm.value = tempo;\n  if (lastSequence) {\n    lastSequence.stop();\n  }\n  const synth = new Tone.Synth().toMaster();\n  let nextTone = 0;\n\n  const parts: Array<[number, [string, number, number]?]> = [];\n  notes.forEach((note, index) => {\n    const duration = Tone.Time(`${note.duration}n`);\n    if ('tone' in note) {\n      const tone = `${note.tone.toUpperCase()}${note.sharp ? '#' : ''}${2 + note.octave}`;\n      parts.push([nextTone, [tone, duration, index]]);\n    } else {\n      parts.push([nextTone, ['', duration, index]]);\n    }\n    nextTone += duration * (note.extendedLength ? 1.5 : 1);\n  });\n\n  const sequence = (lastSequence = new Tone.Part((time: number, [tone, duration, index]: [string, number, number]) => {\n    if (tone) {\n      synth.triggerAttackRelease(tone, duration, time);\n    }\n    setActiveNote(index);\n  }, parts));\n\n  sequence.loop = false;\n  sequence.playbackRate = 1;\n\n  Tone.Transport.start();\n\n  return sequence;\n}\n","import { css } from 'emotion';\nimport * as React from 'react';\n\nimport { INoteRecord } from '../interfaces/INoteRecord';\nimport { createAudio } from '../services/audio';\n\nconst mainStyle = css`\n  font-size: 20px;\n  padding: 8px 4px;\n  display: flex;\n  line-height: 24px;\n`;\n\nconst separatorStyle = css`\n  flex: 1;\n`;\n\nconst tempoInputStyle = css`\n  width: 50px;\n`;\n\nexport const Player: React.FC<{\n  notes: Array<INoteRecord>;\n  tempo: number;\n  onTempoChange(value: number): void;\n  setActiveNote(index: number): void;\n}> = ({ notes, tempo, onTempoChange, setActiveNote }) => {\n  const audio = React.useMemo(() => (notes.length ? createAudio(notes, tempo, setActiveNote) : null), [\n    notes,\n    tempo,\n    setActiveNote,\n  ]);\n\n  React.useEffect(() => {\n    return () => {\n      if (audio) {\n        audio.stop();\n      }\n    };\n  }, [audio]);\n\n  const onPlay = () => {\n    if (audio) {\n      audio.stop();\n      audio.start();\n    }\n  };\n\n  const onStop = () => {\n    if (audio) {\n      audio.stop();\n    }\n  };\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTempo = parseInt(e.target.value, 10) || 100;\n    onTempoChange(newTempo);\n  };\n\n  return (\n    <div className={mainStyle}>\n      <button type=\"button\" onClick={onPlay}>\n        Play\n      </button>\n      <button type=\"button\" onClick={onStop}>\n        Stop\n      </button>\n      <div className={separatorStyle} />\n      Tempo:\n      <input className={tempoInputStyle} type=\"number\" value={tempo} onChange={onChange} />\n    </div>\n  );\n};\n","/* eslint-disable react/jsx-no-bind */\nimport { css } from 'emotion';\nimport * as React from 'react';\n\nimport { parseNotes, serializeNotes } from '../services/inputParser';\nimport { Keyboard } from '../components/Keyboard';\nimport { Player } from '../components/Player';\nimport { ISong } from '../interfaces/ISong';\nimport { useHistory } from 'react-router-dom';\nimport { PRIMARY_TEXT_COLOR, PRIMARY_COLOR } from '../consts/colors';\n\nconst mainStyle = css`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst inputStyle = css`\n  width: calc(100% - 32px);\n  font-size: 24px;\n  padding: 16px;\n  flex: 1;\n`;\n\nconst toolbarStyle = css`\n  display: flex;\n  padding: 8px 4px 0;\n  line-height: 24px;\n`;\n\nconst nameStyle = css`\n  flex: 1;\n  font-size: 24px;\n  text-align: center;\n`;\n\nconst activeStyle = css`\n  background: ${PRIMARY_TEXT_COLOR};\n  outline: 1px solid ${PRIMARY_TEXT_COLOR};\n  color: ${PRIMARY_COLOR};\n  display: inline-block;\n  height: 1em;\n\n  &:empty {\n    margin-bottom: -4px;\n  }\n`;\n\nexport const Song: React.FC<{\n  song: Partial<ISong>;\n  onSave(song: Partial<ISong>, data: Partial<ISong>): string;\n  history: { goBack(): void };\n}> = ({ song, onSave, history }) => {\n  const [notes, setNotes] = React.useState(serializeNotes(song.notes || []));\n  const [active, setActive] = React.useState(-1);\n  const [parsed, setParsed] = React.useState(song.notes || []);\n  const [name, setName] = React.useState(song.name || '');\n  const [tempo, setTempo] = React.useState(song.tempo || 100);\n  const onNotesChange = (rawNotes: string) => {\n    setNotes(rawNotes);\n    setParsed(parseNotes(rawNotes));\n  };\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => setName(e.target.value);\n  const onTempoChange = (value: number) => setTempo(value);\n  const historyInstance = useHistory();\n  const onSaveClick = () => {\n    const id = onSave(song, {\n      name,\n      tempo,\n      notes: parsed,\n    });\n\n    if (id !== song.id) {\n      historyInstance.replace(`/${id}`);\n    }\n  };\n\n  const onBackClick = () => {\n    history.goBack();\n  };\n\n  const setActiveNote = React.useCallback(\n    (index: number) => {\n      setActive(index);\n    },\n    [setActive],\n  );\n\n  let notesHtml = notes\n    .split(/\\s+/g)\n    .map((note, index) => `<span class=\"${index === active ? activeStyle : ''}\">${note}</span>`)\n    .join(' ');\n\n  notesHtml = `<span class=\"${active === -1 ? activeStyle : ''}\"></span>${notesHtml}<span class=\"${\n    active === parsed.length ? activeStyle : ''\n  }\"></span>`;\n\n  return (\n    <div className={mainStyle}>\n      <div className={toolbarStyle}>\n        <button type=\"button\" onClick={onBackClick}>\n          Back\n        </button>\n        <input className={nameStyle} value={name} onChange={onNameChange} placeholder=\"Song name\" />\n        <button type=\"button\" onClick={onSaveClick}>\n          Save\n        </button>\n      </div>\n      <div\n        contentEditable\n        className={inputStyle}\n        onInput={(e: React.ChangeEvent<HTMLDivElement>) => onNotesChange(e.target.innerText)}\n        dangerouslySetInnerHTML={{ __html: notesHtml }}\n      />\n      <Player notes={parsed} onTempoChange={onTempoChange} tempo={tempo} setActiveNote={setActiveNote} />\n      <Keyboard activeIndex={active} setActiveNote={setActiveNote} notes={parsed} onNotesChange={onNotesChange} />\n    </div>\n  );\n};\n","/* eslint-disable react/jsx-no-bind */\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ISong } from '../interfaces/ISong';\nimport { css } from 'emotion';\nimport { PRIMARY_TEXT_COLOR, PRIMARY_COLOR } from '../consts/colors';\n\nconst listStyle = css`\n  margin: 0;\n  padding: 4px;\n  list-style: none;\n`;\n\nconst linkStyle = css`\n  font-size: 24px;\n  cursor: pointer;\n  padding: 6px;\n  text-decoration: none;\n  display: block;\n  color: ${PRIMARY_TEXT_COLOR};\n\n  &:hover {\n    background: ${PRIMARY_TEXT_COLOR};\n    color: ${PRIMARY_COLOR};\n  }\n`;\n\nexport const SongList: React.FC<{\n  songs: Array<ISong>;\n}> = ({ songs }) => {\n  return (\n    <ul className={listStyle}>\n      {songs.map((song) => (\n        <li key={song.name}>\n          <Link className={linkStyle} to={`/${song.id}`}>\n            {song.name}\n          </Link>\n        </li>\n      ))}\n      <li>\n        <Link className={linkStyle} to=\"/new\">\n          New song\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","/* eslint-disable react/jsx-no-bind */\nimport { css } from 'emotion';\nimport * as React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { v1 as uuidv1 } from 'uuid';\n\nimport { Footer } from '../components/Footer';\nimport { Header } from '../components/Header';\nimport { PRIMARY_COLOR, PRIMARY_TEXT_COLOR } from '../consts/colors';\nimport { Song } from './Song';\nimport { PRESETS } from '../consts/presets';\nimport { parseNotes } from '../services/inputParser';\nimport { ISong } from '../interfaces/ISong';\nimport { SongList } from './SongList';\nimport { Tone } from '../enums/Tone';\n\nconst layoutStyle = css`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst mainStyle = css`\n  flex: 1;\n  background: ${PRIMARY_COLOR};\n  color: ${PRIMARY_TEXT_COLOR};\n  font-size: 20px;\n  font-family: VT323, monospace;\n`;\n\nconst saved: Array<ISong> | null = JSON.parse(localStorage.getItem('saved-songs') || 'null');\nconst presets = saved\n  ? saved.map((s) => ({ ...s, notes: s.notes.map((n) => ('tone' in n ? { ...n, tone: n.tone[0] as Tone } : n)) }))\n  : PRESETS.map((preset) => ({ ...preset, notes: parseNotes(preset.notes) }));\n\nexport const App = () => {\n  const [songs, setSongs] = React.useState(presets);\n\n  const onSaveClick = (song: Partial<ISong>, data: Partial<ISong>): string => {\n    if (songs.includes(song as ISong)) {\n      Object.assign(song, data);\n      return song.id as string;\n    } else {\n      const id = uuidv1();\n      const newSongList: Array<ISong> = [...songs, { name: 'Undefined', ...data, id } as ISong];\n      localStorage.setItem('saved-songs', JSON.stringify(newSongList));\n      setSongs(newSongList);\n      return id;\n    }\n  };\n\n  return (\n    <div className={layoutStyle}>\n      <Header />\n      <main className={mainStyle}>\n        <HashRouter>\n          <Route path=\"/\" exact render={() => <SongList songs={songs} />} />\n          <Route\n            path=\"/:id\"\n            render={(props) => {\n              const song = songs.find((item) => item.id === props.match.params.id) || {};\n              return <Song {...props} song={song} onSave={onSaveClick} />;\n            }}\n          />\n        </HashRouter>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n","export const PRESETS = [\n  {\n    id: 'sample-1',\n    name: 'Europe - The final countdown',\n    tempo: 125,\n    notes:\n      '4- 8- 16b2 16a2 4b2 4e2 4- 8- 16c3 16b2 8c3 8b2 4a2 4- 8- 16c3 16b2 4c3 4e2 4- 8- 16a2 16g2 8a2 8g2 8#f2 8a2 4g2 8- 16#f2 16g2 4a2 8- 16g2 16a2 8b2 8a2 8g2 8#f2 4e2 4c3 2b2 4- 16b2 16c3 16b2 16a2 1b2',\n  },\n  {\n    id: 'sample-2',\n    name: 'A-ha - Take on me',\n    tempo: 100,\n    notes:\n      '8- 16#a1 16#a1 16#a1 8#f1 8#d1 8#g1 8#g1 16#g1 16c2 16c2 16#c2 16#d2 16#c2 16#c2 16#c2 8#g1 8#f1 8#a1 8#a1 16#a1 16#g1 16#g1 16#a1 16#g1 16#a1 16#a1 16#a1 8#f1 8#d1 8#g1 8#g1 16#g1 16c2 16c2 16#c2 16#d2 16#c2 16#c2 16#c2 8#g1 8#f1 8#a1 8#a1',\n  },\n];\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { injectGlobal } from 'emotion';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './containers/App';\nimport { SECONDARY_TEXT_COLOR, SECONDARY_COLOR, PRIMARY_TEXT_COLOR, PRIMARY_COLOR } from './consts/colors';\n\nimport * as serviceWorker from './serviceWorker';\n\ninjectGlobal`\n  html, body {\n    margin: 0;\n    height: 100%;\n    background: ${SECONDARY_COLOR};\n  }\n\n  #root {\n    height: 100%;\n    font-family: Quicksand, sans-serif;\n    font-size: 12px;\n    font-weight: 400;\n    color: ${SECONDARY_TEXT_COLOR};\n  }\n\n  button {\n    appearence: none;\n    border: 1px solid ${PRIMARY_TEXT_COLOR};\n    background: transparent;\n    font-family: VT323, monospace;\n    font-size: 20px;\n    margin: 0 4px;\n    outline: none;\n    color: ${PRIMARY_TEXT_COLOR};\n    cursor: pointer;\n  \n    &:hover {\n      background: ${PRIMARY_TEXT_COLOR};\n      color: ${PRIMARY_COLOR};\n    }\n  }\n\n  input,\n  [contenteditable] {\n    border: none;\n    background: transparent;\n    font-family: VT323, monospace;\n    font-size: 20px;\n    color: ${PRIMARY_TEXT_COLOR};\n    outline: none;\n  }\n`;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
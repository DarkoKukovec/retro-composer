{"version":3,"sources":["../node_modules/react/index.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/@emotion/sheet/dist/sheet.browser.esm.js","../node_modules/@emotion/stylis/dist/stylis.browser.esm.js","../node_modules/@emotion/cache/dist/cache.browser.esm.js","../node_modules/@emotion/hash/dist/hash.browser.esm.js","../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../node_modules/@emotion/memoize/dist/memoize.browser.esm.js","../node_modules/@emotion/serialize/dist/serialize.browser.esm.js","../node_modules/@emotion/utils/dist/utils.browser.esm.js","../node_modules/create-emotion/dist/create-emotion.browser.esm.js","../node_modules/emotion/dist/emotion.esm.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/object-assign/index.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../webpack:/Tone/webpack/universalModuleDefinition","../webpack:/Tone/webpack/bootstrap","../webpack:/Tone/Tone/core/Tone.js","../webpack:/Tone/Tone/shim/AudioNode.js","../webpack:/Tone/Tone/core/AudioNode.js","../webpack:/Tone/Tone/shim/ConstantSourceNode.js","../webpack:/Tone/Tone/signal/Signal.js","../webpack:/Tone/Tone/core/Gain.js","../webpack:/Tone/Tone/type/Type.js","../webpack:/Tone/Tone/signal/Multiply.js","../webpack:/Tone/Tone/source/Source.js","../webpack:/Tone/Tone/shim/WaveShaperNode.js","../webpack:/Tone/Tone/signal/WaveShaper.js","../webpack:/Tone/Tone/effect/Effect.js","../webpack:/Tone/Tone/component/Filter.js","../webpack:/Tone/Tone/component/Merge.js","../webpack:/Tone/Tone/shim/AudioBuffer.js","../webpack:/Tone/Tone/core/Buffer.js","../webpack:/Tone/Tone/component/LFO.js","../webpack:/Tone/Tone/signal/Subtract.js","../webpack:/Tone/Tone/core/Param.js","../webpack:/Tone/Tone/effect/StereoEffect.js","../webpack:/Tone/Tone/core/Transport.js","../webpack:/Tone/Tone/source/Oscillator.js","../webpack:/Tone/Tone/core/Delay.js","../webpack:/Tone/Tone/component/Split.js","../webpack:/Tone/Tone/core/Context.js","../webpack:/Tone/Tone/instrument/Instrument.js","../webpack:/Tone/Tone/signal/AudioToGain.js","../webpack:/Tone/Tone/component/CrossFade.js","../webpack:/Tone/Tone/core/Timeline.js","../webpack:/Tone/Tone/instrument/Monophonic.js","../webpack:/Tone/Tone/signal/Scale.js","../webpack:/Tone/Tone/component/Volume.js","../webpack:/Tone/Tone/signal/Zero.js","../webpack:/Tone/Tone/signal/Add.js","../webpack:/Tone/Tone/signal/SignalBase.js","../webpack:/Tone/Tone/component/AmplitudeEnvelope.js","../webpack:/Tone/Tone/source/BufferSource.js","../webpack:/Tone/Tone/effect/FeedbackEffect.js","../webpack:/Tone/Tone/core/TimelineState.js","../webpack:/Tone/Tone/core/Emitter.js","../webpack:/Tone/Tone/shim/AnalyserNode.js","../webpack:/Tone/Tone/component/Analyser.js","../webpack:/Tone/Tone/source/OmniOscillator.js","../webpack:/Tone/Tone/instrument/Synth.js","../webpack:/Tone/Tone/source/Noise.js","../webpack:/Tone/Tone/core/Master.js","../webpack:/Tone/Tone/component/FrequencyEnvelope.js","../webpack:/Tone/Tone/signal/ScaleExp.js","../webpack:/Tone/Tone/component/Compressor.js","../webpack:/Tone/Tone/shim/AudioContext.js","../webpack:/Tone/Tone/type/TransportTime.js","../webpack:/Tone/Tone/type/Frequency.js","../webpack:/Tone/Tone/component/Envelope.js","../webpack:/Tone/Tone/shim/StereoPannerNode.js","../webpack:/Tone/Tone/component/Panner.js","../webpack:/Tone/Tone/source/FMOscillator.js","../webpack:/Tone/Tone/source/PulseOscillator.js","../webpack:/Tone/Tone/event/Event.js","../webpack:/Tone/Tone/component/MidSideMerge.js","../webpack:/Tone/Tone/component/MidSideSplit.js","../webpack:/Tone/Tone/component/LowpassCombFilter.js","../webpack:/Tone/Tone/type/Ticks.js","../webpack:/Tone/Tone/core/TransportEvent.js","../webpack:/Tone/Tone/source/TickSource.js","../webpack:/Tone/Tone/component/Follower.js","../webpack:/Tone/Tone/component/FeedbackCombFilter.js","../webpack:/Tone/Tone/component/MultibandSplit.js","../webpack:/Tone/Tone/signal/Pow.js","../webpack:/Tone/Tone/type/TimeBase.js","../webpack:/Tone/Tone/type/Time.js","../webpack:/Tone/Tone/shim/OscillatorNode.js","../webpack:/Tone/Tone/source/OscillatorNode.js","../webpack:/Tone/Tone/source/Player.js","../webpack:/Tone/Tone/instrument/MonoSynth.js","../webpack:/Tone/Tone/source/FatOscillator.js","../webpack:/Tone/Tone/source/AMOscillator.js","../webpack:/Tone/Tone/source/PWMOscillator.js","../webpack:/Tone/Tone/event/Part.js","../webpack:/Tone/Tone/event/Loop.js","../webpack:/Tone/Tone/effect/StereoXFeedbackEffect.js","../webpack:/Tone/Tone/effect/MidSideEffect.js","../webpack:/Tone/Tone/effect/Convolver.js","../webpack:/Tone/Tone/signal/Modulo.js","../webpack:/Tone/Tone/core/OfflineContext.js","../webpack:/Tone/Tone/core/Offline.js","../webpack:/Tone/Tone/core/Buffers.js","../webpack:/Tone/Tone/control/CtrlPattern.js","../webpack:/Tone/Tone/core/TransportRepeatEvent.js","../webpack:/Tone/Tone/core/IntervalTimeline.js","../webpack:/Tone/Tone/signal/TickSignal.js","../webpack:/Tone/Tone/core/Clock.js","../webpack:/Tone/Tone/signal/GreaterThanZero.js","../webpack:/Tone/Tone/signal/GreaterThan.js","../webpack:/Tone/Tone/component/ScaledEnvelope.js","../webpack:/Tone/Tone/signal/Abs.js","../webpack:/Tone/Tone/component/Solo.js","../webpack:/Tone/Tone/signal/EqualPowerGain.js","../webpack:/Tone/Tone/signal/Negate.js","../webpack:/Tone/Tone/component/PanVol.js","../webpack:/Tone/Tone/shim/OfflineAudioContext.js","../webpack:/Tone/Tone/version.js","../webpack:/Tone/Tone/type/Midi.js","../webpack:/Tone/Tone/source/UserMedia.js","../webpack:/Tone/Tone/source/Players.js","../webpack:/Tone/Tone/source/GrainPlayer.js","../webpack:/Tone/Tone/signal/TransportTimelineSignal.js","../webpack:/Tone/Tone/signal/Normalize.js","../webpack:/Tone/Tone/signal/GainToAudio.js","../webpack:/Tone/Tone/instrument/Sampler.js","../webpack:/Tone/Tone/instrument/PolySynth.js","../webpack:/Tone/Tone/instrument/PluckSynth.js","../webpack:/Tone/Tone/instrument/NoiseSynth.js","../webpack:/Tone/Tone/instrument/MetalSynth.js","../webpack:/Tone/Tone/instrument/MembraneSynth.js","../webpack:/Tone/Tone/instrument/FMSynth.js","../webpack:/Tone/Tone/instrument/DuoSynth.js","../webpack:/Tone/Tone/instrument/AMSynth.js","../webpack:/Tone/Tone/event/Sequence.js","../webpack:/Tone/Tone/event/Pattern.js","../webpack:/Tone/Tone/effect/Vibrato.js","../webpack:/Tone/Tone/effect/Tremolo.js","../webpack:/Tone/Tone/effect/StereoWidener.js","../webpack:/Tone/Tone/effect/StereoFeedbackEffect.js","../webpack:/Tone/Tone/effect/Reverb.js","../webpack:/Tone/Tone/effect/PitchShift.js","../webpack:/Tone/Tone/effect/PingPongDelay.js","../webpack:/Tone/Tone/effect/Phaser.js","../webpack:/Tone/Tone/effect/JCReverb.js","../webpack:/Tone/Tone/effect/Freeverb.js","../webpack:/Tone/Tone/effect/FeedbackDelay.js","../webpack:/Tone/Tone/effect/Distortion.js","../webpack:/Tone/Tone/effect/Chorus.js","../webpack:/Tone/Tone/effect/Chebyshev.js","../webpack:/Tone/Tone/effect/BitCrusher.js","../webpack:/Tone/Tone/effect/AutoWah.js","../webpack:/Tone/Tone/effect/AutoPanner.js","../webpack:/Tone/Tone/effect/AutoFilter.js","../webpack:/Tone/Tone/core/Listener.js","../webpack:/Tone/Tone/core/Draw.js","../webpack:/Tone/Tone/core/Bus.js","../webpack:/Tone/Tone/control/CtrlRandom.js","../webpack:/Tone/Tone/control/CtrlMarkov.js","../webpack:/Tone/Tone/control/CtrlInterpolate.js","../webpack:/Tone/Tone/component/Waveform.js","../webpack:/Tone/Tone/component/Panner3D.js","../webpack:/Tone/Tone/component/MultibandCompressor.js","../webpack:/Tone/Tone/component/Mono.js","../webpack:/Tone/Tone/component/MidSideCompressor.js","../webpack:/Tone/Tone/component/Meter.js","../webpack:/Tone/Tone/component/Limiter.js","../webpack:/Tone/Tone/component/Gate.js","../webpack:/Tone/Tone/component/FFT.js","../webpack:/Tone/Tone/component/EQ3.js","../webpack:/Tone/Tone/component/Channel.js","../webpack:/Tone/(webpack)/buildin/global.js","../webpack:/Tone/Tone/index.js"],"names":["module","exports","require","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","StyleSheet","options","this","isSpeedy","undefined","speedy","tags","ctr","nonce","key","container","before","_proto","prototype","insert","rule","_tag","tag","document","createElement","setAttribute","appendChild","createTextNode","createStyleElement","length","nextSibling","insertBefore","push","sheet","i","styleSheets","ownerNode","sheetForTag","isImportRule","charCodeAt","insertRule","cssRules","e","process","flush","forEach","parentNode","removeChild","stylis_min","W","X","d","c","h","trim","split","ia","a","m","b","Z","v","n","replace","F","indexOf","P","substring","w","L","ja","ka","test","aa","G","ba","la","ma","R","na","ea","oa","H","q","g","x","A","S","call","B","U","prefix","D","z","M","k","y","C","K","u","l","r","I","t","J","f","p","N","charAt","ca","O","join","da","fa","Y","E","ha","Q","use","T","set","toSheet","block","Sheet","current","ruleSheet","context","content","selectors","parents","line","column","ns","depth","at","delimiter","createCache","stylisOptions","stylis","Stylis","inserted","head","_insert","nodes","querySelectorAll","Array","node","getAttribute","id","stylisPlugins","selector","serialized","shouldCache","name","styles","cache","registered","murmurhash2_32_gc","str","toString","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","memoize","hyphenateRegex","animationRegex","isCustomProperty","property","isProcessableValue","processStyleName","fn","arg","styleName","toLowerCase","processStyleValue","match","p1","p2","cursor","next","unitless","handleInterpolation","mergedProps","interpolation","couldBeSelectorInterpolation","__emotion_styles","anim","obj","string","isArray","_key","interpolated","_i","createStringFromObject","previousCursor","result","cached","labelPattern","serializeStyles","args","stringMode","lastIndex","identifierName","exec","hashString","getRegisteredStyles","registeredStyles","classNames","rawClassName","className","insertStyles","isStringTag","insertWithoutScoping","merge","css","classnames","cls","toAdd","createEmotion","compat","_len","arguments","cx","_len4","_key4","injectGlobal","_len3","_key3","keyframes","_len2","_key2","animation","hydrate","ids","bind","_createEmotion","_slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","_s","done","err","TypeError","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","test3","letter","keys","shouldUseNative","target","source","from","symbols","to","s","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","for","encodeURIComponent","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","props","refs","updater","isReactComponent","setState","Error","forceUpdate","constructor","isPureReactComponent","ref","__self","__source","children","defaultProps","$$typeof","type","_owner","pop","keyPrefix","func","count","escape","V","Children","toArray","only","createRef","Component","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","render","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","Profiler","StrictMode","Suspense","cloneElement","createFactory","isValidElement","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","default","extractEvents","eventTypes","phasedRegistrationNames","registrationName","dependencies","apply","onError","pa","qa","sa","ua","va","wa","currentTarget","ra","xa","concat","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ba","Ca","injectEventPluginOrder","injectEventPluginsByName","Da","stateNode","disabled","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","Pa","Qa","Ra","Sa","Ta","Ua","Wa","displayName","Xa","_debugOwner","_debugSource","fileName","lineNumber","return","Ya","window","Za","$a","ab","bb","cb","db","eb","fb","gb","hb","ib","jb","kb","Map","lb","mb","nb","ob","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","sb","tb","toUpperCase","ub","vb","qb","isNaN","rb","pb","removeAttribute","setAttributeNS","wb","nodeName","yb","_valueTracker","getOwnPropertyDescriptor","get","defineProperty","configurable","enumerable","getValue","setValue","stopTracking","xb","zb","checked","Ab","defaultChecked","defaultValue","_wrapperState","initialChecked","Bb","initialValue","controlled","Cb","Eb","Fb","Gb","ownerDocument","activeElement","Ib","Hb","Jb","selected","defaultSelected","Kb","dangerouslySetInnerHTML","Lb","Mb","Nb","textContent","xlinkHref","Ob","html","mathml","svg","Pb","Qb","Rb","Sb","MSApp","execUnsafeLocalFunction","namespaceURI","innerHTML","valueOf","firstChild","Tb","lastChild","nodeType","nodeValue","Ub","Vb","animationend","animationiteration","animationstart","transitionend","Wb","Xb","Yb","style","transition","Zb","$b","ac","bc","cc","ec","alternate","effectTag","fc","memoizedState","dehydrated","gc","ic","child","sibling","hc","jc","kc","lc","mc","nc","oc","pc","qc","rc","sc","tc","uc","vc","zc","blockedOn","topLevelType","eventSystemFlags","nativeEvent","Ac","delete","pointerId","Bc","Cc","Ec","Fc","unstable_runWithPriority","priority","containerInfo","Gc","Hc","Ic","Jc","shift","Kc","unstable_scheduleCallback","unstable_NormalPriority","Lc","Mc","srcElement","correspondingUseElement","Nc","Oc","dispatchConfig","Pc","_targetInst","Qc","Rc","Sc","Tc","Uc","Interface","isDefaultPrevented","defaultPrevented","returnValue","Wc","eventPool","Xc","destructor","Vc","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","extend","Yc","animationName","elapsedTime","pseudoElement","Zc","clipboardData","$c","view","detail","ad","relatedTarget","bd","keyCode","charCode","cd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","dd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ed","Alt","Control","Meta","Shift","gd","getModifierState","hd","location","ctrlKey","shiftKey","altKey","metaKey","repeat","locale","which","jd","kd","ld","md","nd","screenX","screenY","clientX","clientY","pageX","pageY","button","buttons","fromElement","toElement","movementX","movementY","od","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","pd","dataTransfer","qd","touches","targetTouches","changedTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","ud","vd","wd","yd","zd","Ad","Bd","Cd","Dd","bubbled","captured","eventPriority","Ed","getEventPriority","Fd","unstable_UserBlockingPriority","Gd","Hd","Id","Jd","Kd","targetInst","ancestors","Ld","Md","Nd","Od","Pd","addEventListener","Qd","Dc","Rd","Sd","WeakMap","xc","Set","yc","has","add","Td","gridArea","lineClamp","Ud","Vd","Wd","setProperty","Xd","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","Yd","Zd","is","$d","ae","be","body","ce","de","offset","fe","HTMLIFrameElement","contentWindow","href","ge","contentEditable","he","ie","je","ke","le","me","ne","autoFocus","oe","__html","pe","setTimeout","qe","clearTimeout","re","se","previousSibling","data","te","Math","random","ue","ve","we","xe","ye","ze","Ae","Be","Ce","De","Ee","Fe","Ge","He","documentMode","Ie","Je","Ke","Le","beforeInput","compositionEnd","compositionStart","compositionUpdate","Me","Ne","Oe","Pe","Se","Qe","char","Re","Te","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","Ue","Ve","change","We","Xe","Ye","Ze","$e","af","bf","cf","detachEvent","df","ef","attachEvent","ff","gf","hf","lf","jf","_isInputEventSupported","kf","mouseEnter","mouseLeave","pointerEnter","pointerLeave","mf","defaultView","parentWindow","of","pf","qf","rf","sf","select","tf","uf","vf","wf","xf","start","selectionStart","end","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","yf","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","Af","Bf","Cf","Df","Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Ff","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","unstable_cancelCallback","Of","unstable_shouldYield","Pf","unstable_requestPaint","Qf","unstable_now","Rf","unstable_getCurrentPriorityLevel","Sf","unstable_ImmediatePriority","Tf","Uf","Vf","unstable_LowPriority","Wf","unstable_IdlePriority","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","childExpirationTime","vg","firstContext","expirationTime","wg","xg","observedBits","responders","yg","zg","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstEffect","lastEffect","firstCapturedEffect","lastCapturedEffect","Ag","Bg","suspenseConfig","payload","callback","nextEffect","Cg","Dg","updateQueue","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Sg","_reactInternalFiber","Pg","Qg","Rg","Tg","shouldComponentUpdate","Ug","contextType","state","Vg","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Wg","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Xg","Yg","_stringRef","Zg","$g","index","ah","bh","mode","elementType","ch","implementation","dh","eh","ta","fh","gh","hh","ih","jh","kh","lh","mh","documentElement","tagName","nh","oh","ph","qh","memoizedProps","revealOrder","rh","responder","sh","th","uh","vh","wh","xh","yh","zh","Ah","Bh","Ch","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","queue","baseUpdate","Oh","Ph","Qh","lastRenderedReducer","dispatch","action","last","lastRenderedState","eagerReducer","eagerState","Rh","Sh","Th","Uh","create","destroy","deps","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","readContext","useResponder","useDeferredValue","useTransition","unstable_next","ci","di","ei","fi","gi","hi","pendingProps","ii","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","vi","getDerivedStateFromError","wi","pendingContext","Hi","Ii","Ji","Ki","xi","retryTime","yi","fallback","unstable_avoidThisFallback","zi","Ai","isBackwards","rendering","tail","tailExpiration","tailMode","Bi","Ci","Li","Mi","Ni","stack","onClick","onclick","Oi","WeakSet","Pi","Si","Ri","Ti","Ui","__reactInternalSnapshotBeforeUpdate","Vi","Wi","componentWillUnmount","Qi","Xi","Yi","Zi","$i","instance","_reactRootContainer","aj","wasMultiple","multiple","bj","display","cj","dj","then","ej","fj","element","gj","hj","ij","componentDidCatch","jj","componentStack","gk","kj","ceil","lj","mj","nj","oj","pj","qj","rj","sj","tj","uj","vj","wj","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","timeoutMs","Kj","Lj","Mj","Nj","Oj","lastExpiredTime","Pj","firstPendingTime","lastPingedTime","nextKnownPendingLevel","callbackExpirationTime","callbackPriority","callbackNode","Qj","timeout","Rj","Sj","Tj","Uj","Vj","Wj","finishedWork","finishedExpirationTime","lastSuspendedTime","Xj","timeoutHandle","Yj","busyMinDurationMs","busyDelayMs","Zj","bk","ck","pingCache","dk","ek","fk","size","createElementNS","ik","firstSuspendedTime","rangeCount","Db","focusedElem","selectionRange","jk","ee","contains","compareDocumentPosition","min","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Dh","dc","fd","hk","Eh","Fh","xk","Di","Ei","Fi","xd","Gi","kk","lk","mk","hidden","Va","nk","unstable_observedBits","pk","pendingChildren","qk","rk","sk","tk","uk","vk","wc","_internalRoot","wk","zk","hasAttribute","yk","Bk","Ak","unmount","JSON","stringify","form","ak","Ck","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","flushSync","Events","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","ok","overrideHookState","overrideProps","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","bundleType","rendererPackageName","Dk","Ek","MessageChannel","unstable_forceFrameRate","performance","cancelAnimationFrame","requestAnimationFrame","floor","port2","port1","onmessage","postMessage","sortIndex","startTime","priorityLevel","delay","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","unstable_Profiling","modules","__webpack_require__","Tone","sameConstructor","tmpObj","params","paramLoop","parent","attrSplit","attr","subRet","j","ret","currentUnit","inputNumber","dstNode","srcNode","bDone","writable","Started","Stopped","Paused","TempConstructor","hasPromises","resolve","__webpack_exports__","testSrcNode","testDstNode","AudioNode","nativeConnect","inputs","outputs","outputNum","ConstantSourceNode","AudioContext","units","convert","_core_Tone__WEBPACK_IMPORTED_MODULE_0__","gain","Default","Time","Frequency","TransportTime","Ticks","NormalRange","AudioRange","Decibels","Interval","BPM","Positive","Gain","Cents","Degrees","MIDI","BarsBeatsSixteenths","Samples","Hertz","Note","Milliseconds","Seconds","Notation","freq","volume","mute","event","duration","stateEvent","array","WaveShaperNode","isFinite","wet","frequency","rolloff","cascadingCount","filter","len","freqValues","phaseValues","filterClone","magValues","totalResponse","channels","AudioBuffer","channel","dest","reverse","onload","onerror","buffer","load","isMultidimensional","numChannels","outputArray","endSamples","replacement","extension","totalProgress","request","onProgress","catch","success","fail","removeEvents","max","phase","amplitude","currentMax","Linear","Exponential","Target","SetValue","Cancel","previousVal","previous","after","currentVal","endTime","constant","scaling","rampTime","bpm","swing","swingSubdivision","timeSignature","loopStart","loopEnd","PPQ","ticks","amount","tickTime","interval","once","item","timeline","timeSig","subdivision","remainingTicks","ratio","signal","initial","syncedSignal","detune","partials","partialCount","Sine","Triangle","Sawtooth","Square","Custom","periodicWave","partial","values","periodicWaveSize","real","imag","sum","maxValue","twoPi","maxDelay","delayTime","output","AudioContextProperties","AudioContextMethods","clockSource","latencyHint","lookAhead","updateInterval","Promise","closePromise","Ticker","Worker","Timeout","Offline","blobUrl","worker","originalMethod","memory","comparator","nextEvent","midPoint","beginning","lowerBound","upperBound","portamento","onended","loop","fadeIn","fadeOut","curve","playbackRate","fadeInTime","computedDur","fadeOutTime","feedback","ev","eventList","object","emitterFunc","AnalyserNode","smoothing","Waveform","FFT","oldOsc","PulseOscillator","PWMOscillator","Oscillator","FMOscillator","AMOscillator","FatOscillator","baseType","sType","oscillator","envelope","attack","decay","sustain","_noiseBuffers","_noiseCache","channelNum","b0","b1","b2","b3","b4","b5","b6","lastOut","baseFrequency","octaves","exponent","threshold","knee","offlineContext","audioData","decodeAudioDataPromise","midi","regexp","method","note","noteNumber","tr","total","log","octave","scaleIndexToNote","quarters","cbb","dbb","ebb","fbb","gbb","abb","bbb","attackCurve","decayCurve","releaseCurve","velocity","currentValue","decayStart","cosineCurve","rippleCurve","stairsCurve","sineCurve","bounceCurve","out","linear","exponential","bounce","In","Out","cosine","step","ripple","sine","leftWaveShaper","leftGain","rightGain","fan","StereoPannerNode","pan","modulationIndex","modulationType","harmonicity","probability","humanize","reschedulTime","variation","lastEvent","resonance","dampening","tmpEvent","elapsedTicks","offsetEvent","periodStartTime","lastState","elapsedSeconds","seconds","absoluteTicks","lastStateEvent","startTicks","nextTickTime","lowFrequency","highFrequency","parseFloat","hz","samples","matching","expr","quantize","percent","testNotations","power","closestSeconds","closest","sixteenths","measures","OscillatorNode","autostart","computedDuration","connect","stopEvent","filterEnvelope","spread","osc","modulationFrequency","events","ctx","iterations","Infinity","iters","normalize","originalContext","response","baseUrl","isLoaded","UpDown","DownUp","AlternateUp","AlternateDown","Random","RandomWalk","RandomOnce","copy","right","temp","isLeftChild","pivotNode","balance","results","allNodes","IntervalNode","point","previousEvent","ticksUntilTime","segments","rampVal","segmentDur","val1","delta","sol1","val0","tick","when","endTicks","solo","OfflineAudioContext","device","audio","echoCancellation","sampleRate","noiseSuppression","mozNoiseSuppression","constraints","player","playing","overlap","grainSize","urlMap","notes","difference","closestNote","sources","stop","polyphony","voice","bLevel","aLevel","attackNoise","noise","inharmRatios","chain","vel","pitchDecay","modulation","modulationEnvelope","vibratoAmount","vibratoRate","voice0","voice1","pattern","preDelay","noiseR","noiseL","gainNode","pitch","windowSize","factor","maxDelayTime","stages","connectToFreq","filters","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","allpass","fbcf","roomSize","apf","combFilterTunings","allpassFilterFrequencies","allpassL","allpassR","al","ar","distortion","oversample","deg","bits","sensitivity","follower","positionX","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","Buses","sendKnob","integer","rand","needsNormalizing","distribution","lower","upper","retArray","retObj","orientationX","orientationY","orientationZ","panningModel","maxDistance","distanceModel","coneOuterGain","coneOuterAngle","coneInnerAngle","refDistance","rolloffFactor","low","mid","high","side","totalSquared"],"mappings":"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AA,yBAGA47C,uDAMAA,2BACAiC,OASAjC,qDAEA,OADA57C,2CACA,MAOA47C,8CAUA,OATAA,iDACA57C,uBACAA,kBACAA,0BACAA,qBACAA,4BACAA,uBACAA,wBACAA,cACA,MAGAg7C,qFC5EAY,4BAEA,oFACAA,+BACA57C,wBAOAA,iBAOAA,0EAOAA,yDAOAA,gCACAH,aACA87C,WACA/mC,+BAQA5U,iCAOAA,kBAOAA,wBAGAA,uBACAA,mDAGA47C,uDAQAA,2BACAhnC,eACAkpC,cACAC,YACAj3C,IACA+0C,QAUAn8C,OAAOA,eAAeA,EAAtBA,iCACA4e,eACA,mBAEArX,gBAEA,SADA,oFACA,WACA,oDAEAjH,aACA,YAAiB2B,uBAA0BA,IAC3C3B,2BAaAN,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,sBAEArX,gBACA82C,iBACA,IACAC,IADA,gBACAA,WAEA,UACA,8EAEAA,KACAh+C,gBAEAA,wBACA,YAAiB2B,uBAA0BA,IAC3C3B,8BACAA,sBAEAA,2BACA,YAAqBiV,IAAwBA,KAC7C,wCACAgpC,kBACAj+C,oCACAA,8BACAA,oBACAA,0BACAA,mBAGA,+DACA47C,8CAUAA,4DACAsC,8BAMA,IAJA,0CACA,YAEAC,sBACA,IAAgBx8C,IAASA,KAEzB,YADAg0B,gBACA,GACAwoB,OAEA,0BACAC,sBAYA,OAXAp+C,iCACA,wCACAq+C,kBACAA,uBACAA,uCACAA,6BACAA,8BACAC,yBACAC,YAEEztC,YACF,GAOA8qC,8CACAA,iDACA,YAAgBj6C,uBAA0BA,IAC1C3B,8BACAA,sBAYA,OAVAA,mBACAA,kDACAA,yBACAA,iBACAA,oBACAA,YACAA,sBACAA,iBACAA,oBACAA,eACA,MAGAg7C,gFC3MAY,4BAGA4C,4BAEA5C,+BACA57C,wBAOAA,6DAGA,YAAgB2B,IAAcA,IAC9B3B,iCACAA,wCACAA,6BACAA,0CAQAA,wBAOAA,0BAGA47C,sDAMAA,6CASA,OARA57C,gCACAizB,eAEA2oB,iDACA57C,eACAA,gBACAA,0BACAA,kBACA,MAGAg7C,qFCtEAvB,sBACAgF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AAtBA,6BACA4e,eACA,wCAEArX,gBACA64C,qBACA9/C,sBAUAN,OAAOA,eAAeA,EAAtBA,8BACA4e,eACA,8BAEArX,gBACAjH,wBACAA,uDACAA,gDAUAN,OAAOA,eAAeA,EAAtBA,+BACA4e,eACA,+BAEArX,gBACAjH,yBACAA,uDACAA,gDAUAN,OAAOA,eAAeA,EAAtBA,+BACA4e,eACA,oBAEArX,gBACA,eACAg5C,WAEAjgD,cACAA,WACAA,cAWAN,OAAOA,eAAeA,EAAtBA,+BACA4e,eACA,iCAcAs9B,4CAMA,OALAjzC,oEACA3I,uBACAA,oBAEA47C,6DACA,MASAA,wEAQAA,oEAMAA,2CAeA,OAdAA,iDACA57C,0CACAA,2BACAA,sBACAA,8BACAA,yBACAA,sBACAA,iBACAA,uBACAA,kBACAA,oBACAA,eACAA,oBACAA,oBACA,MAGAg7C,8FClTAY,+BAEAA,4BACA57C,wBAOAA,uDAQAA,+BAOAA,kDACAA,wCAGA47C,sDAMAA,gDAMA,OALAA,8CACA57C,oBACAA,eACAA,uBACAA,eACA,MAGAg7C,6FCxDAY,2BAEA,gFACAA,iCAOA57C,+BAMAA,mBAMAA,uBASAA,mBAOAA,yCAEA47C,2CACA57C,gCAIA47C,sDAOAA,0BACAF,6BACAC,WACAtoB,cASA3zB,OAAOA,eAAeA,EAAtBA,iCACA4e,eACA,iBACA,8CAEArX,gBACAjH,sCACAA,uCACAA,qCAUAN,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,gFACAte,+EACAA,gCACA,EACGA,wCACH,EACGA,0CAGHA,wBAWAN,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,gDACAte,uCACA,EAEAA,wBAYA47C,iDACA,oEAkBA,SAjBA,mBACA,yBACA,yBACA,8BACA,2BACA,6BACA,6BACA,gCACA,iCACA,+BACA,kCACA,6BACA,qBACA,QACA,WAaAA,+CACA,mDAQA,SAPA,mBACA,6BACA,6BACA,QACA,WAYAA,0CAOAA,gCACAsE,iCACAC,2CACAC,yBACAC,0BACAC,gCAYA1E,uDAUA,OATApjB,oBACA34B,qBACAG,kBACA4U,6CACA/U,QACA24B,SAEAx4B,sDACAA,gCACA,MASA47C,qDACApjB,oBACA,+BACA/3B,sBACA6e,oEACAzf,IAEA,YACAA,SACE,mDACF,IACA0gD,EADA,iCAGAA,EADA,SACAA,EAEAC,QAEA3gD,gEAEAA,EADE,SACFA,QACE4gD,+CACFzgD,yDACEygD,oDACFzgD,8DAEAS,QAEA,UAWAm7C,mDACApjB,oBACA,6BAMA,OALAx4B,4BACA,QACA0gD,mBAEA1gD,wCACA,MAWA47C,gEAUA,OATA/7C,qBACA8gD,oBACA3gD,kBACA4U,2CACA/U,QACA24B,SAEAx4B,oDACAA,yCACA,MAWA47C,qEAYA,OAXA/7C,qBACAA,8BACA8gD,oBAEA3gD,kBACA4U,gDACA4jB,OACA34B,UAEAG,yDACAA,8CACA,MAiBA47C,4DAIA,OAHA7C,oBACA/4C,qBACAA,yDACA,MAiBA47C,uDAIA,OAHA7C,oBACA/4C,qBACAA,oDACA,MAgBA47C,uDAIA,OAHA7C,oBACA/4C,qBACAA,2CACA,MAiBA47C,yEACA,kDAMA,OALApjB,oBACAx4B,4BAEAA,iCACAA,oCACA,MAWA47C,0DAGA,GAFA/7C,qBAEA,KACA,uDAWA,OATAk5C,oBACA/4C,kBACA4U,2CACA/U,QACA24B,OACAooB,aAEA5gD,sDACAA,mCACA,MAaA47C,gEACAiF,4BACArD,oBACAzE,oBACA/4C,8BAEA,IADA,qBACA,IAAgB2B,WAAmBA,IACnC3B,2CAEA,aAUA47C,4DAKA,OAJApjB,oBACAx4B,uBACAA,qCACAA,kDACA,MASA47C,0DACApjB,oBACA,6BACAx4B,6CAGAA,qCAIA,0BACAygD,2BAyBA,OAxBAhgD,cAEAggD,EACAzgD,4BAEAA,uCAEEygD,IAEFzgD,4BACAygD,+CACAzgD,kCACGygD,qDACHzgD,wCAKAA,kBACA4U,6CACA/U,QACA24B,SAEAx4B,gCACA,MAqBA47C,iDAOA,OANAkF,6BACA9gD,6GACAA,8BAEAA,yBAEA,MASA47C,mEACA,mCAIAA,iEACA,4BAIAA,sEACA,oCAOAA,6CAIA,OAHAA,iD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CACAA,yBAIAyzC,oGCpxBAY,gCAEA,8EACAA,8BAOA57C,sBAOAA,0EAOAA,gEAOAA,gBAOAA,0BAOAA,kCAQAA,oBAOAA,kBAGAD,4DACAC,oDAEAA,uBACAA,wCAGA47C,wDAMAA,+BACAhnC,YACAkpC,cACAsE,SACArC,QACAsC,YACAC,gBAOA1G,2BACA2G,YACAC,oBACAC,oBACAC,gBACAC,iBAQA/G,kDACA57C,oBAEA,mCACAA,mBACAA,WACAA,6CAEAA,iCAGAA,sCACAA,mDACAA,6CAGAw4B,oBACAx4B,2BASA47C,iDAMA,OALA57C,mBACAA,mBACAw4B,oBACAx4B,0BAEA,MASA47C,mDAKA,OAJA57C,kBACAA,8BAEAA,sCACA,MAeA47C,wDAEA,OADAA,+CACA,MAQAA,0DAEA,OADAA,iDACA,MAuBAl8C,OAAOA,eAAeA,EAAtBA,qCACA4e,eACA,mBAEArX,gBACA,0JACA,sBACAjH,gBACAA,qBAEA,0BACAA,6BAEG,CACH,4CACA4iD,6CACA5iD,aACA,yBACAA,6CAGAA,gBAcAN,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,iDAEArX,gBACAjH,uGACAA,8BAEAA,eAmBAN,OAAOA,eAAeA,EAAtBA,6CACA4e,eACA,2BAEArX,gBACA,iBACA47C,4DACAA,IACAjuC,QAEA5U,gDAEAA,UADA,MACAA,EAEA4U,mBAaAgnC,8CACA,oDAIA,OAHAkH,kDACAA,WAEA,GASAlH,+DACA,IACAmH,OAEAC,sBACAC,sBAEAX,IACA,wCACAA,0BACAtiD,yCACA+iD,QACE,CACF,uDACAF,GACAP,mBACAtiD,kCACA4U,OAEAmuC,EADAT,iBAGAtiD,qBAEAA,kBAGA,YAAgBuD,MAAsBA,GACtC,IACAH,EADA,gBAEA,UACA,oCACAA,WACApD,sBACA,MACA,sCACAoD,YACApD,sBACA,MACA,wCACAoD,eACApD,sBACA,MACA,wCAEAoD,EADA,IACAA,sBAEA,EAEApD,sBACA,MACA,sCACAoD,sBACA,MACA,QACA,yDAEA,OACA4/C,sBACAC,uBAEAD,OACAC,QAGA,aAWArH,2DAGA,IAFA,QACAsC,WACA,IAAgBv8C,IAASA,IACzBuhD,yCAEA,UAQAtH,2DAOA,IANA,2CACAoH,OACAC,OACAE,IACAC,YAEA,IAAgBzhD,IAAOA,IACvBwhD,0CAEA,4CAgBAzjD,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,uBAEArX,gBACAjH,iBACAA,8CAYAN,OAAOA,eAAeA,EAAtBA,sCACA4e,eACA,kCAEArX,gBACAjH,0BAEAA,wBAQA47C,kDAaA,OAZAA,8CACA,0BACA57C,2BACAA,uBAEAA,gBACAA,uCACAA,yBACAA,oBACAA,sBACAA,iBACAA,oBACA,MAGAg7C,0FC1dAY,2BAEA,6EACAA,iCAOA57C,gFAOAA,gFAQAA,oCACAqzB,gCACAqoB,0BACA77C,oBAGAG,6BAGA47C,sDAOAA,0BACAyH,WACAC,aAUA5jD,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,yBAQAs9B,6CAMA,OALAA,iDACA57C,6BACAA,qBACAA,4BACAA,oBACA,MAGAg7C,oFCpEAY,4BAGA4C,4BAEA5C,+BACA57C,wBAMAA,gEAGA,YAAgB2B,IAAcA,IAC9B3B,kCACA47C,qDACA57C,8BACAA,2CAQAA,yBAOAA,2BAGA47C,sDAMAA,6CASA,OARA57C,iCACAujD,eAEA3H,iDACA57C,4BACAA,eACAA,gBACAA,oBACA,MAGAg7C,0EChEAwI,kGACAC,ygBAOA7H,6BAEAA,6BAEA,kEAEA,gBACA77C,6CACAA,WACA,mGAKA,IAFAC,wBAEA,0BACAA,uCAIAwjD,sBACAxjD,uCACE8Q,YAEF2yC,sBACAzjD,qCACE8Q,YAOF9Q,gCAOAA,mBAWAA,2BAOAA,+BAOAA,+EAWAA,sCAOAA,mBAEAA,6CAGAA,wCACAA,4BACE8Q,YAGF8qC,sDACAA,2CAOAA,4BACA8H,qBACAC,0BACAC,aACAC,oBAOAjI,yCASAA,0DACAA,4BACAl8C,8BACA4e,eACA,aAEArX,gBACAM,WAaAq0C,wDACAA,4BACAl8C,8BACA4e,eACA,wBAUAs9B,2CACA,iDAQAl8C,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,mBAGAte,YAFAA,6BAYA47C,8CACA,+EACA57C,uBAEA8jD,mBASAlI,6CACA,wBAKA,OAHA57C,6CACA+jD,2BAEA,kBACAnI,sCACE9qC,aAQF8qC,oDACA,sBACA,0BAIA,IAFA,iEACA3qC,sBACA,IAAiBtP,WAAgBA,IACjCsP,OAEA,yCAOA,OANA2vC,iBACAA,8BACAA,WACAA,UACAA,WACA5gD,qBACA,GASA47C,oDAEA,IADA,iBACA,sEACA57C,mCAWA47C,qDACA57C,mBACA,iBAMA,OALAA,oBACAwhC,WACAhJ,SACA3vB,sBAEA,kBAQA+yC,qDAMA,OALA57C,oCACAu9C,UACAv9C,kBAGA,MAYAN,OAAOA,eAAeA,EAAtBA,4CACA4e,eACA,oCAEArX,gBACAjH,iCAWAN,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,wBAWA5e,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,0BAEArX,gBACAjH,uBAmBAN,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,0BAEArX,gBACA,QAEA,GADAjH,oBACA,sBACA,UACA,kBACA4jD,KACA5jD,4BACA,MACA,eACA4jD,KACA5jD,4BACA,MACA,eACA4jD,MACA5jD,4BACA,MACA,cACAA,wCACA4jD,MAIA5jD,iBACAA,2BASA47C,+CACA,oCAMA,aALAA,+CACA57C,uBACAA,kBACAA,yBACAA,oBACA,gBACAA,gCAEAA,sBACE8Q,aAQF,sBAOA9Q,aAOAA,uBAOAA,sDAGAA,qBA2IA,GAnIAgkD,QACAC,gBACAC,kBACAC,mBAQAH,qCAGApI,sEAEA,gBAEA,wNAcAwI,yBACAC,gBAEAA,sCAEArkD,gBAOAgkD,sCACAhkD,oCACAA,sBACAA,kBACE8Q,sCAOFkzC,oCACA,8BACA,IACAhkD,qBACG,SAEHA,0BACAA,yBAEEA,6BACFA,uBAUAN,OAAOA,eAAeA,EAAtBA,4BACA4e,eACA,6BAEArX,gBACAjH,2CACAA,4BACAA,+CAYAN,OAAOA,eAAeA,EAAtBA,kBACA4e,eACA,mBAEArX,gBACAjH,qBACAA,aACAA,uBAQAgkD,qCACAhkD,gBACAq1B,4BACAr1B,oBAEAA,eACAA,yBACAA,4BACAA,oBAQAgkD,+BACAhkD,qBACAA,qBAIA,6CAQA,GAPA47C,sCACAA,2DAEAA,uDAIA,uCACA,UACA,4BACAx2C,MAEA,8CAEAiO,0DAECuoC,4DAEDvoC,sDAGA2nC,uFCjkBAY,iCAGA77C,wDACA67C,+BAOA57C,wDASAA,gCACAA,yBAQAA,0BAGA47C,2DAMAA,+BAEAyB,UASAzB,4DAMAA,6DAgBAA,+CAGA,OAFA57C,oCACAA,qCACA,MASA47C,yDACA,mCACA57C,mBACA,4CACAw4B,OACA3vB,2CACA8F,OACA21C,iBACGxzC,cACH9Q,+BACE8Q,YAOF8qC,iDASA,OARA57C,2CACA47C,gCAEA57C,yBACAA,+BACAA,gDACAA,mDAEA,MAeA47C,sEAKA,OAJApjB,oBACAglB,oBACAx9C,0BACAA,yBACA,MAOA47C,kDAQA,OAPAA,iDACA57C,uBACAA,kBACAA,2BACAA,iBACAA,cACAA,2BACA,MAGAg7C,yFChJAY,iCAEAA,gCAKA57C,wEACA,kBAIA47C,6DAMAA,mDAIA,OAHAA,kDACA57C,qBACAA,gBACA,MAGAg7C,2GCTAY,gCAEAA,+BACA57C,wBAMAA,wCAMAA,wCASAA,sFAOAA,+CAOAA,+CAOAA,sCAOAA,oCAGAA,4BACAA,4BACAA,+CACA47C,8CACA57C,oCACAA,kDACAA,wBAGA47C,0DAMAA,iDAgBA,OAfAA,iDACA57C,uBACAA,4BACAA,uBACAA,4BACAA,uBACAA,oBACAA,eACAA,uBACAA,kBACAA,eACAA,iBACAA,YACAA,iBACAA,YACA,MAGAg7C,8EC5GAY,8BAEA,kEACAA,qBAOA57C,kBAOAA,sBAGA47C,qCAOAA,6BACA2I,YAUA7kD,OAAOA,eAAeA,EAAtBA,qCACA4e,eACA,gCAUAs9B,6CAEA,6BACA,oEAEA2B,wBACA,2BAGA,GAFAv9C,+BAEA,yBACA,8BACAA,2BAEA,aAQA47C,gDACA,gCAIA,OAHA,OACA57C,2BAEA,MASA47C,+CACA4I,iCACA,wBACA,aACAxkD,kBAEA,MAQA47C,6CACA,0BAOAA,8CACA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CA,kBADA,EAEA,gBAFA,EAIA,eAJA,EAKA,eALA,EAMA,gBAQAnE,sDACA57C,2BAQA47C,qDACA57C,0BAGA47C,uDACA57C,6BAuBAN,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,SAQA,OAPAte,qBACAoF,OACGpF,qBACHoF,OACGpF,uBACHoF,SAEA,yBAEA6B,gBACA,sBACAjH,6BACAA,mCACG,sBACHA,6BACAA,mCACG,uBACHA,6BACAA,mCACG,UACHA,6BACG,YACHA,8BAEAA,0BA3EA,cA4EAA,4BAmBAN,OAAOA,eAAeA,EAAtBA,6CACA4e,eACA,kCAEArX,gBACAjH,+BAaAN,OAAOA,eAAeA,EAAtBA,iDACA4e,eACA,sCAEArX,gBACAjH,mCAWA47C,qDASA,MAPA,WACA57C,YACE47C,kDACF57C,kBAGA47C,8CACA,MAaAA,mDACA,8BAEA,OADA77C,iBACA,GAOA67C,oEACA,yBACA57C,mBACA,mBAEA4nB,aACA,4BACA,uBACAq+B,UAEAjmD,oCACAimD,YACAA,SACIjmD,gBAEJA,uBACAA,mDACAA,6CACAA,sCACAA,sCACAA,4BAWAN,OAAOA,eAAeA,EAAtBA,0CACA4e,eACA,+BAEArX,gBACAjH,4BASA,OACAkmD,wBACAC,oBACAC,wBACAC,kBACAC,kBACAC,qBAYA7mD,uEACA4e,eACA,4BAEArX,gBAEA,aACA,iEACAu/C,yBAIAC,mBACAzmD,iBACGymD,mBACHzmD,iBACGymD,oBACHzmD,kBACGymD,iBACHzmD,YACGymD,sBACHzmD,kBACGymD,sBACHzmD,oBAgBAN,OAAOA,eAAeA,EAAtBA,6CACA4e,eACA,kCAEArX,gBACAjH,yEACAA,gCAgBAN,OAAOA,eAAeA,EAAtBA,0CACA4e,eACA,4BACAte,iCAaAN,OAAOA,eAAeA,EAAtBA,0CACA4e,eACA,4BACAte,+BAKAiH,gBACAjH,uBACAA,6BAeAN,OAAOA,eAAeA,EAAtBA,2CACA4e,eACA,4BACAte,gCAKAiH,gBACAjH,uBACAA,8BAaAN,OAAOA,eAAeA,EAAtBA,mDACA4e,eACA,kDACAte,wCAKAiH,gBACAjH,6CACAA,sCAeAN,OAAOA,eAAeA,EAAtBA,oDACA4e,eACA,4BACAte,2CAiBAN,OAAOA,eAAeA,EAAtBA,gDACA4e,eACA,kDACAte,uCAoBAN,OAAOA,eAAeA,EAAtBA,wDACA4e,eACA,4BACAte,+CAWA47C,sDAUA,OATAA,8CACA57C,uCACAA,sBACAA,iBACAA,yBACAA,oBACAA,2BACAA,sBACAA,sBACA,MAGAg7C,qGClgBAY,4BAGA77C,mDACA67C,kCAMA57C,2DAOAA,yCAOAA,mCAMAA,0DAGAA,iDACAA,gEAGA47C,uDAOAA,0BACA8K,YACA9xC,iBAEA+xC,UACAC,YACAC,SACAC,WACAntC,YAWAiiC,+DAQA,OANA57C,iCACAA,yBAEA,2BACAA,iGAEA,MASA47C,8DAIA,OAHApjB,oBACAx4B,gCACAA,8DACA,MAOA47C,6CASA,OARAA,kDACA57C,+DACAA,0BACAA,qBACAA,wBACAA,mBACAA,oBACAA,iBACA,MAGAg7C,2FC5FAY,2BAEA,6DACAA,8BAMA57C,kBAOAA,kBAQAA,mCAGA47C,mDASAA,0BACAhnC,aACAwwC,gBAWA1lD,OAAOA,eAAeA,EAAtBA,gCACA4e,eACA,mBAEArX,gBACA,mBACA,aASA,oDANA,GAFAjH,aAEA,sCACA,iBACAA,cACAA,oBAeAN,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,2BAEArX,gBACAjH,qBACAA,eACAA,sCAWA47C,6CACA,oBACA57C,gEACAA,qBACAA,mDACAA,uEASA47C,4CACA57C,eACAA,qCACAA,oBASA47C,8CAKA,OAFA57C,cACAA,eACA,MAOA47C,6CAOA,OANAA,8CACA,sBACA57C,0BACAA,mBAEAA,kBACA,MAQA,IAWA+mD,KACAC,KAEAtnD,gCACA4e,eACA,YAEA,IADA,SACA,IAA2B2oC,EAjB3B,EAiBkDA,KAClD,IAEAC,cAFA,mBAnBA,QAoBAnI,OAEAmI,gBACA,YAAmBvlD,EAvBnB,OAuBqCA,KACrC,wBACAulD,sBACAC,sBACAC,mBACAC,qBACAC,mBACAC,qBACA7I,2BACAA,UACA8I,aAGAR,2CAEA,iBAIAtnD,OAAOA,eAAeA,EAAtBA,SACA4e,eACA,aAEA,IADA,SACA,IAA2B2oC,EA7C3B,EA6CkDA,KAClD,uBA/CA,QAgDAlI,OAEA,IADA,QACA,IAAmBp9C,EAlDnB,OAkDqCA,KACrC,wBACA+8C,oBACA+I,OACA/I,WAGAsI,4CAEA,kBAIAtnD,OAAOA,eAAeA,EAAtBA,SACA4e,eACA,aAEA,IADA,SACA,IAA2B2oC,EAlE3B,EAkEkDA,KAClD,uBApEA,QAqEAlI,OACA,YAAmBp9C,EAtEnB,OAsEqCA,IACrC+8C,uBAGAsI,4CAEA,kBAIAhM,2FCvOAY,4BAEAA,+BACAA,gCACA57C,wBAOAA,8CAOAA,gCAEAA,yBAEA47C,yEAGA57C,0BACE8Q,aAGF8qC,uDAMAA,2BACAyB,SACAC,SAOA1B,uCAWAl8C,OAAOA,eAAeA,EAAtBA,iCACA4e,eACA,0BAEArX,gBACAjH,uBAwBA47C,4CACA57C,wBACA,4BACA2O,sBACAA,oBACAitC,yCAOAA,8CACAA,iDACA57C,yBACAA,uBACAA,kBACAA,kBAcA47C,kDAEA,OADA57C,kCACA,MAOA,uBACA47C,uBAEAA,yCAEAr0C,4BACAq0C,0BAEAA,0BAIAA,0CACAr0C,6BACAA,sBAIAyzC,uFCjJAY,uCAEA,8FAEA77C,+DACA67C,sCAOA57C,wBAGAA,mCACAA,uBACAA,0BAGA47C,iEAMAA,sCACA8L,kBACAC,UACAC,YAUAloD,OAAOA,eAAeA,EAAtBA,qDACA4e,eACA,wBAEArX,gBACAjH,oCAEAA,8BAWAN,OAAOA,eAAeA,EAAtBA,+CACA4e,eACA,sBAEArX,gBACAjH,gBACAA,oDAUAN,OAAOA,eAAeA,EAAtBA,gDACA4e,eACA,wBAEArX,gBACAjH,qBAQA47C,yDAEA,OADAA,sDACA,MAGAZ,kGC/FAY,mCAEAA,gCAOA57C,iDAOAA,kEAEAA,gCAGA47C,0DAUAl8C,OAAOA,eAAeA,EAAtBA,uCACA4e,eACA,wBAEArX,gBACAjH,qBAWAN,OAAOA,eAAeA,EAAtBA,kCACA4e,eACA,wBAEArX,gBACAjH,qBAWAN,OAAOA,eAAeA,EAAtBA,kCACA4e,eACA,wBAEArX,gBACAjH,qBAQA47C,gDAMA,OALAA,kDACA57C,sBACAA,iBACAA,oBACAA,eACA,MAGAg7C,wFCrFAY,gCAEA,+EACAA,+BAOA57C,gFAOAA,oCACAqzB,iCACAqoB,8BACAC,aAQA37C,6EAOAA,+EAOAA,+BACAqzB,4BACAqoB,8BACAC,aAQA37C,gCACAqzB,6BACAsoB,aAIA37C,gEACAA,aAGA47C,2DAOAA,+BACAoG,SACA6F,cACAluC,YACAitC,YACAkB,SAOAlM,kDAeA,OAdAA,iDACA57C,gEACAA,8BACAA,sBACAA,sBACAA,iBACAA,uBACAA,kBACAA,yBACAA,oBACAA,qBACAA,gBACAA,oBACAA,eACA,MAGAg7C,wECnHA,GDmHAA,MCnHA,sBACAY,yGACAA,mEAIAH,+BACAA,wCAIA,OAHAG,oCACA57C,eAEA,oBAKAy7C,gCACAA,yCAEA,6CACA3oC,4BAIA,OAHAA,WACAA,4BACAA,WACA,qBAKA2oC,2EACAA,0EAIAA,6EACAA,2EAMA,SACAsM,qCACAC,mHACA,IACA,2BACA7N,kCACA8N,MAEE,SACFA,KAGAA,IACAxM,sFACAA,mDACA,iCACAz7C,qCACI8Q,qEChDJ8qC,sCACA,8CAKA,wCAHAA,+BAOAA,yDAOAA,kDACA,oCAGAZ,wFClBAY,kCACA,0CAKA,oCAHAA,mCAOAA,yDAMAA,4DAAwDA,2CACxDsM,MACAC,8BACAC,mBACA,kCACAvoD,EAEA+7C,8BAIAyM,MACAF,6CACAC,qBACA,IACAE,EADA,mBACAA,mBACA,kCACAA,EAEA1M,8BAIA2M,IACAJ,4DACAC,uBACA,QAUA,OATAjlD,aACAqlD,+DAEA5jD,aACA4jD,sCAEAt1C,aACAs1C,wCAEA,MAgBA5M,oDACA,mFAWAA,oDACA,yBACA,0BACE9qC,aAaF8qC,gDACA,iDASAA,gDACA,yBACA6M,sCACAH,sBACAI,mBAKA,OAJAA,MACAJ,UAEAK,QACA,cAOA/M,mDACA,4DAOAA,qDACA,4DAOAA,iDACA,4BACAgN,mBACA,8CAYAhN,gDACA,UASAA,4DACA,UASAA,wDACA,yEASAA,wDACA,kEASAA,0DACA,YAOAA,iDAWA,OACAiN,6BACAC,2BACAC,2BACAC,2BACAC,2BACAC,6BACAC,gCAQAR,yDAQA/M,2BAUAA,qCACA,qDAWAA,qCACA,8DAGAZ,mGCpPAY,8BAGA,8FACAA,+BAOA57C,qBAOAA,mBAQAA,uBAQAA,uBAOAA,2BAOAA,iCAOAA,8CAGAA,+BACAA,iCACAA,8BAGA47C,yDAOAA,6BACAgL,WACAC,SACAC,WACAntC,UACAyvC,qBACAC,yBACAC,4BAWA5pD,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,0CAWAs9B,qDACA,yBACA,SACE,wBAEF,qCACA,qCACA,UAaAA,uDAEA,8CACA,iCACAA,sBACA57C,aAEAA,cAEE,0BAGF,oDAFAA,YA8BAN,OAAOA,eAAeA,EAAtBA,0CACA4e,eACA,+CAEArX,gBACAjH,yCAYAN,OAAOA,eAAeA,EAAtBA,2CACA4e,eACA,iDAEArX,gBACAjH,2CAYAN,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,yBAEArX,gBAEA,KADA,wBACA,YACA,oDAEAjH,sBAeA47C,yDACA57C,8BACAw4B,oBACA,IACAouB,EADA,4BAEAC,6BACA0C,4BAEA,6BASA,GARAC,MAKA5C,GAFA,MADA,MAMA,MAEA5mD,mCACE,gCACFA,mCACE,qCACFA,mCACE,QACFA,iCAGA,IAFA,wBAEA,IAAiB2B,WAAkBA,IAEnC,wBACAwjD,8BAEA,KACA,MAGAnlD,uCAGA,MACA,qBACAypD,MACAzpD,oBACA,4BACAA,8CACG,kCACHA,gDAGA,aAWA47C,wDACA57C,6BACAw4B,oBACA,6BACA,QACA,mCACA,iCACAx4B,mCACG,sCACHA,kCACG,CACH,yBACA47C,uBACA57C,iCACAA,yCAIA,aASA47C,wDACA,oCAcAA,kEAIA,OAHApjB,oBACAx4B,wBACAA,yCACA,MAQA47C,gDAEA,OADA57C,mCACA,MAQA47C,4EAKA,WAEA,IAEAj6C,IAGA+nD,KACA,QAAY/nD,EANZ,IAM0BA,IAC1B+nD,iCAIA,SA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A6E,6BACAzgD,sCACA,MACA,sCACA47C,2BACAA,gCAEA,6DACA,kEACA4B,MACA5B,iCACA4B,sCAEA,8BACA,WACAA,wBAEAA,UAEAx9C,0DACAw9C,sBAEA,+CACAD,2FAEAA,8EAGEzsC,YACF,MAUApR,OAAOA,eAAeA,EAAtBA,iCACA4e,eACA,gEAWA5e,OAAOA,eAAeA,EAAtBA,uCACA4e,eACA,0BAEArX,gBACAjH,uBAUAN,OAAOA,eAAeA,EAAtBA,uCACA4e,eACA,0BAEArX,gBACAjH,uBAcAN,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,uBAEArX,gBACAjH,oBASA47C,4CAUA,OATApjB,kBACAx4B,0DACAA,iBACAijC,8BACAzK,OACA3vB,YAEA7I,2BAEA,MAQA47C,2CAGA,GAFA57C,eACAw4B,kBACA,yDACAx4B,sDACA,+BACAorD,IACA,WACAA,UAEAprD,0BAEA,aAQA47C,6CAOA,OANApjB,+BACAA,kBACAx4B,uCACA47C,mCAEA57C,sBACA,MASA47C,4CACA,4CACA,wEACA,sDACA,OAEA,kBACA,UACAA,qCACAyP,iCAEA7yB,yBAEAx4B,8BASA47C,sDACA,uEAgBAl8C,OAAOA,eAAeA,EAAtBA,gCACA4e,eACA,mBAEArX,gBACAjH,aACAA,4BAcAN,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,2BAEArX,gBACAjH,qBACAA,4BAWAN,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,mDAEArX,gBACAjH,8BACAA,YACAA,4BAWAN,OAAOA,eAAeA,EAAtBA,qCACA4e,eACA,qDAEArX,gBACAjH,gCACAA,YACAA,4BAcAN,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,eACA,gCACAgtC,qBACA,gDACA,8BAEA,OADAhK,YACA,EAEA,SAGA,YASA1F,6CACA57C,cACAA,sBACAA,iBACAA,mBACAA,iBAGAg7C,2GCjaAY,kCAEAA,+BACA57C,wBAOAA,0CAOAA,6BAMAA,wDAOAA,2CAOAA,mCAMAA,yDAOAA,4CAEAA,iCACAA,kCACAA,kCACAA,mCACAA,uCACAA,yCACAA,4CACAA,8CAGA47C,6DAMAA,oDAgBA,OAfAA,iDACA57C,mBACAA,cACAA,oBACAA,eACAA,qBACAA,gBACAA,6BACAA,wBACAA,sBACAA,iBACAA,8BACAA,yBACAA,sBACAA,iBACA,MAGAg7C,6GC1FAY,kCAEAA,+BACA57C,wBAOAA,2CAOAA,+BAMAA,6DAMAA,0CAMAA,8DAEAA,sCACAA,sCACAA,4CACAA,4CACAA,+BACAA,uCAGA47C,6DAMAA,oDAYA,OAXAA,iDACA57C,mBACAA,cACAA,oBACAA,eACAA,uBACAA,kBACAA,6BACAA,wBACAA,sBACAA,iBACA,MAGAg7C,sGCpEAY,uCAEA,sGACAA,+BAOA57C,uFAOAA,0CAOAA,+CACA89C,sBACAlpC,eACA9N,IACAi3C,cAQA/9C,uCAOAA,0CAGAA,wCACAA,uDAGA47C,kEAQAA,sCACA0H,aACAiI,aACAC,eAOA5P,yDAUA,OATAA,iDACA57C,sDACAA,2BACAA,sBACAA,oBACAA,oBACAA,wBACAA,mBACAA,oBACA,MAGAg7C,4FCpFAY,8BACA,sCAKA,gCAHAA,wCAOAA,0DAOAA,4CAOAA,0CACA,kCASAA,oDACA,yBASAA,sDACA,yDASAA,oDACA,UAOAA,6CACA,uBAOAA,+CACA,0DAGAZ,gFC9EAY,uCAEA77C,4DACA67C,qBAMA57C,iBAMAA,4CAMAA,kCAMAA,yBAOAA,mBAGA47C,2CAOAA,mCACA8F,QACAlgB,yBASAoa,oCAMAA,sDACA57C,gBACAA,iBACAA,4BACAA,gCASA47C,sDAKA,OAJAA,uCACA57C,oBACAA,mBACAA,eACA,MAGAg7C,2GC7EAY,gCAEA,uEAOA57C,qDACAA,4BAOAA,iEACAA,sDAOAA,wCAEAA,0BAGA47C,uCAOAA,+BACAkC,aAUAp+C,OAAOA,eAAeA,EAAtBA,sCACA4e,eACA,iDAWAs9B,mDAQA,OAPApjB,oBACAx4B,0DACAA,sDACA47C,wBACA57C,0BAGA,MAUA47C,gDAGA,GAFApjB,oBAEA,yDACA,yBACA+kB,WACAv9C,gCACAA,4BAMA,OAHAA,sBACAA,sDACAA,yBACA,MAQA47C,iDAKA,OAJApjB,oBACAx4B,yDACAA,qDAEA,MAQA47C,kDAIA,OAHApjB,oBACAx4B,sBACAA,2BACA,MAQA47C,0DACApjB,oBACA,0DAEAizB,GAAiBxoB,qCACjBjjC,mBAGA,QACA0rD,IAqBA,OAlBA1rD,gEACA,aAEA2rD,+BACAA,iBACAD,UACAE,UAEAC,uEACAH,2EAEAG,KACE/6C,YAGF9Q,sBAGA,GAUAN,OAAOA,eAAeA,EAAtBA,sCACA4e,eACA,wCAEArX,gBACAjH,qCAWAN,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,0CAEArX,gBACA,iBACAq6C,kCACAthD,4BASA47C,4DACApjB,oBACA,0DAEAizB,GAAiBxoB,qCACjBjjC,mBAGA,QACA8rD,IAqBA,OAlBA9rD,gEACA,aAEA2rD,+BACAA,iBACAG,YACAF,UAEAC,uEACAC,aAEAD,KACE/6C,YAGF9Q,sBAGA,GASA47C,4DAQA,OAPApjB,oBACAx4B,2BACAA,sBACAw4B,OACA8oB,QACAyK,iDAEA,MAWAnQ,0DAEA,OADApjB,oBACA,+BAWAojB,2DACAn7C,qCACA,8BACA88C,qBACAxE,0BACAiT,6CACA,wCAiBApQ,kEAGA,yBAUA,GATA57C,2CACAisD,sEACAjsD,qEAEAisD,KACEn7C,YAEFioC,qBAEA,gDAEA,uCAGA9kB,GADAi4B,EADAlsD,uCAEAi0B,EACA,QACAA,OAIA,IAFA,wCACA3gB,OACA,mBACA,IACAkuB,wCACI,SACJluB,IACA,MAEAtT,cACAmsD,4CAKA,KACA,QAGA,aAOAvQ,kDASA,OARAA,6CACA57C,sBACAA,iBACAA,2BACAA,sBACAA,4BACAA,yBACAA,oBACA,MAGAg7C,gHC3VAY,8BAEA,qEACAA,+BACA57C,wBAMAA,4BAOAA,+CACAA,4BACAA,+BACAA,uBAMAA,iCAOAA,gDAOAA,4BAEA47C,0CACAA,4CACA57C,oDAGAA,4BAGA47C,yDAMAA,6BACAkK,eASApmD,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,wBAEArX,gBACAjH,kBACAA,mEASA47C,4EAMAA,gDAUA,OATAA,iDACA57C,0BACAA,kBACAA,sBACAA,iBACAA,uBACAA,eACAA,oBACAA,eACA,MAGAg7C,8GCtGAY,wCAEA,2FACAA,+BAOA57C,oEAOAA,qCAOAA,0EAOAA,mCAEAA,8CACAA,2CAGA47C,mEAQAA,uCACA0H,aACAiI,cAOA3P,0DASA,OARAA,iDACA57C,0CACAA,sBACAA,iBACAA,oBACAA,yBACAA,oBACAA,oBACA,MAGAg7C,2GCpEAY,oCAEA,8FACAA,+BAOA57C,8BAOAA,yBAMAA,0DAOAA,sDAMAA,0DAMAA,4DAOAA,gFAOAA,kFAOAA,iCAEAA,mCACAA,8CAEAA,8CACAA,wDACAA,+CACAA,gDAEAA,2BACAA,qCACAA,2BACAA,4BAEAA,qEAGA47C,+DAOAA,mCACAwQ,iBACAC,mBACAvlD,KAOA80C,sDAiBA,OAhBAA,iDACA57C,oEACAA,mBACAA,cACAA,6BACAA,wBACAA,mBACAA,cACAA,oBACAA,eACAA,4BACAA,uBACAA,6BACAA,wBACAA,iBACAA,YACA,MAGAg7C,wFCtHAY,0BAEAA,gCAOA57C,oCAMAA,gGAGA47C,qDAQAl8C,OAAOA,eAAeA,EAAtBA,+BACA4e,eACA,kBAEArX,gBACAjH,YACAA,oDAUA47C,6CACA,mBACA,iCAQAA,2CAIA,OAHAA,kDACA57C,0BACAA,qBACA,MAGAg7C,wEC3DAY,iCAGA,yCA+CA,mCA9BA,GAVA57C,YAOAA,cAGA,+DAEAssD,4DACAtsD,gCACAA,oCACG,uCAEHA,iBACAA,0BACG,mCACH,2BACA,QACAA,wBACA,MACA,QACAA,sBACA,MACA,SACAA,0BACA,MACA,WACAA,qBACA,MACA,QACA,oEAUA47C,qCAWAA,2CACAr4C,GACA4kD,wBACAC,qBAEA,oBACA,YAFAvoD,eAGAG,+CAEAA,4BAIAgG,GACAmiD,mBACAC,mBAEA,OADAvoD,cACA,wCAGAsD,GACAglD,mBACAC,mBACA,kEAGAzmD,GACAwmD,mBACAC,mBACA,yCAGAmE,IACApE,8BACAC,mBACA,+CAGAG,IACAJ,6DACAC,uBACA,QAUA,OATAjlD,aACAqlD,+DAEA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A57C,cACAA,mBACA,MAcA47C,8CASA,OARApjB,oBACAx4B,0DACAi0B,oBAEAj0B,cAEAA,kBAEA,MAcA47C,uDAGA,OAFA57C,iBACAA,eACA,MASAN,OAAOA,eAAeA,EAAtBA,sCACA4e,eACA,wBAEArX,gBACAjH,kBAEAA,yCACA8S,oBAWApT,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,sBAEArX,gBACAjH,gBAEAA,yCACA8S,kBAWApT,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,qBAEArX,gBACAjH,uBAUAN,OAAOA,eAAeA,EAAtBA,iCACA4e,eACA,mBAEArX,gBAEA,oBAGAjH,aAEAA,yCACA8S,YAEAkyC,IAEA,mEACAuI,GACAvtD,+BAaAN,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,2BAEArX,gBACAjH,qBACA,iBAGAutD,sDACAA,GACAvtD,2BAIAA,yCACA8S,eACAA,yCAWApT,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,6BAEArX,gBACAjH,0BAWAN,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,8BAQAs9B,8CASA,OAPA57C,yCACA8S,eAEA9S,yBACA47C,8CACA57C,uBACAA,kBACA,MAGAg7C,6GC5bAY,gCAGA77C,uDACA67C,kCAMA57C,2DAOAA,yCAOAA,mCAMAA,2CACAA,gCAMAA,sEAMAA,0DAGAA,6DAEAA,mDACAA,0FAGA47C,2DAOAA,8BACAkC,eACAsE,SACAsE,YACA9xC,eAEAqpC,QACAn3C,IACA8N,eACAmpC,aAEA4I,UACAC,YACAC,SACAC,WACAntC,WAEA6zC,gBACA5G,WACAC,SACAC,WACAntC,UACA+tC,kBACAC,UACAC,aAWAhM,mEASA,OARApjB,oBAEAx4B,iCACAA,qCACAA,yBACA,2BACAA,iEAEA,MASA47C,kEAIA,OAHA57C,gCACAA,sCACAA,8CACA,MAOA47C,iDAaA,OAZAA,kDACA57C,yFACAA,0BACAA,qBACAA,wBACAA,mBACAA,8BACAA,yBACAA,sBACAA,iBACAA,oBACAA,iBACA,MAGAg7C,mGCvJAY,mCAEA,0FACAA,8BAOA57C,0EAOAA,gEAOAA,qBAOAA,sBAOAA,kBAOAA,oBAOAA,0BAOAA,kCAGAA,mBACAA,wCAGA47C,2DAQAA,kCACAkC,cACAsE,SACArC,QACA0N,UACAx4C,QACAL,gBACAytC,YACAC,gBAQA1G,qDACApjB,oBACAx4B,2BACA0tD,eASA9R,oDACApjB,oBACAx4B,2BACA0tD,cASA9R,sDACApjB,oBACAx4B,2BACA0tD,iBASA9R,uDACA,YAAgBj6C,2BAA8BA,IAC9CwP,qCAUAzR,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,mBAEArX,gBACAjH,aACAA,2BACA0tD,eAcAhuD,OAAOA,eAAeA,EAAtBA,0CACA4e,eACA,qBAEArX,gBAEA,GADAjH,eACA,4BACA,WACAsqD,iCACAtqD,6BACA0tD,4BAYAhuD,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,iCAEArX,gBAEA,GADAgO,gBACA,8BAEAjV,2BACA0tD,eAEA1tD,qBACA,YAAkB2B,IAAWA,KAC7B,+BACA3B,6CACA0tD,0BAEAA,kBAEAA,kCACAA,4BACAA,wBACA1tD,oCACAA,8BACA0tD,uBACA1tD,uBAGAA,yBACAA,sCACAA,2BACA0tD,iBAaAhuD,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,oBAEArX,gBACAjH,cACAA,2BACA0tD,gBAeAhuD,OAAOA,eAAeA,EAAtBA,4CACA4e,eACA,sCAEArX,gBACAjH,2BACA0tD,gBAEA1tD,wCAiBAN,OAAOA,eAAeA,EAAtBA,4CACA4e,eACA,sCAEArX,gBACAjH,iBACAA,4CACAA,2BACA0tD,mBAcAhuD,OAAOA,eAAeA,EAAtBA,gDACA4e,eACA,0CAEArX,gBACAjH,qBACAA,2BACA0tD,oBAEA1tD,wCAQA47C,qDAYA,OAXAA,8CACA57C,uCACAA,yBACAA,oBACAA,sBACAA,iBACAA,2BACA0tD,eAEA1tD,uBACAA,oBACA,MAGAg7C,6GCpUAY,kCAEA,iGACAA,8BAOA57C,2DAOAA,uCAOAA,iCACAA,2BAOAA,uEAOAA,gDAYAA,uDACAA,+CAOAA,2CAGAA,iEACAA,4CACAA,uEACAA,sDAEAA,mBAEAA,sDAGA47C,8DAQAA,iCACAkC,cACAsE,SACArC,QACAnrC,YACAo2C,wBACAC,eAQArP,oDACA57C,yBACAA,wBAQA47C,mDACA57C,wBACAA,uBAQA47C,qDACA57C,2BACAA,0BASAN,OAAOA,eAAeA,EAAtBA,uCACA4e,eACA,2BAEArX,gBACAjH,wBAcAN,OAAOA,eAAeA,EAAtBA,2CACA4e,eACA,+BAEArX,gBACAjH,4BAaAN,OAAOA,eAAeA,EAAtBA,+CACA4e,eACA,mCAEArX,gBACAjH,gCAUAN,OAAOA,eAAeA,EAAtBA,iDACA4e,eACA,6BAEArX,gBACAjH,0BAUAN,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,4BAEArX,gBACAjH,sBACAA,2BAiBAN,OAAOA,eAAeA,EAAtBA,2CACA4e,eACA,+BAEArX,gBACAjH,4BAQA47C,oDAeA,OAdAA,8CACA57C,qDACAA,oBACAA,iBACAA,2BACAA,sBACAA,wBACAA,mBACAA,0BACAA,qBACAA,+BACAA,0BACAA,gCACAA,2BACA,MAGAg7C,uGCtPAY,mCACA,gGACAA,8BAOA57C,iEAEAA,kCAOAA,0CACA89C,sBACAsE,gBACArC,gBASA//C,sCAOAA,yCAOAA,mCAOAA,+CAGAA,qDACAA,iCACAA,8DAGA47C,2DAQAA,kCACAkC,cACAsE,SACArC,QACA4N,wBAQA/R,qDACApjB,oBACAx4B,yBACAA,sBAQA47C,oDACApjB,oBACAx4B,wBACAA,qBAQA47C,sDACA57C,2BACAA,wBAUAN,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,eAWA5e,OAAOA,eAAeA,EAAtBA,4CACA4e,eACA,eAWA5e,OAAOA,eAAeA,EAAtBA,4CACA4e,eACA,YAUA5e,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,8BAEArX,gBACAjH,2BAQA47C,qDAYA,OAXAA,8CACA57C,sBACAA,iBACAA,sBACAA,iBACAA,0BACAA,qBACAA,6DACAA,oBACAA,iBACAA,8BACA,MAGAg7C,mGC3KAY,0BAEA,yEACAA,6BAOA57C,gBAGA,YAAgB2B,kBAA2BA,IAC3C+G,2BACA1I,wCAEAA,uBAKA47C,iDAOAA,yBACApa,wBACAwjB,QACA5D,aACAD,YACAiE,eACA8F,cACAC,YACA7N,QACAsQ,WAUAhS,6CACA,sBAiBA,OAhBA57C,0DAEAi0B,EADAj0B,WACAi0B,wCAEA2nB,0BAEA3nB,kBACAj0B,iBACAijC,8BACAzK,OACAvE,WAEAj0B,2BACAA,2BAGA,MAWA47C,oDACA0F,KACAthD,WACAu9C,6DACAA,kBAEA+D,4BAEA/D,6BACGA,kDACHA,UACAA,6BAEEA,kBACFA,6BAWA79C,OAAOA,eAAeA,EAAtBA,sCACA4e,eACA,0BAEArX,gBACAjH,oBACAA,2BACAu9C,uCAUA3B,0CACA,sBAMA,OALA57C,sBACAA,sDACAA,2BACAu9C,aAEA,MAmBA3B,0CACApjB,6BAEA,IADA,qCACA,IAAgB72B,sBAAyBA,KACzC,sBACA,yCAIA,OAHAi6C,yBACA2B,WAEA,EAIA,+BACAv9C,cAEAA,qCAEA,MAeA47C,2CAOA,MA2BA,OAhCApjB,2BAEAA,GADA34B,KACA24B,MAEAA,kBAEA34B,8BACA09C,KACA/b,+BAEA+b,uBACA/b,+BACA3hC,UAIA09C,gBAGAA,OACA6D,qBACAD,yBACA6D,eACAmG,uBACA/F,+BACA8F,+BAGAlrD,qBAGAA,sBACA,MAQA47C,mDACA57C,gCACAy9C,kCACAz9C,mCAGAu9C,iCAEEzsC,aAUF8qC,8CAEApjB,2BAEAA,GADA34B,KACA24B,MAEAA,kBACA,gCAAsC72B,KAAQA,KAC9C,sBACA47C,oBACA3B,6DACA57C,yBACAu9C,aAIA,aAOA3B,8CAKA,OAJA57C,2BACAu9C,eAEAv9C,gBACA,MAQA47C,4CAKA,OAJA57C,2BACAu9C,eAEAv9C,oCACA,MASA47C,gDACA,iBACAiS,+BACA,gCAAuClsD,KAAQA,KAC/C,sBACAQ,4BACAA,gBAEAq/B,aAIA,aASAoa,+CACA57C,2BACAu9C,WASA3B,6CACA57C,WACAA,oBAUA47C,wDACA57C,0EACAu9C,YACEA,mCAEFv9C,uBAUAN,OAAOA,eAAeA,EAAtBA,sCACA4e,eACA,0BAEArX,gBACAjH,oBACAA,iCAcAN,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,uBAEArX,gBACAjH,iBACAA,8BAoBAN,OAAOA,eAAeA,EAAtBA,+BACA4e,eACA,mBAEArX,gBACAjH,aACAA,2BACAu9C,6BACAA,yBACAA,SACAv9C,iCAYAN,OAAOA,eAAeA,EAAtBA,kCACA4e,eACA,mDAEArX,gBACAjH,8BACAA,YACAA,2BACAu9C,YACAv9C,iCAaAN,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,qDAEArX,gBACAjH,gCACAA,YACAA,2BACAu9C,2BACAv9C,iCAYAN,OAAOA,eAAeA,EAAtBA,uCACA4e,eACA,2BAEArX,gBACAjH,qBACAA,kCAWAN,OAAOA,eAAeA,EAAtBA,iCACA4e,eACA,8BAQAs9B,4CAKA,OAJAA,6CACA57C,iBACAA,mBACAA,kBACA,MAGAg7C,+ECtfAY,0BAEA,2EACAA,qBAKA57C,iCACAwhC,+BACAwjB,QACA5D,mBACAgE,4BACA8F,4BAOAlrD,yBAGAA,8BAGA47C,iCAOAA,yBACA6F,cACAjgB,wBACA4jB,eACA0I,eACA5C,eACA5N,SASA1B,2CAEA,OADA57C,qBACA,MAQA47C,0CAEA,OADA57C,oBACA,MAQA47C,4CAEA,OADA57C,sBACA,MAQA47C,2CACA57C,kBAUAN,OAAOA,eAAeA,EAAtBA,gCACA4e,eACA,4BAYA5e,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,+BAYA5e,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,4BAEArX,gBACAjH,yBAWAN,OAAOA,eAAeA,EAAtBA,uCACA4e,eACA,iCAEArX,gBACAjH,8BAWAN,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,6BAEArX,gBACAjH,0BAUAN,OAAOA,eAAeA,EAAtBA,sCACA4e,eACA,gCAEArX,gBACAjH,6BAUAN,OAAOA,eAAeA,EAAtBA,+BACA4e,eACA,yBAEArX,gBACAjH,sBAWAN,OAAOA,eAAeA,EAAtBA,qCACA4e,eACA,4BACAyvC,IAEA/tD,kBAGAiH,gBAEAjH,iBADAguD,SAGAA,KASApS,4CACA57C,sBACAA,iBACAA,oBAGAg7C,qFCrOAY,2CAEA,0EACAA,oCASA57C,0EAOAA,oCAOAA,oCAGAA,4DACAA,4DACAA,+DACAA,8BAGA47C,yEAMAA,6DASA,OARAA,oDACA57C,6BACAA,wBACAA,mBACAA,2BACAA,sBACAA,2BACAA,sBACA,MAGAg7C,2GC9CAY,mCAEAA,uCAOA57C,8CAOAA,8CAOAA,oCAOAA,sCAOAA,sCAOAA,wCAGAA,4CACAA,+CAGA47C,2DAMAA,qDAUA,OATAA,8CACA57C,6BACAA,wBACAA,6BACAA,wBACAA,kBACAA,mBACAA,oBACAA,qBACA,MAGAg7C,6FCrEAY,+BAEA,yEACAA,8BAOA57C,+CAOAA,oDACAA,oBACAD,YACE+Q,YAGF9Q,sBACAA,0BAIAA,2BAEAA,qCAGA47C,uDAOAA,8BACAiD,sBACAoP,cASAvuD,OAAOA,eAAeA,EAAtBA,sCACA4e,eACA,2BACAte,aAEA,MAGAiH,gBACAjH,oBAEAA,yBAEAA,6BACAA,6BAEAA,+CACAA,qCAEAA,6CAUAN,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,kCAEArX,gBACAjH,+BAcA47C,iDACA,uCACA57C,cACAwhC,GACAA,KAEE1wB,aAOF8qC,iDAMA,OALAA,8CACA57C,uBACAA,kBACAA,6BACAA,qBACA,MAGAg7C,8FC3HAY,6BAEAA,gCACA57C,wBAQAA,sDAOAA,sCAOAA,kDAOAA,wCAGA47C,2CACAA,6CACA57C,4CACAA,yCACAA,2CACAA,wBAGA47C,wDAMAA,sDACA57C,iCAEA,OADA21B,2BAWAj2B,OAAOA,eAAeA,EAAtBA,kCACA4e,eACA,8BAEArX,gBACAjH,wBACAA,0BAQA47C,8CAUA,OATAA,kDACA57C,uBACAA,kBACAA,yBACAA,oBACAA,yBACAA,oBACAA,0BACAA,qBACA,MAGAg7C,uFC/FAY,yCAOA,uCAGAA,6BACAr0C,UACAm8C,sBACAE,YACAC,uBAQA7jD,iBAOAA,qBAGA47C,6DAMAA,kDACA,0BAOAA,qDACA,0BAOAA,qDACA,0CAEA57C,kBAEAA,wBAGA,uCAOA47C,oDAEA,OADA57C,mBACA,mBAGAg7C,2GC/CAY,gCAEA,mCACAsS,oBAEA3mD,sCACAq0C,oBAGA,6BAGAzB,OAiBA,OAbAA,EAFAgU,gCAEAhU,mBAEA,qBAIA5yC,WAIAq0C,oBAGA,oBAEA,mCAIAZ,kFC1CAY,8BAGA,4CACAjtC,UACA,mEAkBA,aAjBAitC,qBAOA57C,iBAMAA,uBAEAA,qBAEA,EACAA,qBACAA,yDAIA47C,oCAMAA,4BACAiD,sBACAuP,YASAxS,4CACA,wCAUAA,4CACA,eACA,wBAEA,qDASAA,sDACA57C,qBACA,2BACAwhC,SAWA9hC,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,SACA,4BACA,kBACA+vC,cAEA,YAcAzS,gDAWA,OAVApa,yCACA/I,+BACAz4B,mBACAwhC,SACE/I,0BACFz4B,yCACAwhC,SACEoa,wBACF57C,yDAEA,MAOA47C,+CAEA,aADAA,uCACA,cACA57C,2BAGA,OADAA,mBACA,MAGAg7C,4EC9IAY,iCAEA,4EACAA,qBAMA57C,qBAMAA,aAOAA,gBAOAA,oBAOAA,qBAEAA,kBAGA47C,wCAOAA,4BACA3yB,QACAE,YACAmlC,gBACAC,gBACAC,0BACAC,8BACAC,gBACAC,wBACAC,yBAOAhT,gCACAhnC,mCACAkuC,WAUApjD,OAAOA,eAAeA,EAAtBA,uCACA4e,eAEA,2BAEG,0BACH,sBAEAte,qDACA,8BAOA,OANAA,oDACAA,4CACAA,sBAEAiS,2CAEA,MAWAvS,OAAOA,eAAeA,EAAtBA,sCACA4e,eACA,mBAEArX,gBACAjH,aACAA,oBAGAA,4CACAA,gDACAA,oDACAA,oDACAA,aACGA,8CACHA,gDACAA,wDACAA,iCAIAA,gDACAA,oDACAA,8CACGA,gDACHA,wDACAA,iDAIAA,mDACAA,sBACGA,iDACHA,4DAUA47C,gDAEA,gBAqEA,OAlEAhnC,mCACA5U,aACAA,iCACAA,eAEE4U,qCACF5U,aACAA,eACAA,kCAEE4U,uCACFA,uCACA5U,gDACAA,aAEAA,aAEAA,cACAA,aACAA,+CACGA,iCACHA,gCACAA,kDAEE4U,sCACF5U,wDACE4U,0CACF+gB,kBACA31B,aACAA,oCAEAA,aACAA,sDAEE4U,2CACF5U,aACAA,iCACAA,aAEAA,wBAEE4U,4CACF5U,iDACAA,cACAA,kDAEAA,cACAA,+CAEAA,iCACAA,aACAA,gDAEE4U,+CACF5U,iDACAA,cACAA,kDAEAA,cACAA,+CAEAA,eACAA,gCACAA,kDAGA,YAOA47C,0DACA,SACA57C,kBACA,YAAgB2B,qBAAwBA,IACxCktD,OAEA,kBACA,qDACA7uD,4BAQA47C,mDACA57C,oBACAA,kBAGAg7C,4FChQAY,6CAEAA,wCACA77C,kEAOAC,0CAOAA,2CAOAA,mBAOAA,gBAOAA,yBAOAA,4CACAA,wDACAA,iBAGA47C,0EAOAA,yCACA4B,aACAiE,YAQA7F,4DAEA57C,sBAEA47C,wDAOAA,mEAEA,uCACA0F,iCACAthD,wDACAA,+BACAA,6BACAA,mGAQA47C,8DACA57C,sCACAA,mCACAA,yBACA,uCACAshD,cACAthD,iFAEAA,oGACAA,+BACAA,kGAOA47C,4DAQA,OAPA57C,sCACAA,mCACAA,yDACAA,6BACA47C,sDACA57C,mBACAA,oBACA,MAGAg7C,8FCvHAY,sCAEAA,qBAOA57C,gBAOAA,gBAGA47C,6CAQAA,qDACA,4DACA,wFAEA2B,wBACA,wCAQA,IAPA,kBACAv9C,aAEAA,qBAEAA,eAEA,UACA2I,iBACAA,cACA3I,mBACA2I,WAEA,aAQAizC,wDACA,sBACA,SACA57C,4BACA,YAAiB2B,WAAoBA,KACrC,WACA,gBACA3B,oBACAA,eACA,QAIA,aAUAN,OAAOA,eAAeA,EAAtBA,6CACA4e,eACA,uBASAs9B,wDAIA,OAHA57C,+BACAA,gBACE8Q,YACF,MAQA8qC,0DACA57C,aACA,oBACAA,yBAWA47C,wEACA,iBACAjzC,gBACAA,gBAEAA,iBAEA3I,2BAEAA,kBAUA47C,6DACA,iCACA57C,uCACE,kBACFA,yCACE,iBACFA,yCACE,CACF,IACAq/C,IACA,GAFA,eAEA,EACA,wBACAA,UACAyP,cACAC,QACI,CAEJ,IADA1P,eACA,gBACAA,UAEAA,sBACA0P,WACA1P,cACAA,qBAEG,wBACHA,WACA7L,YACAub,QACG,CAEH,IADA1P,eACA,eACAA,SAEAA,sBACA0P,WACA1P,cACAA,gBAEA,gBACA12C,gBACAA,gBAEAA,iBAGA3I,iBAGAA,mBAEA2I,aAQAizC,6DACA,eACAoT,kBAGAC,UACAtmD,eACAsmD,SAEA,SACAD,EACAlV,SAEAA,UAGA95C,kBASA47C,8DACA,eACAoT,kBAGAC,SACAtmD,eACAsmD,UAEA,SACAD,EACAlV,SAEAA,UAGA95C,kBASA47C,4DACA,qBACAsT,IACAvmD,sBACA3I,yBAEAA,qBAEEkvD,OACFvmD,uBACA3I,2BAEAA,sBAWA47C,qDACA,sBACA,SAEA,GADA57C,uBACA,YAEA,IADA,WACA,IAAkB2B,WAAoBA,IACtCwtD,iBACArP,QAGA,gBAGA,aAQAlE,yDACA,sBACA,SACA57C,iCACAovD,aAEA,YAAiBztD,WAAqBA,KACtC,iBACA8jD,GACAjkB,MAIA,aAUAoa,iEACA,sBACA,SACA57C,uBACA,qBAAkC2B,KAAQA,KAC1C,iBACA8jD,GACAjkB,MAIA,aAUAoa,+DACA,sBACA,SACA57C,4BACA,qBAAkC2B,KAAQA,IAE1C6/B,EADA2tB,YAIA,aAOAvT,wDACA,SACA,mBACA57C,iCACAovD,aAGA,YAAgBztD,WAAqBA,IACrCytD,eAIA,OAFAA,OACApvD,gBACA,MAkBA,sBAEAA,aAEAA,WAEAA,YAEAA,mBAEAA,gBAEAA,iBAEAA,iBAEAA,eAOAqvD,+BACA1mD,gBACA,iBACA3I,YAEAA,oBAEE,kBACFA,aAEAA,sBAUAqvD,iCAGAC,aAIA,kBACAtvD,sBAGAA,0BACAmvD,aAIAnvD,YAIA,mBACAA,yBAUAqvD,sCAEArvD,cACAmvD,aACA,kBACAnvD,4BAIA,mBACAA,6BAQAqvD,iCACA7tB,QACA,kBACAxhC,sBAEA,mBACAA,wBAOAqvD,oCACA,oCACArvD,2DACE,kBACFA,gCACE,iBACFA,+BAEAA,eAOAqvD,iCACArvD,mBACA,mBACAA,2CAEA,oBACAA,6CAQAqvD,kCACA,QAQA,OAPA,oCACAH,qCACE,iBACFA,qBACE,oBACFA,0BAEA,GAOAG,mCACA,oDAOA3vD,OAAOA,eAAeA,EAAtBA,kBACA4e,eACA,mBAEArX,gBACAjH,aACA,WACA2I,eAEA3I,oBACAA,oBAQAN,OAAOA,eAAeA,EAAtBA,mBACA4e,eACA,oBAEArX,gBACAjH,cACA,WACA2I,eAEA3I,oBACAA,oBAOAqvD,+BACArvD,iBACAA,gBACAA,iBACAA,iBAOAg7C,qFCpiBA,cACA,qBACAxiB,oBACA4vB,wBACA,0BACAmH,gCACAC,gCAEA,OADAjS,sBACA,MD4hBAvC,KCnkBAY,iCAEA/7C,4BAEA+7C,4BACAF,2BACA77C,UAIAG,wBAGAA,8BAEAA,kBACA4U,6CACA4jB,OACA34B,WAIA+7C,wDAqBAA,2FACAA,6GAUAA,+DAEApjB,oBACAx4B,qBACAH,qBAKA,IAFA,0BACA4vD,8BACA,IAAgB9tD,KAAeA,KAC/B,YACA+tD,kDACA1vD,iDAEA,aAUA47C,0EAEApjB,oBACA34B,qBAOA,IAJA,0BAEA4vD,wCACAE,eACA,IAAgBhuD,KAAeA,KAC/B,iBACA+tD,qDACA1vD,iDAEA,aAWA47C,iEACA,YACA2B,GACA+D,QACA9oB,aAEE,+BACF,oCACA+kB,2CAEA,kCACAqS,yBAKA,OAHA5vD,mGACA4vD,0CAEA,6BAUAhU,0DACApjB,oBACA,0BACA,kDASAojB,gEACApjB,oBACA,6BACA,kCAQAojB,yDACA,kCACA6E,mCACA,kBACA,cACE,SACFA,gDACAhgD,mBACA,kCAEAovD,GADA7vD,4BACA6vD,mBACArqD,2CACAsqD,WAEA,eADAC,QACA,OACE,SACF,YACAhC,IAEAttD,2BAGAuvD,sBAWApU,yDAEA,OADAqU,oBACA,kDAWArU,yDACAqU,oBACAzS,oBACA,6BACA0S,2BACA,iCAGAlV,uGCrMAY,2BAEA,6EACAA,6BAMA57C,yBAOAA,iBAOAA,uDAOAA,mBAOAA,0CACAA,4BAOAA,iEAEAA,sDAQAA,sCAGAA,yCAGA47C,oDAOAA,0BACApa,wBACAsc,aAUAp+C,OAAOA,eAAeA,EAAtBA,iCACA4e,eACA,iDAWAs9B,8CAYA,OAVA57C,sBAEAw4B,oBACAx4B,0DACAA,sDACAA,4BACAw4B,oBACAx4B,wBAGA,MAUA47C,2CAQA,OAPApjB,oBACAx4B,sBACAA,sDACAA,yBACAw4B,oBACAx4B,oBAEA,MAQA47C,4CASA,OARApjB,oBACAx4B,0DACAA,qDACAA,0BACAw4B,oBACAx4B,sBAGA,MAQAN,OAAOA,eAAeA,EAAtBA,iCACA4e,eACA,mDAEArX,gBACAjH,4BASAN,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,iCAEArX,gBACAjH,8BASA47C,uDACA,6CASAA,uDAEA,OADA57C,qCACA,MAQA47C,qDACA,2CASAA,qDACAqU,oBACA,6BACA,8CAOArU,2CAEA,uBACA+E,aACA3gD,mBAEA+4C,QAEA/4C,2CACA,gBACA,6BACA,8CACAA,4BACA,MACA,6BACA,YACAA,yBAEA,MACA,4BACAA,4BAGG8Q,YAEH9Q,sDACAA,oBACG8Q,cAYH8qC,qDAEA,OADApjB,oBACA,+BAOAojB,6CACAA,+CACA57C,yCACAA,4BACAA,2BACAA,sBACAA,oBACAA,qBACAA,mBACAA,mBACAA,sBACAA,kBAGAg7C,yFC7RAY,qCAEAA,gCAMA57C,+DACA,YACA,EAEA,IAEE,KAQFA,mDAGAA,mCAGA47C,iEAMAA,uDAMA,OALAA,kDACA57C,sBACAA,iBACAA,uBACAA,kBACA,MAGAg7C,qGC3CAY,kCAEAA,4BACA57C,wBAOAA,oDACAA,mCAOAA,oDAGAA,gCAGA47C,yDAMAA,mDAIA,OAHAA,8CACA57C,oBACAA,eACA,MAGAg7C,4FC9BAY,oCAGA,8FACAA,gCACA77C,4DAOAC,oDAOAA,yDAEAA,wCAGA47C,8DAMAA,mCACA1I,MACA4M,MACA8H,YAUAloD,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,wBAEArX,gBACAjH,qBAWAN,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,wBAEArX,gBACAjH,qBAUAN,OAAOA,eAAeA,EAAtBA,6CACA4e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EAAtBA,2CACA4e,eACA,wBAEArX,gBACAjH,kCACAA,kEAWAN,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,sBAEArX,gBACAjH,mCAWAN,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,6BAQAs9B,mDAUA,OATAA,8CACA57C,sBACAA,iBACAA,sBACAA,iBACAA,yCACA8S,eAEA9S,yBACA,MAGAg7C,iGCrUAY,6CACAA,uCAOA57C,qEAOAA,yBAOAA,8EAOAA,mDACA47C,iEAEA57C,yBAGA47C,qEAQAA,gEACA,uDACA57C,oBACAA,gBAEAA,+CAUA47C,qEACA,uDAIA,OAHA57C,gBACAA,yCACAA,oCACA,MASA47C,uEAEA,OADApjB,6BACA,wDASAojB,yEAGA,OAFApjB,6BACAojB,yDACA,MASAA,kFAGA,OAFApjB,6BACAojB,kEACA,MASAA,uFAGA,OAFApjB,6BACAojB,uEACA,MAWAA,4EAGA,OAFA7C,6BACA6C,4DACA,MASAA,8EAGA,OAFA7C,6BACA6C,8DACA,MAWAA,kFAIA,OAHA7C,6BACAyE,6BACA5B,kEACA,MASAA,4EACA,6FAOAA,+DACAA,wCACAA,iEACA57C,uBACA47C,8CACA57C,0BACAA,sBAGAg7C,uGC1KAY,kCAEAA,gCAOA57C,yCAOAA,yCAOAA,0CAOAA,gDAEAA,6BACAA,kBAGA47C,2DAQAl8C,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,uBAEArX,gBACAjH,iBACAA,oBAUAN,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,uBAEArX,gBACAjH,iBACAA,oBAQA47C,mDACA57C,gCACAA,mDAOA47C,iDAMA,OALAA,kDACA57C,oBACAA,eACAA,oBACAA,eACA,MAGAg7C,wFC/FAY,iCAEAA,gCAMA57C,wEACA,2BAIA47C,6DAMAA,mDAIA,OAHAA,kDACA57C,qBACAA,gBACA,MAGAg7C,kGCdAY,8BAGA,4CACAjtC,UACA,mEACAitC,kCAEA,SACA,eACA,uBAGAoV,EADApV,iCACAoV,SACG,yBAIH,mEAFAA,UAWAhxD,0DAOAA,uBAMAA,qBAMAA,uBAOAA,oBAGA47C,yDAOAA,4BACAgL,SACAjtC,WACAklC,sBACAuP,WACAjJ,qBASAvJ,qDAIA,IAFA,IACA6F,IACA,EAFA,IAEA,CAEA,0BACA,SACG,0BACH,SAEAA,IAEA,sDASA7F,0DACA57C,gCACA0I,mBACAuoD,OAEA,YAAgBtvD,WAAkBA,KAClC,yCAEAuvD,uBACAC,MACApS,uBACAqG,wCAEAtyC,8BACAisC,SACAqG,eACAH,mBACAC,qBACAC,mBACGmI,qBACHx6C,4BAEA8oC,4CACA57C,2BAEAA,+BAGA8S,qBACA,gDACA,yCACA,OACA9S,qCAGG8Q,WAEH,aAQA8qC,yDACA57C,+BACA0I,mBACAuoD,OAEA,YAAgBtvD,WAAkBA,KAClC,yCAEA3B,wDACAw4B,oBAEAx4B,4CACA8S,aAEA9S,2BAIA,aAQA47C,mDAEA,aADApjB,oBACA,oBAEA,IADA,6BACA,UACA44B,UACAC,QAGA,aAiBAzV,4CAGA,OAFA57C,oCACAA,qCACA,MAWA47C,mEAGA,GAFApjB,oBACAx4B,0BACA,2CACA,YAAiB2B,WAAkBA,KACnC,gCACA3B,mDAGAA,2CAEA,aAYA47C,gDACA,wBAEA,sCACA57C,6BACE,yBAIF,+EAFAA,2BAaAN,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,+BAQAs9B,+CAIA,aAHAA,kDACA57C,wBACAA,mBACA,oBACAA,4CACA8S,eAIA,OADA9S,yBACA,MAGAg7C,uFChRAY,+BAEA,8EACAA,mCACA77C,yDAGAuxD,kEAMAtxD,mCACAA,8DAOAA,gEACAA,yBAGA,YAAgB2B,cAAuBA,KACvC,6CACA,wCACA,yEAEA3B,iBACAsD,UACAA,uBACAA,4BACAtD,gCAKA47C,2DAQAA,8BACA0V,YACAjU,SACA+E,SACAmP,uBAYA3V,6DAUA,OARA,8BAEA,wEAEA2V,yBACA,aAOAvxD,uCAEA,yCACAwxD,qCASA,OANAC,EADA,OAEAA,KAEAD,EAJA,OAKAA,KAEA,KACE1gD,YAEF,IAcA8qC,4DAUA,OATAlzC,mBACAuoD,OAEAz4B,oBACAy4B,sBACA,iCACAM,uBACAvxD,qCACE8Q,YACF,MAaA8qC,2DAUA,OATAlzC,mBACAuoD,OAEAz4B,oBACAy4B,sBACA,iCACAjxD,qCACAuxD,qBACEzgD,YACF,MAmBA8qC,qEAGA,GAFApjB,oBACAx4B,0BACA,2CACA,YAAiB2B,WAAkBA,KACnC,gCACA3B,mDAGAA,2CAEA,aAiBA47C,8CAGA,OAFA57C,oCACAA,qCACA,MAmBA47C,kDACA,YAAgBj6C,qBAAwBA,IACxC3B,0BAEA,aAYA47C,8CACA,8BAQAA,qDAKA,OAJApjB,oBACAx4B,iCACAuxD,uBAEA,MAOA3V,iDASA,OARAA,kDACA57C,iCACAuxD,eAEAvxD,yBACAA,sBACAA,iBACAA,iBACA,MASA47C,qCAEAZ,gGCrRAY,iCAEA77C,wDACA67C,kCAMA57C,wCAOAA,+BAOAA,4CACAurD,sBACAC,wBAQAxrD,oCAOAA,oCAGAA,gCACAA,gCACAA,2CAGA47C,4DAOAA,+BACA8V,cACAlG,cACAD,cASA3P,2DACAyM,sBACA7vB,oBACA,UAIA,OAHAx4B,yCACAA,qBACAA,uCACA,MAgBA47C,kDASA,OARAA,kDACA57C,sBACAA,qBACAA,iBACAA,gBACAA,0CACAA,oBACAA,oBACA,MAGAg7C,iHCjGAY,iCAGA77C,wDACA67C,kCAQA57C,wCAMAA,0DAGAA,4CACAA,sCAGA47C,4DAOAA,+BACA+V,OACA/8C,cAEA+xC,UACAC,YACAC,SACAC,YAaAlL,2DASA,OARApjB,oBAEAx4B,iCAEAA,oBACA,2BACAA,4DAEA,MAQA47C,0DAIA,OAHApjB,oBACAx4B,gCACAA,yCACA,MAiBA47C,+CAGA,OAFA57C,oCACAA,qCACA,MAUA47C,oEAKA,OAJApjB,oBACAglB,oBACAx9C,wBACAA,yBACA,MAOA47C,kDAOA,OANAA,kDACA57C,qCACAA,qBACAA,gBACAA,wBACAA,mBACA,MAGAg7C,+EClIA4W,kFAaAhW,iCAEA77C,wDACA67C,kCAOA57C,0EAOAA,qBAOAA,yBAOAA,0DAOAA,qCACA4U,gBACA9N,wBACEwmD,wBAQFttD,wBAQAA,4DAOAA,sCACA4mD,yBACAwC,qBACAvC,uBACAC,UACAntC,6BACEk4C,uDACF7xD,2CAEA,YAAgB2B,WAAyBA,KACzC,kCACAiT,cACAo2C,wBACAC,0BACAF,oCAEA2C,0BACA1tD,uBAEA,mCACAA,2BACAA,oCAIAA,wBAIA47C,4DAQAA,+BACAkC,cACA6I,UACAC,YACAC,UACAltC,YAEAsxC,gBACAF,mBACAQ,cACA5D,aASA/L,2DAaA,OAZApjB,oBACAs5B,4BACA9xD,iCACAA,uCACA0tD,cAGA,2BACA1tD,sCACA0tD,oDACG58C,YAEH,MAQA8qC,0DAMA,OALApjB,oBACAx4B,gCACAA,sCACA0tD,iCACE58C,YACF,MAiBA8qC,+CAGA,OAFA57C,oCACAA,qCACA,MAWA47C,oEAKA,OAJApjB,oBACAglB,oBACAx9C,wBACAA,yBACA,MAUAN,OAAOA,eAAeA,EAAtBA,gDACA4e,eACA,mDAEArX,gBACA,YAAiBtF,2BAA8BA,IAC/C3B,gDAYAN,OAAOA,eAAeA,EAAtBA,4CACA4e,eACA,+CAEArX,gBACA,YAAiBtF,2BAA8BA,IAC/C3B,4CAWAN,OAAOA,eAAeA,EAAtBA,0CACA4e,eACA,mCAEArX,gBACAjH,6BACAA,8BAWAN,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,sBAEArX,gBACAjH,gBACAA,uEAQA47C,kDACAA,kDACA,YAAgBj6C,2BAA8BA,IAC9C3B,+BACAA,mCAEAA,uBACAA,2BACAA,yBACAA,oBACAA,iCACAA,4BACAA,yBACAA,oBACAA,wBACAA,mBACAA,yBACAA,qBAGAg7C,iGC/RAY,oCAEA77C,2DACA67C,kCAMA57C,2DAMAA,0DAMAA,uBAMAA,6BAEAA,iDACAA,2CAGA47C,+DAMAA,kCACAmW,eACApK,WACAjB,YACA9xC,aAEA+xC,UACAC,YACAC,SACAC,YACAntC,YACAyvC,4BAcAxN,gEACApjB,oBAEA,OADA6vB,uBACA,aAQA,OAPAroD,8CACAA,4FACAA,iCACAA,yBACA,2BACAA,iEAEA,MASA47C,6DAIA,OAHApjB,oBACAx4B,gCACAA,8CACA,MAOA47C,qDAOA,OANAA,kDACA57C,0CACAA,0BACAA,qBACAA,wBACAA,mBACA,MAGAg7C,wGC1GAY,8BAEA77C,qDACA67C,kCAOA57C,6CACAA,+BAMAA,yCAMAA,qDAOAA,iDACAA,iCAOAA,6DAMAA,2EAOAA,kEAOAA,gEAWAA,uDACAA,+CASAA,+DACAA,mDAOAA,2CAGAA,gDACAA,iEACAA,gEACAA,6DACAA,mDACAA,sDACAA,mCACAA,kIAGA47C,yDAMAA,4BACAqP,cACAF,mBACA3I,SACAsE,YACA9xC,aAEA+xC,UACAC,WACAC,UACAC,UACAntC,YAEAq4C,YACAp9C,eAEAq9C,oBACArL,UACAC,QACAC,UACAntC,aAYAiiC,iEAKA,OAJApjB,oBAEAx4B,0CACAA,0CACA,MAUA47C,gEAIA,OAHApjB,oBACAx4B,yCACAA,2CACA,MAOA47C,+CAqBA,OApBAA,kDACA57C,iIACAA,wBACAA,mBACAA,0BACAA,qBACAA,yBACAA,oBACAA,sBACAA,iBACAA,+BACAA,0BACAA,2BACAA,sBACAA,+BACAA,0BACAA,qBACAA,mBACAA,6BACAA,qBACA,MAGAg7C,8GC3LAY,+BAEA77C,sDACA67C,kCAMA57C,8CACAA,6BAMAA,8CACAA,6BAOAA,sDACAA,sBAOAA,yCAOAA,8EAOAA,0CAOAA,kEAWAA,uDACAA,+CAGAA,8CACAA,6DACAA,yCACAA,6DACAA,iCACAA,iCACAA,+EAGA47C,0DAMAA,6BACAsW,iBACAC,cACAlH,gBACAmH,QACA/U,WACAyH,aACA4B,YACA9xC,aAEA44C,gBACA5G,WACAC,QACAC,UACAntC,YAEAgtC,UACAC,WACAC,QACAC,UACAntC,aAGA04C,QACAhV,WACAyH,aACA4B,YACA9xC,aAEA44C,gBACA5G,WACAC,QACAC,UACAntC,YAEAgtC,UACAC,WACAC,QACAC,UACAntC,cAaAiiC,kEAIA,OAHApjB,oBACAx4B,wCACAA,wCACA,MAUA47C,iEAGA,OAFA57C,uCACAA,uCACA,MASA47C,wDACA,uEAOAA,gDAiBA,OAhBAA,kDACA57C,8EACAA,sBACAA,iBACAA,sBACAA,iBACAA,yBACAA,oBACAA,4BACAA,uBACAA,mBACAA,2BACAA,sBACAA,6BACAA,wBACAA,sBACA,MAGAg7C,8GC3LAY,8BAEA77C,qDACA67C,kCAOA57C,kCACAA,+BAMAA,2DAMAA,qDAOAA,oCACAA,iCAOAA,6DAMAA,2EAOAA,kEAOAA,gEAWAA,uDACAA,+CAOAA,gDAOAA,wCAGAA,gDACAA,iEACAA,6DACAA,uEACAA,sDACAA,gHAGA47C,yDAMAA,4BACAqP,cACA7I,SACAsE,YACA9xC,aAEA+xC,UACAC,WACAC,UACAC,UACAntC,YAEAq4C,YACAp9C,eAEAq9C,oBACArL,UACAC,QACAC,UACAntC,aAYAiiC,iEAMA,OAJApjB,oBAEAx4B,0CACAA,0CACA,MAUA47C,gEAGA,OAFA57C,yCACAA,2CACA,MAOA47C,+CAqBA,OApBAA,kDACA57C,+GACAA,wBACAA,mBACAA,0BACAA,qBACAA,yBACAA,oBACAA,sBACAA,iBACAA,2BACAA,sBACAA,gCACAA,2BACAA,+BACAA,0BACAA,qBACAA,mBACAA,6BACAA,qBACA,MAGAg7C,wFCpLAY,8BAEA,2FAGAgS,WAoBA,UAnBA7tD,SAEA67C,4BAOA57C,8CAGA47C,uDACA57C,0CAGAA,cAGA,uBACA,YAAiB2B,WAAmBA,IACpC3B,kBAKA47C,oDAMAA,6BACAkG,kBAYApiD,OAAOA,eAAeA,EAAtBA,0CACA4e,eACA,yDAiBAs9B,8CAOA,OALAA,sBAEA57C,eAGA,6DAWA47C,+CACA,YACA,YAEA,yBAEA,6CACA/7C,qEAGA,OADA+7C,6DACA,MAQAA,kDAEA,OADAA,gEACA,MASAA,oDACA,4CACA5X,EAEA4X,mEAQAA,gDAEA,OADAA,4CACA,MAGAZ,yFChJAY,6BAEA,sFACAA,4BAOA57C,yCACA8iD,gBACAluC,eACAovB,iBAIA4X,mDAOAA,4BACA0W,sCACA9wB,wBACAshB,WAQAlH,8CACA57C,qCACAA,sBASAN,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,4BAEArX,gBACAjH,yBAUAN,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,6BAEArX,gBACAjH,0BAWAN,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,8BAUA5e,OAAOA,eAAeA,EAAtBA,qCACA4e,eACA,2BAEArX,gBACAjH,wBAQA47C,+CACAA,4CACA57C,wBACAA,oBAGAg7C,6FC/GAY,6BAEA,4EACAA,8BAOA57C,kDAOAA,6BACA4U,YACAs+B,MACA4M,eACAhC,sBACAiC,YACE5kB,2CAOFn7B,mCAOAA,+BAEAA,yBACAA,sCACAA,0DAGA47C,qDAOAA,4BACAyH,cACAvF,YACAh2C,SACA8M,aASAlV,OAAOA,eAAeA,EAAtBA,kCACA4e,eACA,uBAEArX,gBACAjH,oBAQA47C,+CACAA,8CACA57C,0BACAA,qBACAA,oBACAA,eACAA,sCACAA,oBACAA,iBAGAg7C,wFCnFAY,6BAEA,4EACAA,oCAOA57C,8BACA+/C,eACA7M,MACA4M,QAQA9/C,8BACA+/C,eACA7M,MACA4M,QAQA9/C,oCAOAA,oCAOAA,0EASAA,oEAEAA,sCACAA,4DACAA,4DACAA,0CACAA,0CACAA,8DACAA,0DACAA,iBACAA,sBAGA47C,2DAOAA,4BACAkC,aACAlpC,YACA9M,SACA2lD,YAQA7R,8CAGA,OAFA57C,oBACAA,oBACA,MAQA47C,6CAGA,OAFA57C,mBACAA,mBACA,MASA47C,6CAIA,OAHA57C,mBACAA,mBACA47C,+CACA,MAOAA,8CAIA,OAHA57C,oBACAA,oBACA47C,iDACA,MASAl8C,OAAOA,eAAeA,EAAtBA,kCACA4e,eACA,wBAEArX,gBACAjH,kBACAA,qBAWAN,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,0CAEArX,gBACAjH,wBACAA,2BAQA47C,+CAaA,OAZAA,oDACA57C,sCACAA,qBACAA,gBACAA,qBACAA,gBACAA,2BACAA,sBACAA,2BACAA,sBACAA,oBACAA,gBACA,MAGAg7C,kGCnLAY,mCAEA,sEACAA,qCAOA57C,oEACAA,0BAOAA,iDAOAA,kDAOAA,qCACAA,kDACAA,iDAOAA,2CACAA,oDACA47C,uEACA57C,4CAOAA,sCACAA,4CACAA,oDACAA,qDAGA47C,kEAOAA,kCACA3tB,UAOA2tB,qDAeA,OAdAA,qDACA57C,0BACAA,qBACAA,gBACAA,wBACAA,mBACAA,yBACAA,oBACAA,iCACAA,4BACAA,kCACAA,6BACAA,8BACAA,yBACA,MAGAg7C,mGClGAY,0CAEA,0EACAA,oCAOA57C,0EAOAA,mCAOAA,mCAGAA,2DACAA,2DACAA,6DACAA,8BAGA47C,wEAMAA,4DASA,OARAA,oDACA57C,6BACAA,wBACAA,mBACAA,0BACAA,qBACAA,0BACAA,qBACA,MAGAg7C,2HC1CAY,4BAEA,+DACAA,8BAOA57C,+CAMAA,mBAOAA,yBAEAA,qCAGA47C,oDAOAA,2BACAiL,UACA0L,cAQA3W,+CACA,oCAEA,0BACA4W,sBACA/iD,sBACAgjD,kBACAD,mBACA,sCACA/iD,aACAgjD,WACAD,WAEAE,2BACAA,uCAEAA,iFACE5hD,sDAEF,OADA9Q,+BACA,MACE8Q,aAOF8qC,8CAIA,OAHAA,8CACA57C,6BACAA,qBACA,MAGAg7C,wGCnFAY,gCAEA,mEACAA,sCAOA57C,wCAQAA,sCAOAA,8BACAkzC,MACA4M,OACAlrC,kBACE04C,gCAOFttD,sCAOAA,8BACAkzC,MACA4M,OACAlrC,gBACAmrC,YACEuN,gCAQFttD,wCASAA,sCACAkzC,MACA4M,MACAlrC,gBACAmrC,WACEuN,8BAOFttD,qDAOAA,6CACAA,4BAOAA,oBAOAA,8BAGAA,wCACAA,wCAEAA,4FAEAA,+CACAA,6DAEA,iBACAA,oBACAA,oBACAA,4BAEAA,kCAGA47C,gEAQAA,+BACA+W,QACAC,cACAtP,YACAkC,YAaA9lD,OAAOA,eAAeA,EAAtBA,sCACA4e,eACA,oBAEArX,gBACAjH,cACA,QACAyhD,KACAzhD,iBACAA,gCACAA,iBACAA,gCACA6yD,8CAEA7yD,gCACAA,iBACAA,gCACAA,iBACA6yD,2CAEA7yD,kDAeAN,OAAOA,eAAeA,EAAtBA,2CACA4e,eACA,yBAEArX,gBACAjH,mCACAA,0BAQA47C,kDAoBA,OAnBAA,sDACA57C,0BACAA,qBACAA,0B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BACAA,wBAQA47C,kDAMA,OALAA,8CACA57C,yBACAA,oBACAA,uBACAA,kBACA,MAGAg7C,qGClEAY,6BAEA,gGACAA,8BAQA57C,iDAOAA,gDAMAA,oCAMAA,wBAOAA,oCAMAA,qCACA+9C,YACAD,YACAh3C,QAOA9G,gDACAA,gCAOAA,6BAOAA,wBAGAA,uEACAA,mDACAA,kDAEAA,sEAEAA,sBACAA,+BAEAA,8BAGA47C,qDAMAA,4BACA8L,kBACAC,UACAwM,cACArtD,IACA+0C,OACAuY,UACAxN,UACAjtC,aAWAja,OAAOA,eAAeA,EAAtBA,qCACA4e,eACA,sBAEArX,gBACAjH,gBACAA,yBAUAN,OAAOA,eAAeA,EAAtBA,2CACA4e,eACA,4BAEArX,gBACAjH,sBACAA,yBAUAN,OAAOA,eAAeA,EAAtBA,yCACA4e,eACA,0DAEArX,gBACAjH,uDAQA47C,sDACA57C,yCACAA,wGAOA47C,+CAeA,OAdAA,8CACA57C,wBACAA,mBACAA,2BACAA,sBACAA,yBACAA,oBACAA,wBACAA,mBACAA,2BACAA,sBACAA,6BACAA,eACAA,YACA,MAGAg7C,6FC9LAY,gCAEA,uEACAA,8BAOA57C,6BACA89C,sBACAkC,kBACA9M,OACA4M,QASA9/C,+BAOAA,kCAOAA,mCAGAA,iCACAA,oCACAA,iBACAA,uCAIA47C,wDAOAA,+BACAkC,YACAlpC,YACA9M,SAQA8zC,iDAEA,OADA57C,mBACA,MAQA47C,gDAEA,OADA57C,kBACA,MASA47C,gDAEA,OADA57C,kBACA,MAOA47C,iDAEA,OADA57C,mBACA,MAUAN,OAAOA,eAAeA,EAAtBA,qCACA4e,eACA,uBAEArX,gBACAjH,oBAQA47C,kDASA,OARAA,8CACA57C,oBACAA,eACAA,uBACAA,kBACAA,sCACAA,oBACAA,gBACA,MAGAg7C,+FCjIAY,gCAEA,iGACAA,8BAOA57C,6BACA89C,sBACAkC,oBASAhgD,+BAOAA,mCAMAA,2CAOAA,gBAGAA,gCACAA,yCACAA,iBACAA,sCACAA,uBACAA,oCAIA47C,wDAOAA,+BACAkC,YACAlpC,YACA9M,QACA4/C,kBACAC,YACA1J,QACArpC,eACAmpC,YACAj3C,MASA80C,iDAEA,OADA57C,mBACA,MAQA47C,gDAEA,OADA57C,kBACA,MASA47C,gDAEA,OADA57C,kBACA,MAOA47C,iDAEA,OADA57C,mBACA,MAUAN,OAAOA,eAAeA,EAAtBA,qCACA4e,eACA,uBAEArX,gBACAjH,oBAUAN,OAAOA,eAAeA,EAAtBA,8CACA4e,eACA,sBAEArX,gBACAjH,kCAEAA,8BAUAN,OAAOA,eAAeA,EAAtBA,wCACA4e,eACA,sBAEArX,gBACAjH,gBACAA,kDAQA47C,kDASA,OARAA,8CACA57C,oBACAA,eACAA,sBACAA,iBACAA,sCACAA,oBACAA,gBACA,MAGAg7C,kHCxKAY,8BAEAA,qBAOA57C,gCAOAA,uBAEA47C,gCAEA57C,sBAIE8Q,aAIF8qC,qCAQAA,6BACAyY,YACAC,YACAC,YACAC,WACAC,WACAC,WACAC,MACAC,MACAC,OAOAjZ,2CAOAA,mDASAA,yDACA,+CACA,iBACA57C,uFACAA,uFACAA,4FAEAA,oDAGA,OADAA,qDACA,MAgBA47C,kEACA,8CACA,iBACA57C,sFACAA,sFACAA,sFACAA,iFACAA,iFACAA,sFAEAA,6DAGA,OADAA,wDACA,MASAN,OAAOA,eAAeA,EAAtBA,wCACAuH,gBACAjH,oBACAA,6CAEAse,eACA,4BAUA5e,OAAOA,eAAeA,EAAtBA,wCACAuH,gBACAjH,oBACAA,6CAEAse,eACA,4BAUA5e,OAAOA,eAAeA,EAAtBA,wCACAuH,gBACAjH,oBACAA,6CAEAse,eACA,4BAWA5e,OAAOA,eAAeA,EAAtBA,uCACAuH,gBACAjH,uBACAA,mDAEAse,eACA,+BAWA5e,OAAOA,eAAeA,EAAtBA,uCACAuH,gBACAjH,uBACAA,mDAEAse,eACA,+BAWA5e,OAAOA,eAAeA,EAAtBA,uCACAuH,gBACAjH,uBACAA,mDAEAse,eACA,+BAWA5e,OAAOA,eAAeA,EAAtBA,kCACAuH,gBACAjH,uBACAA,mDAEAse,eACA,+BAWA5e,OAAOA,eAAeA,EAAtBA,kCACAuH,gBACAjH,uBACAA,mDAEAse,eACA,+BAWA5e,OAAOA,eAAeA,EAAtBA,kCACAuH,gBACAjH,uBACAA,mDAEAse,eACA,+BAQAs9B,gDAGA,OAFA57C,uBACAA,oBACA,MAIA,yBACA47C,yBAEAA,yCACAr0C,kCAEAq0C,8BAGAA,4BAKAZ,mFCvSAY,0BAEAA,qBAOA57C,oCAOAA,oBASAA,uBAOAA,+CAGA47C,iCAUAA,gDASA,OARA57C,kBACAwhC,WACAhJ,yBAGA,yBACAggB,2CAEA,MASAoD,4CAEA,OADA57C,uCACA,MAOA47C,8CAEA,IADA,oCACA,qEACA,2BACAh0B,2BACA21B,aAGAv9C,uBACAw4C,4CAKAoD,kCAEAZ,yEC7FA8Z,YAWAlZ,uCACAkZ,sBACAA,gCAEAvT,4BACA,oDAGA,OAFAvhD,gBACA+0D,gBACA,GAYAnZ,0CAKA,OAJAkZ,sBACAA,gCAEAlZ,iCACA,MAIAA,yCACAr0C,QACAutD,WAEAA,KACAvtD,cAIAyzC,yEChDAY,gCAEA,uEACAA,qBAMA57C,eAMAA,eAMAA,wBAGA47C,uCAOAA,+BACA1I,MACA4M,MACAkV,YAUAt1D,OAAOA,eAAeA,EAAtBA,sCACA4e,eACA,+BACAwhC,2BACAmV,gBACAhjD,cAIA,OAHAjS,eACAiS,iBAEA,KAIA+oC,+EC5CAY,mCAEAA,qBAOA57C,uCAQAA,gEAGA47C,uCAMAA,+CACA,2CACA,8BACA,wBAIA,IAHA,mCACAqZ,gBACAzM,IACA,IAAkB7mD,WAAyBA,KAC3C,WACA,eACA,WACAi6C,sBACA57C,mBAEAA,aAGAwoD,UAGAxoD,aAGA,mBAUA47C,gEAIA,IAHA,SACA4M,IACA0M,KACA,IAAgBvzD,WAAoBA,KACpC,WACAi6C,uBACAsZ,KACAC,oBAEAA,gBAEA3M,QAEA,KAEA,YAAiBtO,WAAyBA,IAC1Cib,YAGA,UAOAvZ,kDACA57C,kBAGAg7C,oFCjGAY,qCAEA,iFACAA,qBAMA57C,qBAaAA,oBAGA47C,4CAOAA,oCACA5X,QACA8e,WAUApjD,OAAOA,eAAeA,EAAtBA,2CACA4e,eACA,iBACA0lB,mCACA,oBACAoxB,iBACAC,4BACA,qCAYAzZ,iEACA,yBAEA,IADA,SACA,IAAiBj6C,WAAkBA,IACnC2zD,oCAEA,SACE,0BACF,SACA,eACAC,oCAEA,SAIA,aAFAH,qBAEA,EADAC,mBAWAzZ,0DACA,6BACA3pC,EAGAjS,mBAQA47C,uDACA57C,kBAGAg7C,+FCvHAY,8BAEA,gEACA77C,wCACA67C,+BAOA57C,iEAGA47C,yDAOAA,6BACAtJ,WAQAsJ,iDACA,kCASAl8C,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,4BAEArX,gBACAjH,yBAOA47C,gDACAA,iDACA57C,yBACAA,qBAGAg7C,qHCjDAY,8BAEA,6FACAA,+BAOA57C,gEAEAA,yCACAA,uCACAA,2CACAA,2CACAA,6CACAA,6CACAA,uCACAA,2CAOAA,iEAOAA,qDAGAA,iCACAA,iCACAA,iCACAA,2BACAA,2BACAA,4BAGA47C,yDAQAA,6BACAyY,YACAC,YACAC,YACAiB,eACAC,eACAC,eACAC,0BACAC,gBACAC,wBACAC,gBACAC,mBACAC,mBACAC,cACAC,iBAQAta,mDASAA,yDACA,2BACA,iBACA57C,mEACAA,mEACAA,wEAEAA,gCAGA,OADAA,qDACA,MAUA47C,4DACA,8BACA,iBACA57C,sEACAA,sEACAA,2EAEAA,mCAGA,OADAA,wDACA,MASAN,OAAOA,eAAeA,EAAtBA,wCACAuH,gBACAjH,oBACAA,6CAEAse,eACA,4BAUA5e,OAAOA,eAAeA,EAAtBA,wCACAuH,gBACAjH,oBACAA,6CAEAse,eACA,4BAUA5e,OAAOA,eAAeA,EAAtBA,wCACAuH,gBACAjH,oBACAA,6CAEAse,eACA,4BAUA5e,OAAOA,eAAeA,EAAtBA,2CACAuH,gBACAjH,uBACAA,mDAEAse,eACA,+BAUA5e,OAAOA,eAAeA,EAAtBA,2CACAuH,gBACAjH,uBACAA,mDAEAse,eACA,+BAUA5e,OAAOA,eAAeA,EAAtBA,2CACAuH,gBACAjH,uBACAA,mDAEAse,eACA,+BASAs9B,8CACAl8C,sDACAuH,gBACAjH,mBAEAse,eACA,2BAWAs9B,kDAQAA,iDAQAA,mDAQAA,mDAQAA,oDASAA,oDAQAA,mDASAA,iDAMAA,gDAMA,OALAA,iDACA57C,0BACAA,kBACAA,uBACAA,oBACA,MAGAg7C,8FClTAY,0CAEAA,+BACA77C,yEAOAC,wDACAosD,4BACAC,gCAQArsD,8CAOAA,gDAOAA,+BAMAA,yCAMAA,yCAMAA,2CAGAA,+CACAA,+CACAA,iDAEAA,qEAGA47C,oEAOAA,wCACAua,kCACAC,kCACAC,mCACAjK,iBACAC,mBAOAzQ,2DAaA,OAZAA,iDACA57C,yBACAA,oEACAA,mBACAA,mBACAA,oBACAA,oBACAA,cACAA,cACAA,eACAA,uBACAA,wBACA,MAGAg7C,mGCzGAY,0BAEAA,+BACA57C,wBAOAA,4CAEA47C,8CACAA,+CAGAA,qDAMAA,4CAIA,OAHAA,iDACA57C,sBACAA,iBACA,MAGAg7C,gGC1BAY,wCAEAA,+BACA77C,+DAOAC,yDAOAA,0DAMAA,yCAMAA,2CAEAA,8DACAA,iEACAA,gCAGA47C,kEAOAA,sCACAwa,KACApU,QACA6F,cACAluC,YACAitC,WACAkB,SAEAwO,MACAtU,QACA6F,cACAluC,YACAitC,WACAkB,UAQAlM,yDAWA,OAVAA,iDACA57C,+BACAA,mBACAA,cACAA,oBACAA,eACAA,6BACAA,wBACAA,6BACAA,wBACA,MAGAg7C,iGCzEAY,2BAEA,kEACAA,+BAMA57C,2BAOAA,YAOAA,8EAGA47C,sDAQAA,0BACAkK,cAOAlK,8CAGA,IAFA,gCACA2a,IACA,IAAgB50D,WAAmBA,KACnC,WACA40D,OAEA,4BAMA,OAFAv2D,+CAEA,+BAOA47C,8CAEA,OADA57C,0BACA,IAOA47C,6CAIA,OAHAA,iDACA57C,yBACAA,oBACA,MAGAg7C,qFChFAY,6BAEA,oEACAA,+BAOA57C,kEACA4mD,YACAC,WACAgB,wBAQA7nD,0CAEAA,6BAGA47C,wDAQAA,4BACAiM,eAOAjM,+CAMA,OALAA,iDACA57C,2BACAA,sBACAA,4BACAA,oBACA,MAGAg7C,6FChDAY,0BAEA,6EACAA,+BACA57C,wBAMAA,mDAMAA,oEAGA47C,0CAEAA,8EAGAA,qDAOAA,yBACAkK,aACA+B,eASAnoD,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,2CAEArX,gBACAjH,wCAUAN,OAAOA,eAAeA,EAAtBA,oCACA4e,eACA,iCAEArX,gBACAjH,8BAQA47C,4CAMA,OALAA,iDACA57C,yBACAA,mBACAA,oBACAA,cACA,MAGAg7C,oFCzFAY,yBAEA,2DACA77C,mCACA67C,+BAOA57C,iEAGA47C,oDAOAA,wBACAtJ,WAQAsJ,4CACA,kCAWAl8C,OAAOA,eAAeA,EAAtBA,8BACA4e,eACA,4BAEArX,gBACAjH,yBAQA47C,2CACAA,iDACA57C,yBACAA,qBAGAg7C,wFCtDAY,yBAEA,uEACAA,+BAOA57C,+BAOAA,8DACAosD,4BACAC,gCAQArsD,gEAOAA,gEAOAA,kEAOAA,4BAOAA,4BAOAA,8BAOAA,8BAOAA,oDAOAA,sDAGAA,0DACAA,0DACAA,4DACAA,qEAGA47C,oDAKAA,wBACAua,MACAC,MACAC,OACAjK,iBACAC,oBAOAzQ,2CAiBA,OAhBAA,iDACA57C,oEACAA,+BACAA,0BACAA,uBACAA,wBACAA,wBACAA,mBACAA,wBACAA,mBACAA,yBACAA,oBACAA,cACAA,cACAA,eACAA,YACA,MAGAg7C,yFClIAY,6BAEA,sEACAA,iCAOA57C,iDAOAA,+CACA8qD,UACAzN,gBACAC,cAQAt9C,0BAOAA,gCAEAA,iCACAA,kCAGA47C,wDAQAA,4BACAkP,MACAzN,SACAC,QACA6S,SAUAzwD,OAAOA,eAAeA,EAAtBA,kCACA4e,eACA,wBAEArX,gBACAjH,qBAYAN,OAAOA,eAAeA,EAAtBA,mCACA4e,eACA,sCAUA5e,OAAOA,eAAeA,EAAtBA,kCACA4e,eACA,0BAEArX,gBACAjH,uBAQA47C,+CASA,OARAA,iDACA57C,iCACAA,uBACAA,kBACAA,cACAA,iBACAA,qBACAA,gBACA,MAGAg7C,2CCtIA,MAGAn2C,aACA,YADAA,GAIA,IAEAA,iDACC,SAED,oCAOA1F,6BCnBAqr6C","file":"static/js/2.f56629bd.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n","import { StyleSheet } from '@emotion/sheet';\nimport Stylis from '@emotion/stylis';\nimport '@emotion/weak-memoize';\n\n// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new Stylis(stylisOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\nexport default createCache;\n","/* eslint-disable */\n// murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js\nfunction murmurhash2_32_gc(str) {\n  var l = str.length,\n      h = l ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return (h >>> 0).toString(36);\n}\n\nexport default murmurhash2_32_gc;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles };\n","import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options); // $FlowFixMe\n\n  cache.sheet.speedy = function (value) {\n    if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, this !== undefined ? this.mergedProps : undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    // $FlowFixMe\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport default createEmotion;\n","import createEmotion from 'create-emotion';\n\nvar _createEmotion = createEmotion(),\n    flush = _createEmotion.flush,\n    hydrate = _createEmotion.hydrate,\n    cx = _createEmotion.cx,\n    merge = _createEmotion.merge,\n    getRegisteredStyles = _createEmotion.getRegisteredStyles,\n    injectGlobal = _createEmotion.injectGlobal,\n    keyframes = _createEmotion.keyframes,\n    css = _createEmotion.css,\n    sheet = _createEmotion.sheet,\n    cache = _createEmotion.cache;\n\nexport { cache, css, cx, flush, getRegisteredStyles, hydrate, injectGlobal, keyframes, merge, sheet };\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.12.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var h=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113;n&&Symbol.for(\"react.suspense_list\");\nvar z=n?Symbol.for(\"react.memo\"):60115,aa=n?Symbol.for(\"react.lazy\"):60116;n&&Symbol.for(\"react.fundamental\");n&&Symbol.for(\"react.responder\");n&&Symbol.for(\"react.scope\");var A=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction B(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,c){this.props=a;this.context=b;this.refs=D;this.updater=c||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(B(85));this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,c){this.props=a;this.context=b;this.refs=D;this.updater=c||C}var H=G.prototype=new F;\nH.constructor=G;h(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,l=null;if(null!=b)for(e in void 0!==b.ref&&(l=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var k=Array(f),m=0;m<f;m++)k[m]=arguments[m+2];d.children=k}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:l,props:d,_owner:J.current}}\nfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,c,e){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var l=0;l<a.length;l++){d=a[l];var f=b+T(d,l);g+=S(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),l=\n0;!(d=a.next()).done;)d=d.value,f=b+T(d,l++),g+=S(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(B(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function U(a,b,c){return null==a?0:S(a,\"\",b,c)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\nfunction da(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,e,c,function(a){return a}):null!=a&&(N(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+c)),e.push(a))}function V(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(O,\"$&/\")+\"/\");b=Q(b,g,e,d);U(a,da,b);R(b)}function W(){var a=I.current;if(null===a)throw Error(B(321));return a}\nvar X={Children:{map:function(a,b,c){if(null==a)return a;var e=[];V(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=Q(null,null,b,c);U(a,ca,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){if(!N(a))throw Error(B(143));return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:x,render:a}},lazy:function(a){return{$$typeof:aa,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,c){return W().useImperativeHandle(a,b,c)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,c){return W().useReducer(a,b,c)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,Profiler:u,StrictMode:t,Suspense:y,createElement:M,cloneElement:function(a,b,c){if(null===a||void 0===a)throw Error(B(267,a));var e=h({},a.props),d=a.key,g=a.ref,l=a._owner;\nif(null!=b){void 0!==b.ref&&(g=b.ref,l=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(k in b)K.call(b,k)&&!L.hasOwnProperty(k)&&(e[k]=void 0===b[k]&&void 0!==f?f[k]:b[k])}var k=arguments.length-2;if(1===k)e.children=c;else if(1<k){f=Array(k);for(var m=0;m<k;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,key:d,ref:g,props:e,_owner:l}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.12.0\",\n__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:h}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n","/** @license React v16.12.0\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),q=require(\"scheduler\");function u(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(u(227));var ba=null,ca={};\nfunction da(){if(ba)for(var a in ca){var b=ca[a],c=ba.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!ea[c]){if(!b.extractEvents)throw Error(u(97,a));ea[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(fa.hasOwnProperty(h))throw Error(u(99,h));fa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ha(k[e],g,h);e=!0}else f.registrationName?(ha(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}\nfunction ha(a,b,c){if(ia[a])throw Error(u(100,a));ia[a]=b;ja[a]=b.eventTypes[c].dependencies}var ea=[],fa={},ia={},ja={};function ka(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var la=!1,ma=null,na=!1,oa=null,pa={onError:function(a){la=!0;ma=a}};function qa(a,b,c,d,e,f,g,h,k){la=!1;ma=null;ka.apply(pa,arguments)}\nfunction ra(a,b,c,d,e,f,g,h,k){qa.apply(this,arguments);if(la){if(la){var l=ma;la=!1;ma=null}else throw Error(u(198));na||(na=!0,oa=l)}}var sa=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ra(d,b,void 0,a);a.currentTarget=null}function xa(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ba(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a){ya(a,Aa);if(za)throw Error(u(95));if(na)throw a=oa,na=!1,oa=null,a;}}\nvar Ca={injectEventPluginOrder:function(a){if(ba)throw Error(u(101));ba=Array.prototype.slice.call(a);da()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!ca.hasOwnProperty(c)||ca[c]!==d){if(ca[c])throw Error(u(102,c));ca[c]=d;b=!0}}b&&da()}};\nfunction Da(a,b){var c=a.stateNode;if(!c)return null;var d=sa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==typeof c)throw Error(u(231,b,typeof c));\nreturn c}var Ea=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Ea.hasOwnProperty(\"ReactCurrentDispatcher\")||(Ea.ReactCurrentDispatcher={current:null});Ea.hasOwnProperty(\"ReactCurrentBatchConfig\")||(Ea.ReactCurrentBatchConfig={suspense:null});\nvar Fa=/^(.*)[\\\\\\/]/,w=\"function\"===typeof Symbol&&Symbol.for,Ga=w?Symbol.for(\"react.element\"):60103,Ha=w?Symbol.for(\"react.portal\"):60106,Ia=w?Symbol.for(\"react.fragment\"):60107,Ja=w?Symbol.for(\"react.strict_mode\"):60108,Ka=w?Symbol.for(\"react.profiler\"):60114,La=w?Symbol.for(\"react.provider\"):60109,Ma=w?Symbol.for(\"react.context\"):60110,Na=w?Symbol.for(\"react.concurrent_mode\"):60111,Oa=w?Symbol.for(\"react.forward_ref\"):60112,Pa=w?Symbol.for(\"react.suspense\"):60113,Qa=w?Symbol.for(\"react.suspense_list\"):\n60120,Ra=w?Symbol.for(\"react.memo\"):60115,Sa=w?Symbol.for(\"react.lazy\"):60116;w&&Symbol.for(\"react.fundamental\");w&&Symbol.for(\"react.responder\");w&&Symbol.for(\"react.scope\");var Ta=\"function\"===typeof Symbol&&Symbol.iterator;function Ua(a){if(null===a||\"object\"!==typeof a)return null;a=Ta&&a[Ta]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Va(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}\nfunction Wa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case Ia:return\"Fragment\";case Ha:return\"Portal\";case Ka:return\"Profiler\";case Ja:return\"StrictMode\";case Pa:return\"Suspense\";case Qa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ma:return\"Context.Consumer\";case La:return\"Context.Provider\";case Oa:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\n\"ForwardRef\");case Ra:return Wa(a.type);case Sa:if(a=1===a._status?a._result:null)return Wa(a)}return null}function Xa(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=Wa(a.type);c=null;d&&(c=Wa(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Fa,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar Ya=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),Za=null,$a=null,ab=null;function bb(a){if(a=ua(a)){if(\"function\"!==typeof Za)throw Error(u(280));var b=sa(a.stateNode);Za(a.stateNode,a.type,b)}}function cb(a){$a?ab?ab.push(a):ab=[a]:$a=a}function db(){if($a){var a=$a,b=ab;ab=$a=null;bb(a);if(b)for(a=0;a<b.length;a++)bb(b[a])}}function eb(a,b){return a(b)}function fb(a,b,c,d){return a(b,c,d)}function gb(){}\nvar hb=eb,ib=!1,jb=!1;function kb(){if(null!==$a||null!==ab)gb(),db()}new Map;var lb=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,mb=Object.prototype.hasOwnProperty,nb={},ob={};\nfunction pb(a){if(mb.call(ob,a))return!0;if(mb.call(nb,a))return!1;if(lb.test(a))return ob[a]=!0;nb[a]=!0;return!1}function qb(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction rb(a,b,c,d){if(null===b||\"undefined\"===typeof b||qb(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1)});var sb=/[\\-:]([a-z])/g;function tb(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(sb,\ntb);D[b]=new B(b,1,!1,a,null,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(sb,tb);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(sb,tb);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0)});function ub(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}\nfunction vb(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(rb(b,c,e,d)&&(c=null),d||null===e?pb(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction wb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction xb(a){var b=wb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function yb(a){a._valueTracker||(a._valueTracker=xb(a))}function zb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=wb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Ab(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Bb(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=ub(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Cb(a,b){b=b.checked;null!=b&&vb(a,\"checked\",b,!1)}\nfunction Eb(a,b){Cb(a,b);var c=ub(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Fb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Fb(a,b.type,ub(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Gb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Fb(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function Hb(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Ib(a,b){a=n({children:void 0},b);if(b=Hb(b.children))a.children=b;return a}\nfunction Jb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+ub(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Kb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Lb(a,b){var c=b.value;if(null==c){c=b.defaultValue;b=b.children;if(null!=b){if(null!=c)throw Error(u(92));if(Array.isArray(b)){if(!(1>=b.length))throw Error(u(93));b=b[0]}c=b}null==c&&(c=\"\")}a._wrapperState={initialValue:ub(c)}}\nfunction Mb(a,b){var c=ub(b.value),d=ub(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function Nb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var Ob={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Pb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Qb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Pb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Rb,Sb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Ob.svg||\"innerHTML\"in a)a.innerHTML=b;else{Rb=Rb||document.createElement(\"div\");Rb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=Rb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Tb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Ub(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Vb={animationend:Ub(\"Animation\",\"AnimationEnd\"),animationiteration:Ub(\"Animation\",\"AnimationIteration\"),animationstart:Ub(\"Animation\",\"AnimationStart\"),transitionend:Ub(\"Transition\",\"TransitionEnd\")},Wb={},Xb={};\nYa&&(Xb=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Vb.animationend.animation,delete Vb.animationiteration.animation,delete Vb.animationstart.animation),\"TransitionEvent\"in window||delete Vb.transitionend.transition);function Yb(a){if(Wb[a])return Wb[a];if(!Vb[a])return a;var b=Vb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Xb)return Wb[a]=b[c];return a}var Zb=Yb(\"animationend\"),$b=Yb(\"animationiteration\"),ac=Yb(\"animationstart\"),bc=Yb(\"transitionend\"),cc=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \");\nfunction ec(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function fc(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function gc(a){if(ec(a)!==a)throw Error(u(188));}\nfunction hc(a){var b=a.alternate;if(!b){b=ec(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return gc(e),a;if(f===d)return gc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function ic(a){a=hc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar jc,kc,lc,mc=!1,nc=[],oc=null,pc=null,qc=null,rc=new Map,sc=new Map,tc=[],uc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit\".split(\" \"),vc=\"focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture\".split(\" \");\nfunction wc(a){var b=xc(a);uc.forEach(function(c){yc(c,a,b)});vc.forEach(function(c){yc(c,a,b)})}function zc(a,b,c,d){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:d}}function Ac(a,b){switch(a){case \"focus\":case \"blur\":oc=null;break;case \"dragenter\":case \"dragleave\":pc=null;break;case \"mouseover\":case \"mouseout\":qc=null;break;case \"pointerover\":case \"pointerout\":rc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":sc.delete(b.pointerId)}}\nfunction Bc(a,b,c,d,e){if(null===a||a.nativeEvent!==e)return a=zc(b,c,d,e),null!==b&&(b=Cc(b),null!==b&&kc(b)),a;a.eventSystemFlags|=d;return a}function Dc(a,b,c,d){switch(b){case \"focus\":return oc=Bc(oc,a,b,c,d),!0;case \"dragenter\":return pc=Bc(pc,a,b,c,d),!0;case \"mouseover\":return qc=Bc(qc,a,b,c,d),!0;case \"pointerover\":var e=d.pointerId;rc.set(e,Bc(rc.get(e)||null,a,b,c,d));return!0;case \"gotpointercapture\":return e=d.pointerId,sc.set(e,Bc(sc.get(e)||null,a,b,c,d)),!0}return!1}\nfunction Ec(a){var b=Fc(a.target);if(null!==b){var c=ec(b);if(null!==c)if(b=c.tag,13===b){if(b=fc(c),null!==b){a.blockedOn=b;q.unstable_runWithPriority(a.priority,function(){lc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Gc(a){if(null!==a.blockedOn)return!1;var b=Hc(a.topLevelType,a.eventSystemFlags,a.nativeEvent);if(null!==b){var c=Cc(b);null!==c&&kc(c);a.blockedOn=b;return!1}return!0}\nfunction Ic(a,b,c){Gc(a)&&c.delete(b)}function Jc(){for(mc=!1;0<nc.length;){var a=nc[0];if(null!==a.blockedOn){a=Cc(a.blockedOn);null!==a&&jc(a);break}var b=Hc(a.topLevelType,a.eventSystemFlags,a.nativeEvent);null!==b?a.blockedOn=b:nc.shift()}null!==oc&&Gc(oc)&&(oc=null);null!==pc&&Gc(pc)&&(pc=null);null!==qc&&Gc(qc)&&(qc=null);rc.forEach(Ic);sc.forEach(Ic)}function Kc(a,b){a.blockedOn===b&&(a.blockedOn=null,mc||(mc=!0,q.unstable_scheduleCallback(q.unstable_NormalPriority,Jc)))}\nfunction Lc(a){function b(b){return Kc(b,a)}if(0<nc.length){Kc(nc[0],a);for(var c=1;c<nc.length;c++){var d=nc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==oc&&Kc(oc,a);null!==pc&&Kc(pc,a);null!==qc&&Kc(qc,a);rc.forEach(b);sc.forEach(b);for(c=0;c<tc.length;c++)d=tc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<tc.length&&(c=tc[0],null===c.blockedOn);)Ec(c),null===c.blockedOn&&tc.shift()}\nfunction Mc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Nc(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Oc(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\nfunction Pc(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Nc(b);for(b=c.length;0<b--;)Oc(c[b],\"captured\",a);for(b=0;b<c.length;b++)Oc(c[b],\"bubbled\",a)}}function Qc(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Rc(a){a&&a.dispatchConfig.registrationName&&Qc(a._targetInst,null,a)}\nfunction Sc(a){ya(a,Pc)}function Tc(){return!0}function Uc(){return!1}function E(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?Tc:Uc;this.isPropagationStopped=Uc;return this}\nn(E.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=Tc)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=Tc)},persist:function(){this.isPersistent=Tc},isPersistent:Uc,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=Uc;this._dispatchInstances=this._dispatchListeners=null}});E.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nE.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;Vc(c);return c};Vc(E);function Wc(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction Xc(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Vc(a){a.eventPool=[];a.getPooled=Wc;a.release=Xc}var Yc=E.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Zc=E.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),$c=E.extend({view:null,detail:null}),ad=$c.extend({relatedTarget:null});\nfunction bd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar cd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},dd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ed={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function gd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=ed[a])?!!b[a]:!1}function hd(){return gd}\nvar id=$c.extend({key:function(a){if(a.key){var b=cd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=bd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?dd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:hd,charCode:function(a){return\"keypress\"===a.type?bd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?bd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),jd=0,kd=0,ld=!1,md=!1,nd=$c.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:hd,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=jd;jd=a.screenX;return ld?\"mousemove\"===a.type?a.screenX-\nb:0:(ld=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;var b=kd;kd=a.screenY;return md?\"mousemove\"===a.type?a.screenY-b:0:(md=!0,0)}}),od=nd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),pd=nd.extend({dataTransfer:null}),qd=$c.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:hd}),rd=E.extend({propertyName:null,\nelapsedTime:null,pseudoElement:null}),sd=nd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"blur\",\"blur\",0],[\"cancel\",\"cancel\",0],[\"click\",\"click\",0],[\"close\",\"close\",0],[\"contextmenu\",\"contextMenu\",0],[\"copy\",\"copy\",0],[\"cut\",\"cut\",0],[\"auxclick\",\"auxClick\",0],[\"dblclick\",\"doubleClick\",0],[\"dragend\",\"dragEnd\",\n0],[\"dragstart\",\"dragStart\",0],[\"drop\",\"drop\",0],[\"focus\",\"focus\",0],[\"input\",\"input\",0],[\"invalid\",\"invalid\",0],[\"keydown\",\"keyDown\",0],[\"keypress\",\"keyPress\",0],[\"keyup\",\"keyUp\",0],[\"mousedown\",\"mouseDown\",0],[\"mouseup\",\"mouseUp\",0],[\"paste\",\"paste\",0],[\"pause\",\"pause\",0],[\"play\",\"play\",0],[\"pointercancel\",\"pointerCancel\",0],[\"pointerdown\",\"pointerDown\",0],[\"pointerup\",\"pointerUp\",0],[\"ratechange\",\"rateChange\",0],[\"reset\",\"reset\",0],[\"seeked\",\"seeked\",0],[\"submit\",\"submit\",0],[\"touchcancel\",\"touchCancel\",\n0],[\"touchend\",\"touchEnd\",0],[\"touchstart\",\"touchStart\",0],[\"volumechange\",\"volumeChange\",0],[\"drag\",\"drag\",1],[\"dragenter\",\"dragEnter\",1],[\"dragexit\",\"dragExit\",1],[\"dragleave\",\"dragLeave\",1],[\"dragover\",\"dragOver\",1],[\"mousemove\",\"mouseMove\",1],[\"mouseout\",\"mouseOut\",1],[\"mouseover\",\"mouseOver\",1],[\"pointermove\",\"pointerMove\",1],[\"pointerout\",\"pointerOut\",1],[\"pointerover\",\"pointerOver\",1],[\"scroll\",\"scroll\",1],[\"toggle\",\"toggle\",1],[\"touchmove\",\"touchMove\",1],[\"wheel\",\"wheel\",1],[\"abort\",\"abort\",\n2],[Zb,\"animationEnd\",2],[$b,\"animationIteration\",2],[ac,\"animationStart\",2],[\"canplay\",\"canPlay\",2],[\"canplaythrough\",\"canPlayThrough\",2],[\"durationchange\",\"durationChange\",2],[\"emptied\",\"emptied\",2],[\"encrypted\",\"encrypted\",2],[\"ended\",\"ended\",2],[\"error\",\"error\",2],[\"gotpointercapture\",\"gotPointerCapture\",2],[\"load\",\"load\",2],[\"loadeddata\",\"loadedData\",2],[\"loadedmetadata\",\"loadedMetadata\",2],[\"loadstart\",\"loadStart\",2],[\"lostpointercapture\",\"lostPointerCapture\",2],[\"playing\",\"playing\",2],[\"progress\",\n\"progress\",2],[\"seeking\",\"seeking\",2],[\"stalled\",\"stalled\",2],[\"suspend\",\"suspend\",2],[\"timeupdate\",\"timeUpdate\",2],[bc,\"transitionEnd\",2],[\"waiting\",\"waiting\",2]],ud={},vd={},wd=0;for(;wd<td.length;wd++){var yd=td[wd],zd=yd[0],Ad=yd[1],Bd=yd[2],Cd=\"on\"+(Ad[0].toUpperCase()+Ad.slice(1)),Dd={phasedRegistrationNames:{bubbled:Cd,captured:Cd+\"Capture\"},dependencies:[zd],eventPriority:Bd};ud[Ad]=Dd;vd[zd]=Dd}\nvar Ed={eventTypes:ud,getEventPriority:function(a){a=vd[a];return void 0!==a?a.eventPriority:2},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===bd(c))return null;case \"keydown\":case \"keyup\":a=id;break;case \"blur\":case \"focus\":a=ad;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=nd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\npd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Zb:case $b:case ac:a=Yc;break;case bc:a=rd;break;case \"scroll\":a=$c;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=Zc;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=od;break;default:a=E}b=a.getPooled(e,b,c,d);Sc(b);return b}},Fd=q.unstable_UserBlockingPriority,\nGd=q.unstable_runWithPriority,Hd=Ed.getEventPriority,Id=10,Jd=[];\nfunction Kd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=Fc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Mc(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=a.eventSystemFlags,h=null,k=0;k<ea.length;k++){var l=ea[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=xa(h,l))}Ba(h)}}\nvar Ld=!0;function F(a,b){Md(b,a,!1)}function Md(a,b,c){switch(Hd(b)){case 0:var d=Nd.bind(null,b,1);break;case 1:d=Od.bind(null,b,1);break;default:d=Pd.bind(null,b,1)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function Nd(a,b,c){ib||gb();var d=Pd,e=ib;ib=!0;try{fb(d,a,b,c)}finally{(ib=e)||kb()}}function Od(a,b,c){Gd(Fd,Pd.bind(null,a,b,c))}\nfunction Qd(a,b,c,d){if(Jd.length){var e=Jd.pop();e.topLevelType=a;e.eventSystemFlags=b;e.nativeEvent=c;e.targetInst=d;a=e}else a={topLevelType:a,eventSystemFlags:b,nativeEvent:c,targetInst:d,ancestors:[]};try{if(b=Kd,c=a,jb)b(c,void 0);else{jb=!0;try{hb(b,c,void 0)}finally{jb=!1,kb()}}}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,Jd.length<Id&&Jd.push(a)}}\nfunction Pd(a,b,c){if(Ld)if(0<nc.length&&-1<uc.indexOf(a))a=zc(null,a,b,c),nc.push(a);else{var d=Hc(a,b,c);null===d?Ac(a,c):-1<uc.indexOf(a)?(a=zc(d,a,b,c),nc.push(a)):Dc(d,a,b,c)||(Ac(a,c),Qd(a,b,c,null))}}function Hc(a,b,c){var d=Mc(c);d=Fc(d);if(null!==d){var e=ec(d);if(null===e)d=null;else{var f=e.tag;if(13===f){d=fc(e);if(null!==d)return d;d=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;d=null}else e!==d&&(d=null)}}Qd(a,b,c,d);return null}\nfunction Rd(a){if(!Ya)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}var Sd=new (\"function\"===typeof WeakMap?WeakMap:Map);function xc(a){var b=Sd.get(a);void 0===b&&(b=new Set,Sd.set(a,b));return b}\nfunction yc(a,b,c){if(!c.has(a)){switch(a){case \"scroll\":Md(b,\"scroll\",!0);break;case \"focus\":case \"blur\":Md(b,\"focus\",!0);Md(b,\"blur\",!0);c.add(\"blur\");c.add(\"focus\");break;case \"cancel\":case \"close\":Rd(a)&&Md(b,a,!0);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===cc.indexOf(a)&&F(a,b)}c.add(a)}}\nvar Td={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ud=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Td).forEach(function(a){Ud.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Td[b]=Td[a]})});function Vd(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||Td.hasOwnProperty(a)&&Td[a]?(\"\"+b).trim():b+\"px\"}\nfunction Wd(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=Vd(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Xd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Yd(a,b){if(b){if(Xd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,\"\"));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(u(62,\"\"));}}\nfunction Zd(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function $d(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=xc(a);b=ja[b];for(var d=0;d<b.length;d++)yc(b[d],a,c)}function ae(){}\nfunction be(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ce(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function de(a,b){var c=ce(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ce(c)}}\nfunction ee(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?ee(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function fe(){for(var a=window,b=be();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=be(a.document)}return b}\nfunction ge(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}var he=\"$\",ie=\"/$\",je=\"$?\",ke=\"$!\",le=null,me=null;function ne(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction oe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var pe=\"function\"===typeof setTimeout?setTimeout:void 0,qe=\"function\"===typeof clearTimeout?clearTimeout:void 0;function re(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}\nfunction se(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===he||c===ke||c===je){if(0===b)return a;b--}else c===ie&&b++}a=a.previousSibling}return null}var te=Math.random().toString(36).slice(2),ue=\"__reactInternalInstance$\"+te,ve=\"__reactEventHandlers$\"+te,we=\"__reactContainere$\"+te;\nfunction Fc(a){var b=a[ue];if(b)return b;for(var c=a.parentNode;c;){if(b=c[we]||c[ue]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=se(a);null!==a;){if(c=a[ue])return c;a=se(a)}return b}a=c;c=a.parentNode}return null}function Cc(a){a=a[ue]||a[we];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function xe(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function ye(a){return a[ve]||null}var ze=null,Ae=null,Be=null;\nfunction Ce(){if(Be)return Be;var a,b=Ae,c=b.length,d,e=\"value\"in ze?ze.value:ze.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return Be=e.slice(a,1<d?1-d:void 0)}var De=E.extend({data:null}),Ee=E.extend({data:null}),Fe=[9,13,27,32],Ge=Ya&&\"CompositionEvent\"in window,He=null;Ya&&\"documentMode\"in document&&(He=document.documentMode);\nvar Ie=Ya&&\"TextEvent\"in window&&!He,Je=Ya&&(!Ge||He&&8<He&&11>=He),Ke=String.fromCharCode(32),Le={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Me=!1;\nfunction Ne(a,b){switch(a){case \"keyup\":return-1!==Fe.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Oe(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Pe=!1;function Qe(a,b){switch(a){case \"compositionend\":return Oe(b);case \"keypress\":if(32!==b.which)return null;Me=!0;return Ke;case \"textInput\":return a=b.data,a===Ke&&Me?null:a;default:return null}}\nfunction Re(a,b){if(Pe)return\"compositionend\"===a||!Ge&&Ne(a,b)?(a=Ce(),Be=Ae=ze=null,Pe=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return Je&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar Se={eventTypes:Le,extractEvents:function(a,b,c,d){var e;if(Ge)b:{switch(a){case \"compositionstart\":var f=Le.compositionStart;break b;case \"compositionend\":f=Le.compositionEnd;break b;case \"compositionupdate\":f=Le.compositionUpdate;break b}f=void 0}else Pe?Ne(a,c)&&(f=Le.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(f=Le.compositionStart);f?(Je&&\"ko\"!==c.locale&&(Pe||f!==Le.compositionStart?f===Le.compositionEnd&&Pe&&(e=Ce()):(ze=d,Ae=\"value\"in ze?ze.value:ze.textContent,Pe=!0)),f=De.getPooled(f,\nb,c,d),e?f.data=e:(e=Oe(c),null!==e&&(f.data=e)),Sc(f),e=f):e=null;(a=Ie?Qe(a,c):Re(a,c))?(b=Ee.getPooled(Le.beforeInput,b,c,d),b.data=a,Sc(b)):b=null;return null===e?b:null===b?e:[e,b]}},Te={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ue(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Te[a.type]:\"textarea\"===b?!0:!1}\nvar Ve={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function We(a,b,c){a=E.getPooled(Ve.change,a,b,c);a.type=\"change\";cb(c);Sc(a);return a}var Xe=null,Ye=null;function Ze(a){Ba(a)}function $e(a){var b=xe(a);if(zb(b))return a}function af(a,b){if(\"change\"===a)return b}var bf=!1;Ya&&(bf=Rd(\"input\")&&(!document.documentMode||9<document.documentMode));\nfunction cf(){Xe&&(Xe.detachEvent(\"onpropertychange\",df),Ye=Xe=null)}function df(a){if(\"value\"===a.propertyName&&$e(Ye))if(a=We(Ye,a,Mc(a)),ib)Ba(a);else{ib=!0;try{eb(Ze,a)}finally{ib=!1,kb()}}}function ef(a,b,c){\"focus\"===a?(cf(),Xe=b,Ye=c,Xe.attachEvent(\"onpropertychange\",df)):\"blur\"===a&&cf()}function ff(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return $e(Ye)}function gf(a,b){if(\"click\"===a)return $e(b)}function hf(a,b){if(\"input\"===a||\"change\"===a)return $e(b)}\nvar jf={eventTypes:Ve,_isInputEventSupported:bf,extractEvents:function(a,b,c,d){var e=b?xe(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=af;else if(Ue(e))if(bf)g=hf;else{g=ff;var h=ef}else(f=e.nodeName)&&\"input\"===f.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(g=gf);if(g&&(g=g(a,b)))return We(g,c,d);h&&h(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Fb(e,\"number\",e.value)}},kf={mouseEnter:{registrationName:\"onMouseEnter\",\ndependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},lf,mf={eventTypes:kf,extractEvents:function(a,b,c,d,e){var f=\"mouseover\"===a||\"pointerover\"===a,g=\"mouseout\"===a||\"pointerout\"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;\ne=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?Fc(b):null,null!==b&&(f=ec(b),b!==f||5!==b.tag&&6!==b.tag))b=null}else g=null;if(g===b)return null;if(\"mouseout\"===a||\"mouseover\"===a){var h=nd;var k=kf.mouseLeave;var l=kf.mouseEnter;var m=\"mouse\"}else if(\"pointerout\"===a||\"pointerover\"===a)h=od,k=kf.pointerLeave,l=kf.pointerEnter,m=\"pointer\";a=null==g?e:xe(g);e=null==b?e:xe(b);k=h.getPooled(k,g,c,d);k.type=m+\"leave\";k.target=\na;k.relatedTarget=e;d=h.getPooled(l,b,c,d);d.type=m+\"enter\";d.target=e;d.relatedTarget=a;h=g;m=b;if(h&&m)a:{l=h;a=m;g=0;for(b=l;b;b=Nc(b))g++;b=0;for(e=a;e;e=Nc(e))b++;for(;0<g-b;)l=Nc(l),g--;for(;0<b-g;)a=Nc(a),b--;for(;g--;){if(l===a||l===a.alternate)break a;l=Nc(l);a=Nc(a)}l=null}else l=null;a=l;for(l=[];h&&h!==a;){g=h.alternate;if(null!==g&&g===a)break;l.push(h);h=Nc(h)}for(h=[];m&&m!==a;){g=m.alternate;if(null!==g&&g===a)break;h.push(m);m=Nc(m)}for(m=0;m<l.length;m++)Qc(l[m],\"bubbled\",k);for(m=\nh.length;0<m--;)Qc(h[m],\"captured\",d);if(c===lf)return lf=null,[k];lf=c;return[k,d]}};function nf(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var of=\"function\"===typeof Object.is?Object.is:nf,pf=Object.prototype.hasOwnProperty;function qf(a,b){if(of(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!pf.call(b,c[d])||!of(a[c[d]],b[c[d]]))return!1;return!0}\nvar rf=Ya&&\"documentMode\"in document&&11>=document.documentMode,sf={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},tf=null,uf=null,vf=null,wf=!1;\nfunction xf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(wf||null==tf||tf!==be(c))return null;c=tf;\"selectionStart\"in c&&ge(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return vf&&qf(vf,c)?null:(vf=c,a=E.getPooled(sf.select,uf,a,b),a.type=\"select\",a.target=tf,Sc(a),a)}\nvar yf={eventTypes:sf,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=xc(e);f=ja.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?xe(b):window;switch(a){case \"focus\":if(Ue(e)||\"true\"===e.contentEditable)tf=e,uf=b,vf=null;break;case \"blur\":vf=uf=tf=null;break;case \"mousedown\":wf=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return wf=!1,xf(c,d);case \"selectionchange\":if(rf)break;\ncase \"keydown\":case \"keyup\":return xf(c,d)}return null}};Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));var zf=Cc;sa=ye;ua=zf;va=xe;Ca.injectEventPluginsByName({SimpleEventPlugin:Ed,EnterLeaveEventPlugin:mf,ChangeEventPlugin:jf,SelectEventPlugin:yf,BeforeInputEventPlugin:Se});new Set;var Af=[],Bf=-1;function G(a){0>Bf||(a.current=Af[Bf],Af[Bf]=null,Bf--)}\nfunction I(a,b){Bf++;Af[Bf]=a.current;a.current=b}var Cf={},J={current:Cf},K={current:!1},Df=Cf;function Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}\nfunction Ff(a){G(K,a);G(J,a)}function Gf(a){G(K,a);G(J,a)}function Hf(a,b,c){if(J.current!==Cf)throw Error(u(168));I(J,b,a);I(K,c,a)}function If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,Wa(b)||\"Unknown\",e));return n({},c,{},d)}function Jf(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Cf;Df=J.current;I(J,b,a);I(K,K.current,a);return!0}\nfunction Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(b=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=b,G(K,a),G(J,a),I(J,b,a)):G(K,a);I(K,c,a)}\nvar Lf=q.unstable_runWithPriority,Mf=q.unstable_scheduleCallback,Nf=q.unstable_cancelCallback,Of=q.unstable_shouldYield,Pf=q.unstable_requestPaint,Qf=q.unstable_now,Rf=q.unstable_getCurrentPriorityLevel,Sf=q.unstable_ImmediatePriority,Tf=q.unstable_UserBlockingPriority,Uf=q.unstable_NormalPriority,Vf=q.unstable_LowPriority,Wf=q.unstable_IdlePriority,Xf={},Yf=void 0!==Pf?Pf:function(){},Zf=null,$f=null,ag=!1,bg=Qf(),cg=1E4>bg?Qf:function(){return Qf()-bg};\nfunction dg(){switch(Rf()){case Sf:return 99;case Tf:return 98;case Uf:return 97;case Vf:return 96;case Wf:return 95;default:throw Error(u(332));}}function eg(a){switch(a){case 99:return Sf;case 98:return Tf;case 97:return Uf;case 96:return Vf;case 95:return Wf;default:throw Error(u(332));}}function fg(a,b){a=eg(a);return Lf(a,b)}function gg(a,b,c){a=eg(a);return Mf(a,b,c)}function hg(a){null===Zf?(Zf=[a],$f=Mf(Sf,ig)):Zf.push(a);return Xf}function jg(){if(null!==$f){var a=$f;$f=null;Nf(a)}ig()}\nfunction ig(){if(!ag&&null!==Zf){ag=!0;var a=0;try{var b=Zf;fg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Zf=null}catch(c){throw null!==Zf&&(Zf=Zf.slice(a+1)),Mf(Sf,jg),c;}finally{ag=!1}}}var kg=3;function lg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function mg(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var ng={current:null},og=null,pg=null,qg=null;function rg(){qg=pg=og=null}\nfunction sg(a,b){var c=a.type._context;I(ng,c._currentValue,a);c._currentValue=b}function tg(a){var b=ng.current;G(ng,a);a.type._context._currentValue=b}function ug(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}\nfunction vg(a,b){og=a;qg=pg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(wg=!0),a.firstContext=null)}function xg(a,b){if(qg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)qg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===pg){if(null===og)throw Error(u(308));pg=b;og.dependencies={expirationTime:0,firstContext:b,responders:null}}else pg=pg.next=b}return a._currentValue}var yg=!1;\nfunction zg(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ag(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Bg(a,b){return{expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Cg(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction Dg(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=zg(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=zg(a.memoizedState),e=c.updateQueue=zg(c.memoizedState)):d=a.updateQueue=Ag(e):null===e&&(e=c.updateQueue=Ag(d));null===e||d===e?Cg(d,b):null===d.lastUpdate||null===e.lastUpdate?(Cg(d,b),Cg(e,b)):(Cg(d,b),e.lastUpdate=b)}\nfunction Eg(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=zg(a.memoizedState):Fg(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function Fg(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Ag(b));return b}\nfunction Gg(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-4097|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:yg=!0}return d}\nfunction Hg(a,b,c,d,e){yg=!1;b=Fg(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(Ig(m,k.suspenseConfig),l=Gg(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var C=k.expirationTime;C<e?(null===m&&(m=k,null===g&&(f=l)),h<C&&(h=C)):(l=Gg(a,b,k,l,c,d),null!==\nk.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;Jg(h);a.expirationTime=h;a.memoizedState=l}\nfunction Kg(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);Lg(b.firstEffect,c);b.firstEffect=b.lastEffect=null;Lg(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function Lg(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;if(\"function\"!==typeof c)throw Error(u(191,c));c.call(d)}a=a.nextEffect}}\nvar Mg=Ea.ReactCurrentBatchConfig,Ng=(new aa.Component).refs;function Og(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar Sg={isMounted:function(a){return(a=a._reactInternalFiber)?ec(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Pg(),e=Mg.suspense;d=Qg(d,a,e);e=Bg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Dg(a,e);Rg(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Pg(),e=Mg.suspense;d=Qg(d,a,e);e=Bg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Dg(a,e);Rg(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Pg(),d=Mg.suspense;\nc=Qg(c,a,d);d=Bg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);Dg(a,d);Rg(a,c)}};function Tg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!qf(c,d)||!qf(e,f):!0}\nfunction Ug(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=xg(f):(e=L(b)?Df:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Sg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Vg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Sg.enqueueReplaceState(b,b.state,null)}\nfunction Wg(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Ng;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=xg(f):(f=L(b)?Df:J.current,e.context=Ef(a,f));f=a.updateQueue;null!==f&&(Hg(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Og(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\ntypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Sg.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(Hg(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var Xg=Array.isArray;\nfunction Yg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Ng&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}\nfunction Zg(a,b){if(\"textarea\"!==a.type)throw Error(u(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\"));}\nfunction $g(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=ah(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=bh(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Yg(a,b,c),d.return=a,d;d=ch(c.type,c.key,c.props,null,a.mode,d);d.ref=Yg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=dh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=eh(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function C(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=bh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Ga:return c=ch(b.type,b.key,b.props,null,a.mode,c),c.ref=Yg(a,null,b),c.return=a,c;case Ha:return b=dh(b,a.mode,c),b.return=a,b}if(Xg(b)||\nUa(b))return b=eh(b,a.mode,c,null),b.return=a,b;Zg(a,b)}return null}function y(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Ga:return c.key===e?c.type===Ia?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case Ha:return c.key===e?l(a,b,c,d):null}if(Xg(c)||Ua(c))return null!==e?null:m(a,b,c,d,null);Zg(a,c)}return null}function H(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Ga:return a=a.get(null===d.key?c:d.key)||null,d.type===Ia?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case Ha:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Xg(d)||Ua(d))return a=a.get(c)||null,m(b,a,d,e,null);Zg(b,d)}return null}function z(e,g,h,k){for(var l=null,m=null,r=g,x=g=0,A=null;null!==r&&x<h.length;x++){r.index>x?(A=r,r=null):A=r.sibling;var p=y(e,r,h[x],k);if(null===p){null===r&&(r=A);break}a&&\nr&&null===p.alternate&&b(e,r);g=f(p,g,x);null===m?l=p:m.sibling=p;m=p;r=A}if(x===h.length)return c(e,r),l;if(null===r){for(;x<h.length;x++)r=C(e,h[x],k),null!==r&&(g=f(r,g,x),null===m?l=r:m.sibling=r,m=r);return l}for(r=d(e,r);x<h.length;x++)A=H(r,e,x,h[x],k),null!==A&&(a&&null!==A.alternate&&r.delete(null===A.key?x:A.key),g=f(A,g,x),null===m?l=A:m.sibling=A,m=A);a&&r.forEach(function(a){return b(e,a)});return l}function ta(e,g,h,k){var l=Ua(h);if(\"function\"!==typeof l)throw Error(u(150));h=l.call(h);\nif(null==h)throw Error(u(151));for(var m=l=null,r=g,x=g=0,A=null,p=h.next();null!==r&&!p.done;x++,p=h.next()){r.index>x?(A=r,r=null):A=r.sibling;var z=y(e,r,p.value,k);if(null===z){null===r&&(r=A);break}a&&r&&null===z.alternate&&b(e,r);g=f(z,g,x);null===m?l=z:m.sibling=z;m=z;r=A}if(p.done)return c(e,r),l;if(null===r){for(;!p.done;x++,p=h.next())p=C(e,p.value,k),null!==p&&(g=f(p,g,x),null===m?l=p:m.sibling=p,m=p);return l}for(r=d(e,r);!p.done;x++,p=h.next())p=H(r,e,x,p.value,k),null!==p&&(a&&null!==\np.alternate&&r.delete(null===p.key?x:p.key),g=f(p,g,x),null===m?l=p:m.sibling=p,m=p);a&&r.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Ia&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Ga:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Ia:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Ia?f.props.children:f.props,h);d.ref=Yg(a,k,f);d.return=a;a=d;break a}else{c(a,\nk);break}else b(a,k);k=k.sibling}f.type===Ia?(d=eh(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=ch(f.type,f.key,f.props,null,a.mode,h),h.ref=Yg(a,d,f),h.return=a,a=h)}return g(a);case Ha:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=dh(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===\ntypeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=bh(f,a.mode,h),d.return=a,a=d),g(a);if(Xg(f))return z(a,d,f,h);if(Ua(f))return ta(a,d,f,h);l&&Zg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||\"Component\"));}return c(a,d)}}var fh=$g(!0),gh=$g(!1),hh={},ih={current:hh},jh={current:hh},kh={current:hh};function lh(a){if(a===hh)throw Error(u(174));return a}\nfunction mh(a,b){I(kh,b,a);I(jh,a,a);I(ih,hh,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Qb(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=Qb(b,c)}G(ih,a);I(ih,b,a)}function nh(a){G(ih,a);G(jh,a);G(kh,a)}function oh(a){lh(kh.current);var b=lh(ih.current);var c=Qb(b,a.type);b!==c&&(I(jh,a,a),I(ih,c,a))}function ph(a){jh.current===a&&(G(ih,a),G(jh,a))}var M={current:0};\nfunction qh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===je||c.data===ke))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function rh(a,b){return{responder:a,props:b}}\nvar sh=Ea.ReactCurrentDispatcher,N=Ea.ReactCurrentBatchConfig,th=0,uh=null,O=null,vh=null,wh=null,P=null,xh=null,yh=0,zh=null,Ah=0,Bh=!1,Ch=null,Gh=0;function Q(){throw Error(u(321));}function Hh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!of(a[c],b[c]))return!1;return!0}\nfunction Ih(a,b,c,d,e,f){th=f;uh=b;vh=null!==a?a.memoizedState:null;sh.current=null===vh?Jh:Kh;b=c(d,e);if(Bh){do Bh=!1,Gh+=1,vh=null!==a?a.memoizedState:null,xh=wh,zh=P=O=null,sh.current=Kh,b=c(d,e);while(Bh);Ch=null;Gh=0}sh.current=Lh;a=uh;a.memoizedState=wh;a.expirationTime=yh;a.updateQueue=zh;a.effectTag|=Ah;a=null!==O&&null!==O.next;th=0;xh=P=wh=vh=O=uh=null;yh=0;zh=null;Ah=0;if(a)throw Error(u(300));return b}\nfunction Mh(){sh.current=Lh;th=0;xh=P=wh=vh=O=uh=null;yh=0;zh=null;Ah=0;Bh=!1;Ch=null;Gh=0}function Nh(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===P?wh=P=a:P=P.next=a;return P}function Oh(){if(null!==xh)P=xh,xh=P.next,O=vh,vh=null!==O?O.next:null;else{if(null===vh)throw Error(u(310));O=vh;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};P=null===P?wh=a:P.next=a;vh=O.next}return P}\nfunction Ph(a,b){return\"function\"===typeof b?b(a):b}\nfunction Qh(a){var b=Oh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;if(0<Gh){var d=c.dispatch;if(null!==Ch){var e=Ch.get(c);if(void 0!==e){Ch.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);of(f,b.memoizedState)||(wg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\nd){var h=e=null,k=d,l=!1;do{var m=k.expirationTime;m<th?(l||(l=!0,h=g,e=f),m>yh&&(yh=m,Jg(yh))):(Ig(m,k.suspenseConfig),f=k.eagerReducer===a?k.eagerState:a(f,k.action));g=k;k=k.next}while(null!==k&&k!==d);l||(h=g,e=f);of(f,b.memoizedState)||(wg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\nfunction Rh(a){var b=Nh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,lastRenderedReducer:Ph,lastRenderedState:a};a=a.dispatch=Sh.bind(null,uh,a);return[b.memoizedState,a]}function Th(a){return Qh(Ph,a)}function Uh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===zh?(zh={lastEffect:null},zh.lastEffect=a.next=a):(b=zh.lastEffect,null===b?zh.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,zh.lastEffect=a));return a}\nfunction Vh(a,b,c,d){var e=Nh();Ah|=a;e.memoizedState=Uh(b,c,void 0,void 0===d?null:d)}function Wh(a,b,c,d){var e=Oh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Hh(d,g.deps)){Uh(0,c,f,d);return}}Ah|=a;e.memoizedState=Uh(b,c,f,d)}function Xh(a,b){return Vh(516,192,a,b)}function Yh(a,b){return Wh(516,192,a,b)}\nfunction Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function $h(){}function ai(a,b){Nh().memoizedState=[a,void 0===b?null:b];return a}function bi(a,b){var c=Oh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Hh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Sh(a,b,c){if(!(25>Gh))throw Error(u(301));var d=a.alternate;if(a===uh||null!==d&&d===uh)if(Bh=!0,a={expirationTime:th,suspenseConfig:null,action:c,eagerReducer:null,eagerState:null,next:null},null===Ch&&(Ch=new Map),c=Ch.get(b),void 0===c)Ch.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{var e=Pg(),f=Mg.suspense;e=Qg(e,a,f);f={expirationTime:e,suspenseConfig:f,action:c,eagerReducer:null,eagerState:null,next:null};var g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&\n(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===d||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var k=b.lastRenderedState,l=d(k,c);f.eagerReducer=d;f.eagerState=l;if(of(l,k))return}catch(m){}finally{}Rg(a,e)}}\nvar Lh={readContext:xg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},Jh={readContext:xg,useCallback:ai,useContext:xg,useEffect:Xh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,36,Zh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Vh(4,36,a,b)},useMemo:function(a,b){var c=Nh();b=void 0===b?null:b;a=a();c.memoizedState=\n[a,b];return a},useReducer:function(a,b,c){var d=Nh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Sh.bind(null,uh,a);return[d.memoizedState,a]},useRef:function(a){var b=Nh();a={current:a};return b.memoizedState=a},useState:Rh,useDebugValue:$h,useResponder:rh,useDeferredValue:function(a,b){var c=Rh(a),d=c[0],e=c[1];Xh(function(){q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===b?null:b;try{e(a)}finally{N.suspense=\nc}})},[a,b]);return d},useTransition:function(a){var b=Rh(!1),c=b[0],d=b[1];return[ai(function(b){d(!0);q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===a?null:a;try{d(!1),b()}finally{N.suspense=c}})},[a,c]),c]}},Kh={readContext:xg,useCallback:bi,useContext:xg,useEffect:Yh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Wh(4,36,Zh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Wh(4,36,a,b)},useMemo:function(a,b){var c=Oh();b=void 0===b?\nnull:b;var d=c.memoizedState;if(null!==d&&null!==b&&Hh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:Qh,useRef:function(){return Oh().memoizedState},useState:Th,useDebugValue:$h,useResponder:rh,useDeferredValue:function(a,b){var c=Th(a),d=c[0],e=c[1];Yh(function(){q.unstable_next(function(){var c=N.suspense;N.suspense=void 0===b?null:b;try{e(a)}finally{N.suspense=c}})},[a,b]);return d},useTransition:function(a){var b=Th(!1),c=b[0],d=b[1];return[bi(function(b){d(!0);q.unstable_next(function(){var c=\nN.suspense;N.suspense=void 0===a?null:a;try{d(!1),b()}finally{N.suspense=c}})},[a,c]),c]}},ci=null,di=null,ei=!1;function fi(a,b){var c=gi(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction hi(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ii(a){if(ei){var b=di;if(b){var c=b;if(!hi(a,b)){b=re(c.nextSibling);if(!b||!hi(a,b)){a.effectTag=a.effectTag&-1025|2;ei=!1;ci=a;return}fi(ci,c)}ci=a;di=re(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,ei=!1,ci=a}}function ji(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;ci=a}\nfunction ki(a){if(a!==ci)return!1;if(!ei)return ji(a),ei=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!oe(b,a.memoizedProps))for(b=di;b;)fi(a,b),b=re(b.nextSibling);ji(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===ie){if(0===b){di=re(a.nextSibling);break a}b--}else c!==he&&c!==ke&&c!==je||b++}a=a.nextSibling}di=null}}else di=ci?re(a.stateNode.nextSibling):null;return!0}\nfunction li(){di=ci=null;ei=!1}var mi=Ea.ReactCurrentOwner,wg=!1;function R(a,b,c,d){b.child=null===a?gh(b,null,c,d):fh(b,a.child,c,d)}function ni(a,b,c,d,e){c=c.render;var f=b.ref;vg(b,e);d=Ih(a,b,c,d,f,e);if(null!==a&&!wg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),oi(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}\nfunction pi(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!qi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ri(a,b,g,d,e,f);a=ch(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:qf,c(e,d)&&a.ref===b.ref))return oi(a,b,f);b.effectTag|=1;a=ah(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ri(a,b,c,d,e,f){return null!==a&&qf(a.memoizedProps,d)&&a.ref===b.ref&&(wg=!1,e<f)?oi(a,b,f):si(a,b,c,d,f)}function ti(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function si(a,b,c,d,e){var f=L(c)?Df:J.current;f=Ef(b,f);vg(b,e);c=Ih(a,b,c,d,f,e);if(null!==a&&!wg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),oi(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}\nfunction ui(a,b,c,d,e){if(L(c)){var f=!0;Jf(b)}else f=!1;vg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Ug(b,c,d,e),Wg(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=xg(l):(l=L(c)?Df:J.current,l=Ef(b,l));var m=c.getDerivedStateFromProps,C=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;C||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Vg(b,g,d,l);yg=!1;var y=b.memoizedState;k=g.state=y;var H=b.updateQueue;null!==H&&(Hg(b,H,d,g,e),k=b.memoizedState);h!==d||y!==k||K.current||yg?(\"function\"===typeof m&&(Og(b,c,m,d),k=b.memoizedState),(h=yg||Tg(b,c,h,d,y,k,l))?(C||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:mg(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=xg(l):(l=L(c)?Df:J.current,l=Ef(b,l)),m=c.getDerivedStateFromProps,(C=\n\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Vg(b,g,d,l),yg=!1,k=b.memoizedState,y=g.state=k,H=b.updateQueue,null!==H&&(Hg(b,H,d,g,e),y=b.memoizedState),h!==d||k!==y||K.current||yg?(\"function\"===typeof m&&(Og(b,c,m,d),y=b.memoizedState),(m=yg||Tg(b,c,h,d,k,y,l))?(C||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||\n(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,y,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,y,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=\nd,b.memoizedState=y),g.props=d,g.state=y,g.context=l,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return vi(a,b,c,d,f,e)}\nfunction vi(a,b,c,d,e,f){ti(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Kf(b,c,!1),oi(a,b,f);d=b.stateNode;mi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=fh(b,a.child,null,f),b.child=fh(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function wi(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);mh(a,b.containerInfo)}\nvar xi={dehydrated:null,retryTime:0};\nfunction yi(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1,b);if(null===a){void 0!==e.fallback&&ii(b);if(g){g=e.fallback;e=eh(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=eh(g,d,c,null);c.return=\nb;e.sibling=c;b.memoizedState=xi;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=gh(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=ah(a,a.pendingProps,0);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=ah(d,e,d.expirationTime);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=xi;b.child=c;return d}c=fh(b,a.child,e.children,c);b.memoizedState=\nnull;return b.child=c}a=a.child;if(g){g=e.fallback;e=eh(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=eh(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=xi;b.child=e;return c}b.memoizedState=null;return b.child=fh(b,a,e.children,c)}\nfunction zi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);ug(a.return,b)}function Ai(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}\nfunction Bi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&zi(a,c);else if(19===a.tag)zi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d,b);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===qh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);Ai(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===qh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}Ai(b,!0,c,null,f,b.lastEffect);break;case \"together\":Ai(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction oi(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Jg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=ah(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=ah(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}function Ci(a){a.effectTag|=4}var Hi,Ii,Ji,Ki;\nHi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ii=function(){};\nJi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;lh(ih.current);a=null;switch(c){case \"input\":f=Ab(g,f);d=Ab(g,d);a=[];break;case \"option\":f=Ib(g,f);d=Ib(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=Kb(g,f);d=Kb(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=ae)}Yd(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if(\"style\"===\nh)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]=\"\");else\"dangerouslySetInnerHTML\"!==h&&\"children\"!==h&&\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ia.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if(\"style\"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]=\"\");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),\nc[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else\"dangerouslySetInnerHTML\"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,\"\"+l)):\"children\"===h?g===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(h,\"\"+l):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&(ia.hasOwnProperty(h)?(null!=l&&$d(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push(\"style\",c);e=a;(b.updateQueue=e)&&Ci(b)}};Ki=function(a,b,c,d){c!==d&&Ci(b)};\nfunction Li(a,b){switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Mi(a){switch(a.tag){case 1:L(a.type)&&Ff(a);var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:nh(a);Gf(a);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return ph(a),null;case 13:return G(M,a),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return G(M,a),null;case 4:return nh(a),null;case 10:return tg(a),null;default:return null}}function Ni(a,b){return{value:a,source:b,stack:Xa(b)}}\nvar Oi=\"function\"===typeof WeakSet?WeakSet:Set;function Pi(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=Xa(c));null!==c&&Wa(c.type);b=b.value;null!==a&&1===a.tag&&Wa(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Qi(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ri(a,c)}}function Si(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Ri(a,c)}else b.current=null}\nfunction Ti(a,b){switch(b.tag){case 0:case 11:case 15:Ui(2,0,b);break;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:mg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(u(163));}}\nfunction Ui(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if(0!==(d.tag&a)){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}0!==(d.tag&b)&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\nfunction Vi(a,b,c){\"function\"===typeof Wi&&Wi(b);switch(b.tag){case 0:case 11:case 14:case 15:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;fg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ri(g,h)}}a=a.next}while(a!==d)})}break;case 1:Si(b);c=b.stateNode;\"function\"===typeof c.componentWillUnmount&&Qi(b,c);break;case 5:Si(b);break;case 4:Xi(a,b,c)}}\nfunction Yi(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;null!==b&&Yi(b)}function Zi(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction $i(a){a:{for(var b=a.return;null!==b;){if(Zi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Tb(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Zi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){var f=5===e.tag||6===e.tag;if(f){var g=f?e.stateNode:e.stateNode.instance;if(c)if(d){f=b;var h=g;g=c;8===f.nodeType?f.parentNode.insertBefore(h,g):f.insertBefore(h,g)}else b.insertBefore(g,c);else d?(h=b,8===h.nodeType?(f=h.parentNode,f.insertBefore(g,h)):(f=h,f.appendChild(g)),h=h._reactRootContainer,null!==h&&void 0!==h||null!==f.onclick||(f.onclick=ae)):b.appendChild(g)}else if(4!==\ne.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction Xi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Vi(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=\nf,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Vi(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}\nfunction aj(a,b){switch(b.tag){case 0:case 11:case 14:case 15:Ui(4,8,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[ve]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Cb(c,d);Zd(a,e);b=Zd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];\"style\"===g?Wd(c,h):\"dangerouslySetInnerHTML\"===g?Sb(c,h):\"children\"===g?Tb(c,h):vb(c,g,h,b)}switch(a){case \"input\":Eb(c,d);break;case \"textarea\":Mb(c,\nd);break;case \"select\":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Jb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Jb(c,!!d.multiple,d.defaultValue,!0):Jb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}break;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;break;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Lc(b.containerInfo));break;case 12:break;case 13:c=b;null===b.memoizedState?d=!1:(d=!0,c=b.child,bj=cg());\nif(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null,f.style.display=Vd(\"display\",e));else if(6===a.tag)a.stateNode.nodeValue=d?\"\":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=f;continue}else if(null!==a.child){a.child.return=\na;a=a.child;continue}if(a===c)break a;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}cj(b);break;case 19:cj(b);break;case 17:break;case 20:break;case 21:break;default:throw Error(u(163));}}function cj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Oi);b.forEach(function(b){var d=dj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}var ej=\"function\"===typeof WeakMap?WeakMap:Map;\nfunction fj(a,b,c){c=Bg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){gj||(gj=!0,hj=d);Pi(a,b)};return c}\nfunction ij(a,b,c){c=Bg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Pi(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===jj?jj=new Set([this]):jj.add(this),Pi(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nvar kj=Math.ceil,lj=Ea.ReactCurrentDispatcher,mj=Ea.ReactCurrentOwner,S=0,nj=8,oj=16,pj=32,qj=0,rj=1,sj=2,tj=3,uj=4,vj=5,T=S,U=null,V=null,W=0,X=qj,wj=null,xj=1073741823,yj=1073741823,zj=null,Aj=0,Bj=!1,bj=0,Cj=500,Y=null,gj=!1,hj=null,jj=null,Dj=!1,Ej=null,Fj=90,Gj=null,Hj=0,Ij=null,Jj=0;function Pg(){return(T&(oj|pj))!==S?1073741821-(cg()/10|0):0!==Jj?Jj:Jj=1073741821-(cg()/10|0)}\nfunction Qg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=dg();if(0===(b&4))return 99===d?1073741823:1073741822;if((T&oj)!==S)return W;if(null!==c)a=lg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=lg(a,150,100);break;case 97:case 96:a=lg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==U&&a===W&&--a;return a}\nfunction Rg(a,b){if(50<Hj)throw Hj=0,Ij=null,Error(u(185));a=Kj(a,b);if(null!==a){var c=dg();1073741823===b?(T&nj)!==S&&(T&(oj|pj))===S?Lj(a):(Z(a),T===S&&jg()):Z(a);(T&4)===S||98!==c&&99!==c||(null===Gj?Gj=new Map([[a,b]]):(c=Gj.get(a),(void 0===c||c>b)&&Gj.set(a,b)))}}\nfunction Kj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(U===e&&(Jg(b),X===uj&&Mj(e,W)),Nj(e,b));return e}\nfunction Oj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Pj(a,b))return b;b=a.lastPingedTime;a=a.nextKnownPendingLevel;return b>a?b:a}\nfunction Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=hg(Lj.bind(null,a));else{var b=Oj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Pg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Xf&&Nf(c)}a.callbackExpirationTime=\nb;a.callbackPriority=d;b=1073741823===b?hg(Lj.bind(null,a)):gg(d,Qj.bind(null,a),{timeout:10*(1073741821-b)-cg()});a.callbackNode=b}}}\nfunction Qj(a,b){Jj=0;if(b)return b=Pg(),Rj(a,b),Z(a),null;var c=Oj(a);if(0!==c){b=a.callbackNode;if((T&(oj|pj))!==S)throw Error(u(327));Sj();a===U&&c===W||Tj(a,c);if(null!==V){var d=T;T|=oj;var e=Uj(a);do try{Vj();break}catch(h){Wj(a,h)}while(1);rg();T=d;lj.current=e;if(X===rj)throw b=wj,Tj(a,c),Mj(a,c),Z(a),b;if(null===V)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=X,U=null,d){case qj:case rj:throw Error(u(345));case sj:Rj(a,2<c?2:c);break;case tj:Mj(a,c);d=a.lastSuspendedTime;\nc===d&&(a.nextKnownPendingLevel=Xj(e));if(1073741823===xj&&(e=bj+Cj-cg(),10<e)){if(Bj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Tj(a,c);break}}f=Oj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=pe(Yj.bind(null,a),e);break}Yj(a);break;case uj:Mj(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Xj(e));if(Bj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Tj(a,c);break}e=Oj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=\nd;break}1073741823!==yj?d=10*(1073741821-yj)-cg():1073741823===xj?d=0:(d=10*(1073741821-xj)-5E3,e=cg(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*kj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=pe(Yj.bind(null,a),d);break}Yj(a);break;case vj:if(1073741823!==xj&&null!==zj){f=xj;var g=zj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=cg()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){Mj(a,c);a.timeoutHandle=\npe(Yj.bind(null,a),d);break}}Yj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Qj.bind(null,a)}}return null}\nfunction Lj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if(a.finishedExpirationTime===b)Yj(a);else{if((T&(oj|pj))!==S)throw Error(u(327));Sj();a===U&&b===W||Tj(a,b);if(null!==V){var c=T;T|=oj;var d=Uj(a);do try{Zj();break}catch(e){Wj(a,e)}while(1);rg();T=c;lj.current=d;if(X===rj)throw c=wj,Tj(a,b),Mj(a,b),Z(a),c;if(null!==V)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;U=null;Yj(a);Z(a)}}return null}\nfunction ak(){if(null!==Gj){var a=Gj;Gj=null;a.forEach(function(a,c){Rj(c,a);Z(c)});jg()}}function bk(a,b){var c=T;T|=1;try{return a(b)}finally{T=c,T===S&&jg()}}function ck(a,b){var c=T;T&=-2;T|=nj;try{return a(b)}finally{T=c,T===S&&jg()}}\nfunction Tj(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,qe(c));if(null!==V)for(c=V.return;null!==c;){var d=c;switch(d.tag){case 1:var e=d.type.childContextTypes;null!==e&&void 0!==e&&Ff(d);break;case 3:nh(d);Gf(d);break;case 5:ph(d);break;case 4:nh(d);break;case 13:G(M,d);break;case 19:G(M,d);break;case 10:tg(d)}c=c.return}U=a;V=ah(a.current,null,b);W=b;X=qj;wj=null;yj=xj=1073741823;zj=null;Aj=0;Bj=!1}\nfunction Wj(a,b){do{try{rg();Mh();if(null===V||null===V.return)return X=rj,wj=b,null;a:{var c=a,d=V.return,e=V,f=b;b=W;e.effectTag|=2048;e.firstEffect=e.lastEffect=null;if(null!==f&&\"object\"===typeof f&&\"function\"===typeof f.then){var g=f,h=0!==(M.current&1),k=d;do{var l;if(l=13===k.tag){var m=k.memoizedState;if(null!==m)l=null!==m.dehydrated?!0:!1;else{var C=k.memoizedProps;l=void 0===C.fallback?!1:!0!==C.unstable_avoidThisFallback?!0:h?!1:!0}}if(l){var y=k.updateQueue;if(null===y){var H=new Set;\nH.add(g);k.updateQueue=H}else y.add(g);if(0===(k.mode&2)){k.effectTag|=64;e.effectTag&=-2981;if(1===e.tag)if(null===e.alternate)e.tag=17;else{var z=Bg(1073741823,null);z.tag=2;Dg(e,z)}e.expirationTime=1073741823;break a}f=void 0;e=b;var ta=c.pingCache;null===ta?(ta=c.pingCache=new ej,f=new Set,ta.set(g,f)):(f=ta.get(g),void 0===f&&(f=new Set,ta.set(g,f)));if(!f.has(e)){f.add(e);var r=dk.bind(null,c,g,e);g.then(r,r)}k.effectTag|=4096;k.expirationTime=b;break a}k=k.return}while(null!==k);f=Error((Wa(e.type)||\n\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+Xa(e))}X!==vj&&(X=sj);f=Ni(f,e);k=d;do{switch(k.tag){case 3:g=f;k.effectTag|=4096;k.expirationTime=b;var x=fj(k,g,b);Eg(k,x);break a;case 1:g=f;var A=k.type,p=k.stateNode;if(0===(k.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==p&&\"function\"===typeof p.componentDidCatch&&\n(null===jj||!jj.has(p)))){k.effectTag|=4096;k.expirationTime=b;var t=ij(k,g,b);Eg(k,t);break a}}k=k.return}while(null!==k)}V=ek(V)}catch(v){b=v;continue}break}while(1)}function Uj(){var a=lj.current;lj.current=Lh;return null===a?Lh:a}function Ig(a,b){a<xj&&2<a&&(xj=a);null!==b&&a<yj&&2<a&&(yj=a,zj=b)}function Jg(a){a>Aj&&(Aj=a)}function Zj(){for(;null!==V;)V=fk(V)}function Vj(){for(;null!==V&&!Of();)V=fk(V)}\nfunction fk(a){var b=gk(a.alternate,a,W);a.memoizedProps=a.pendingProps;null===b&&(b=ek(a));mj.current=null;return b}\nfunction ek(a){V=a;do{var b=V.alternate;a=V.return;if(0===(V.effectTag&2048)){a:{var c=b;b=V;var d=W;var e=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:L(b.type)&&Ff(b);break;case 3:nh(b);Gf(b);e=b.stateNode;e.pendingContext&&(e.context=e.pendingContext,e.pendingContext=null);(null===c||null===c.child)&&ki(b)&&Ci(b);Ii(b);break;case 5:ph(b);d=lh(kh.current);var f=b.type;if(null!==c&&null!=b.stateNode)Ji(c,b,f,e,d),c.ref!==b.ref&&(b.effectTag|=128);else if(e){var g=\nlh(ih.current);if(ki(b)){e=b;var h=e.stateNode;c=e.type;var k=e.memoizedProps,l=d;h[ue]=e;h[ve]=k;f=void 0;d=h;switch(c){case \"iframe\":case \"object\":case \"embed\":F(\"load\",d);break;case \"video\":case \"audio\":for(h=0;h<cc.length;h++)F(cc[h],d);break;case \"source\":F(\"error\",d);break;case \"img\":case \"image\":case \"link\":F(\"error\",d);F(\"load\",d);break;case \"form\":F(\"reset\",d);F(\"submit\",d);break;case \"details\":F(\"toggle\",d);break;case \"input\":Bb(d,k);F(\"invalid\",d);$d(l,\"onChange\");break;case \"select\":d._wrapperState=\n{wasMultiple:!!k.multiple};F(\"invalid\",d);$d(l,\"onChange\");break;case \"textarea\":Lb(d,k),F(\"invalid\",d),$d(l,\"onChange\")}Yd(c,k);h=null;for(f in k)k.hasOwnProperty(f)&&(g=k[f],\"children\"===f?\"string\"===typeof g?d.textContent!==g&&(h=[\"children\",g]):\"number\"===typeof g&&d.textContent!==\"\"+g&&(h=[\"children\",\"\"+g]):ia.hasOwnProperty(f)&&null!=g&&$d(l,f));switch(c){case \"input\":yb(d);Gb(d,k,!0);break;case \"textarea\":yb(d);Nb(d,k);break;case \"select\":case \"option\":break;default:\"function\"===typeof k.onClick&&\n(d.onclick=ae)}f=h;e.updateQueue=f;e=null!==f?!0:!1;e&&Ci(b)}else{c=b;l=f;k=e;h=9===d.nodeType?d:d.ownerDocument;g===Ob.html&&(g=Pb(l));g===Ob.html?\"script\"===l?(k=h.createElement(\"div\"),k.innerHTML=\"<script>\\x3c/script>\",h=k.removeChild(k.firstChild)):\"string\"===typeof k.is?h=h.createElement(l,{is:k.is}):(h=h.createElement(l),\"select\"===l&&(l=h,k.multiple?l.multiple=!0:k.size&&(l.size=k.size))):h=h.createElementNS(g,l);k=h;k[ue]=c;k[ve]=e;Hi(k,b,!1,!1);b.stateNode=k;l=f;c=e;var m=d,C=Zd(l,c);switch(l){case \"iframe\":case \"object\":case \"embed\":F(\"load\",\nk);d=c;break;case \"video\":case \"audio\":for(d=0;d<cc.length;d++)F(cc[d],k);d=c;break;case \"source\":F(\"error\",k);d=c;break;case \"img\":case \"image\":case \"link\":F(\"error\",k);F(\"load\",k);d=c;break;case \"form\":F(\"reset\",k);F(\"submit\",k);d=c;break;case \"details\":F(\"toggle\",k);d=c;break;case \"input\":Bb(k,c);d=Ab(k,c);F(\"invalid\",k);$d(m,\"onChange\");break;case \"option\":d=Ib(k,c);break;case \"select\":k._wrapperState={wasMultiple:!!c.multiple};d=n({},c,{value:void 0});F(\"invalid\",k);$d(m,\"onChange\");break;case \"textarea\":Lb(k,\nc);d=Kb(k,c);F(\"invalid\",k);$d(m,\"onChange\");break;default:d=c}Yd(l,d);h=void 0;g=l;var y=k,H=d;for(h in H)if(H.hasOwnProperty(h)){var z=H[h];\"style\"===h?Wd(y,z):\"dangerouslySetInnerHTML\"===h?(z=z?z.__html:void 0,null!=z&&Sb(y,z)):\"children\"===h?\"string\"===typeof z?(\"textarea\"!==g||\"\"!==z)&&Tb(y,z):\"number\"===typeof z&&Tb(y,\"\"+z):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ia.hasOwnProperty(h)?null!=z&&$d(m,h):null!=z&&vb(y,h,z,C))}switch(l){case \"input\":yb(k);\nGb(k,c,!1);break;case \"textarea\":yb(k);Nb(k,c);break;case \"option\":null!=c.value&&k.setAttribute(\"value\",\"\"+ub(c.value));break;case \"select\":d=k;d.multiple=!!c.multiple;k=c.value;null!=k?Jb(d,!!c.multiple,k,!1):null!=c.defaultValue&&Jb(d,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof d.onClick&&(k.onclick=ae)}(e=ne(f,e))&&Ci(b)}null!==b.ref&&(b.effectTag|=128)}else if(null===b.stateNode)throw Error(u(166));break;case 6:if(c&&null!=b.stateNode)Ki(c,b,c.memoizedProps,e);else{if(\"string\"!==\ntypeof e&&null===b.stateNode)throw Error(u(166));d=lh(kh.current);lh(ih.current);ki(b)?(e=b,f=e.stateNode,d=e.memoizedProps,f[ue]=e,(e=f.nodeValue!==d)&&Ci(b)):(f=b,e=(9===d.nodeType?d:d.ownerDocument).createTextNode(e),e[ue]=f,b.stateNode=e)}break;case 11:break;case 13:G(M,b);e=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=d;break a}e=null!==e;f=!1;null===c?void 0!==b.memoizedProps.fallback&&ki(b):(d=c.memoizedState,f=null!==d,e||null===d||(d=c.child.sibling,null!==d&&(k=b.firstEffect,\nnull!==k?(b.firstEffect=d,d.nextEffect=k):(b.firstEffect=b.lastEffect=d,d.nextEffect=null),d.effectTag=8)));if(e&&!f&&0!==(b.mode&2))if(null===c&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))X===qj&&(X=tj);else{if(X===qj||X===tj)X=uj;0!==Aj&&null!==U&&(Mj(U,W),Nj(U,Aj))}if(e||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:nh(b);Ii(b);break;case 10:tg(b);break;case 9:break;case 14:break;case 17:L(b.type)&&Ff(b);break;case 19:G(M,b);e=b.memoizedState;if(null===\ne)break;f=0!==(b.effectTag&64);k=e.rendering;if(null===k)if(f)Li(e,!1);else{if(X!==qj||null!==c&&0!==(c.effectTag&64))for(c=b.child;null!==c;){k=qh(c);if(null!==k){b.effectTag|=64;Li(e,!1);f=k.updateQueue;null!==f&&(b.updateQueue=f,b.effectTag|=4);null===e.lastEffect&&(b.firstEffect=null);b.lastEffect=e.lastEffect;e=d;for(f=b.child;null!==f;)d=f,c=e,d.effectTag&=2,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null,k=d.alternate,null===k?(d.childExpirationTime=0,d.expirationTime=c,d.child=null,\nd.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null):(d.childExpirationTime=k.childExpirationTime,d.expirationTime=k.expirationTime,d.child=k.child,d.memoizedProps=k.memoizedProps,d.memoizedState=k.memoizedState,d.updateQueue=k.updateQueue,c=k.dependencies,d.dependencies=null===c?null:{expirationTime:c.expirationTime,firstContext:c.firstContext,responders:c.responders}),f=f.sibling;I(M,M.current&1|2,b);b=b.child;break a}c=c.sibling}}else{if(!f)if(c=qh(k),null!==c){if(b.effectTag|=\n64,f=!0,d=c.updateQueue,null!==d&&(b.updateQueue=d,b.effectTag|=4),Li(e,!0),null===e.tail&&\"hidden\"===e.tailMode&&!k.alternate){b=b.lastEffect=e.lastEffect;null!==b&&(b.nextEffect=null);break}}else cg()>e.tailExpiration&&1<d&&(b.effectTag|=64,f=!0,Li(e,!1),b.expirationTime=b.childExpirationTime=d-1);e.isBackwards?(k.sibling=b.child,b.child=k):(d=e.last,null!==d?d.sibling=k:b.child=k,e.last=k)}if(null!==e.tail){0===e.tailExpiration&&(e.tailExpiration=cg()+500);d=e.tail;e.rendering=d;e.tail=d.sibling;\ne.lastEffect=b.lastEffect;d.sibling=null;e=M.current;e=f?e&1|2:e&1;I(M,e,b);b=d;break a}break;case 20:break;case 21:break;default:throw Error(u(156,b.tag));}b=null}e=V;if(1===W||1!==e.childExpirationTime){f=0;for(d=e.child;null!==d;)c=d.expirationTime,k=d.childExpirationTime,c>f&&(f=c),k>f&&(f=k),d=d.sibling;e.childExpirationTime=f}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=V.firstEffect),null!==V.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=\nV.firstEffect),a.lastEffect=V.lastEffect),1<V.effectTag&&(null!==a.lastEffect?a.lastEffect.nextEffect=V:a.firstEffect=V,a.lastEffect=V))}else{b=Mi(V,W);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=V.sibling;if(null!==b)return b;V=a}while(null!==V);X===qj&&(X=vj);return null}function Xj(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Yj(a){var b=dg();fg(99,ik.bind(null,a,b));return null}\nfunction ik(a,b){do Sj();while(null!==Ej);if((T&(oj|pj))!==S)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Xj(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=\nd-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===U&&(V=U=null,W=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=T;T|=pj;mj.current=null;le=Ld;var g=fe();if(ge(g)){if(\"selectionStart\"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,\nm=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(Db){h=null;break a}var C=0,y=-1,H=-1,z=0,ta=0,r=g,x=null;b:for(;;){for(var A;;){r!==h||0!==l&&3!==r.nodeType||(y=C+l);r!==m||0!==k&&3!==r.nodeType||(H=C+k);3===r.nodeType&&(C+=r.nodeValue.length);if(null===(A=r.firstChild))break;x=r;r=A}for(;;){if(r===g)break b;x===h&&++z===l&&(y=C);x===m&&++ta===k&&(H=C);if(null!==(A=r.nextSibling))break;r=x;x=r.parentNode}r=A}h=-1===y||-1===H?null:{start:y,end:H}}else h=null}h=h||{start:0,end:0}}else h=\nnull;me={focusedElem:g,selectionRange:h};Ld=!1;Y=e;do try{jk()}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var p=Y.effectTag;p&16&&Tb(Y.stateNode,\"\");if(p&128){var t=Y.alternate;if(null!==t){var v=t.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(p&1038){case 2:$i(Y);Y.effectTag&=-3;break;case 6:$i(Y);Y.effectTag&=-3;aj(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=-1025;aj(Y.alternate,\nY);break;case 4:aj(Y.alternate,Y);break;case 8:l=Y,Xi(g,l,h),Yi(l)}Y=Y.nextEffect}}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);v=me;t=fe();p=v.focusedElem;h=v.selectionRange;if(t!==p&&p&&p.ownerDocument&&ee(p.ownerDocument.documentElement,p)){null!==h&&ge(p)&&(t=h.start,v=h.end,void 0===v&&(v=t),\"selectionStart\"in p?(p.selectionStart=t,p.selectionEnd=Math.min(v,p.value.length)):(v=(t=p.ownerDocument||document)&&t.defaultView||window,v.getSelection&&(v=v.getSelection(),\nl=p.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!v.extend&&g>h&&(l=h,h=g,g=l),l=de(p,g),m=de(p,h),l&&m&&(1!==v.rangeCount||v.anchorNode!==l.node||v.anchorOffset!==l.offset||v.focusNode!==m.node||v.focusOffset!==m.offset)&&(t=t.createRange(),t.setStart(l.node,l.offset),v.removeAllRanges(),g>h?(v.addRange(t),v.extend(m.node,m.offset)):(t.setEnd(m.node,m.offset),v.addRange(t))))));t=[];for(v=p;v=v.parentNode;)1===v.nodeType&&t.push({element:v,left:v.scrollLeft,top:v.scrollTop});\n\"function\"===typeof p.focus&&p.focus();for(p=0;p<t.length;p++)v=t[p],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}me=null;Ld=!!le;le=null;a.current=c;Y=e;do try{for(p=d;null!==Y;){var Dh=Y.effectTag;if(Dh&36){var dc=Y.alternate;t=Y;v=p;switch(t.tag){case 0:case 11:case 15:Ui(16,32,t);break;case 1:var fd=t.stateNode;if(t.effectTag&4)if(null===dc)fd.componentDidMount();else{var hk=t.elementType===t.type?dc.memoizedProps:mg(t.type,dc.memoizedProps);fd.componentDidUpdate(hk,dc.memoizedState,\nfd.__reactInternalSnapshotBeforeUpdate)}var Eh=t.updateQueue;null!==Eh&&Kg(t,Eh,fd,v);break;case 3:var Fh=t.updateQueue;if(null!==Fh){g=null;if(null!==t.child)switch(t.child.tag){case 5:g=t.child.stateNode;break;case 1:g=t.child.stateNode}Kg(t,Fh,g,v)}break;case 5:var xk=t.stateNode;null===dc&&t.effectTag&4&&ne(t.type,t.memoizedProps)&&xk.focus();break;case 6:break;case 4:break;case 12:break;case 13:if(null===t.memoizedState){var Di=t.alternate;if(null!==Di){var Ei=Di.memoizedState;if(null!==Ei){var Fi=\nEi.dehydrated;null!==Fi&&Lc(Fi)}}}break;case 19:case 17:case 20:case 21:break;default:throw Error(u(163));}}if(Dh&128){t=void 0;var xd=Y.ref;if(null!==xd){var Gi=Y.stateNode;switch(Y.tag){case 5:t=Gi;break;default:t=Gi}\"function\"===typeof xd?xd(t):xd.current=t}}Y=Y.nextEffect}}catch(Db){if(null===Y)throw Error(u(330));Ri(Y,Db);Y=Y.nextEffect}while(null!==Y);Y=null;Yf();T=f}else a.current=c;if(Dj)Dj=!1,Ej=a,Fj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&\n(jj=null);1073741823===b?a===Ij?Hj++:(Hj=0,Ij=a):Hj=0;\"function\"===typeof kk&&kk(c.stateNode,d);Z(a);if(gj)throw gj=!1,a=hj,hj=null,a;if((T&nj)!==S)return null;jg();return null}function jk(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Ti(Y.alternate,Y);0===(a&512)||Dj||(Dj=!0,gg(97,function(){Sj();return null}));Y=Y.nextEffect}}function Sj(){if(90!==Fj){var a=97<Fj?97:Fj;Fj=90;return fg(a,lk)}}\nfunction lk(){if(null===Ej)return!1;var a=Ej;Ej=null;if((T&(oj|pj))!==S)throw Error(u(331));var b=T;T|=pj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:Ui(128,0,c),Ui(0,64,c)}}catch(d){if(null===a)throw Error(u(330));Ri(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}T=b;jg();return!0}function mk(a,b,c){b=Ni(c,b);b=fj(a,b,1073741823);Dg(a,b);a=Kj(a,1073741823);null!==a&&Z(a)}\nfunction Ri(a,b){if(3===a.tag)mk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){mk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===jj||!jj.has(d))){a=Ni(b,a);a=ij(c,a,1073741823);Dg(c,a);c=Kj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}\nfunction dk(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);U===a&&W===c?X===uj||X===tj&&1073741823===xj&&cg()-bj<Cj?Tj(a,W):Bj=!0:Pj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,a.finishedExpirationTime===c&&(a.finishedExpirationTime=0,a.finishedWork=null),Z(a)))}function dj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Pg(),b=Qg(b,a,null));a=Kj(a,b);null!==a&&Z(a)}var gk;\ngk=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)wg=!0;else{if(d<c){wg=!1;switch(b.tag){case 3:wi(b);li();break;case 5:oh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Jf(b);break;case 4:mh(b,b.stateNode.containerInfo);break;case 10:sg(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return yi(a,b,c);I(M,M.current&\n1,b);b=oi(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1,b);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return Bi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current,b);if(!d)return null}return oi(a,b,c)}wg=!1}}else wg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Ef(b,J.current);vg(b,c);e=Ih(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;Mh();if(L(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Og(b,d,g,a);e.updater=Sg;b.stateNode=e;e._reactInternalFiber=b;Wg(b,d,a,c);b=vi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;Va(e);if(1!==e._status)throw e._result;\ne=e._result;b.type=e;f=b.tag=nk(e);a=mg(e,a);switch(f){case 0:b=si(null,b,e,a,c);break;case 1:b=ui(null,b,e,a,c);break;case 11:b=ni(null,b,e,a,c);break;case 14:b=pi(null,b,e,mg(e.type,a),d,c);break;default:throw Error(u(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),si(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),ui(a,b,d,e,c);case 3:wi(b);d=b.updateQueue;if(null===d)throw Error(u(282));e=b.memoizedState;e=null!==e?e.element:\nnull;Hg(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)li(),b=oi(a,b,c);else{if(e=b.stateNode.hydrate)di=re(b.stateNode.containerInfo.firstChild),ci=b,e=ei=!0;if(e)for(c=gh(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),li();b=b.child}return b;case 5:return oh(b),null===a&&ii(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,oe(d,e)?g=null:null!==f&&oe(d,f)&&(b.effectTag|=16),ti(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=\nb.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&ii(b),null;case 13:return yi(a,b,c);case 4:return mh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=fh(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),ni(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,b,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;\ne=b.pendingProps;g=b.memoizedProps;f=e.value;sg(b,f);if(null!==g){var h=g.value;f=of(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!K.current){b=oi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=Bg(c,null),l.tag=2,Dg(h,l));h.expirationTime<c&&(h.expirationTime=\nc);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);ug(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,vg(b,c),e=xg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;\ncase 14:return e=b.type,f=mg(e,b.pendingProps),f=mg(e.type,f),pi(a,b,e,f,d,c);case 15:return ri(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:mg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Jf(b)):a=!1,vg(b,c),Ug(b,d,e,c),Wg(b,d,e,c),vi(null,b,d,!0,a,c);case 19:return Bi(a,b,c)}throw Error(u(156,b.tag));};var kk=null,Wi=null;\nfunction ok(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);kk=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Wi=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}\nfunction pk(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function gi(a,b,c,d){return new pk(a,b,c,d)}\nfunction qi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function nk(a){if(\"function\"===typeof a)return qi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Oa)return 11;if(a===Ra)return 14}return 2}\nfunction ah(a,b){var c=a.alternate;null===c?(c=gi(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,\nfirstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction ch(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)qi(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Ia:return eh(c.children,e,f,b);case Na:g=8;e|=7;break;case Ja:g=8;e|=1;break;case Ka:return a=gi(12,c,b,e|8),a.elementType=Ka,a.type=Ka,a.expirationTime=f,a;case Pa:return a=gi(13,c,b,e),a.type=Pa,a.elementType=Pa,a.expirationTime=f,a;case Qa:return a=gi(19,c,b,e),a.elementType=Qa,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case La:g=\n10;break a;case Ma:g=9;break a;case Oa:g=11;break a;case Ra:g=14;break a;case Sa:g=16;d=null;break a}throw Error(u(130,null==a?a:typeof a,\"\"));}b=gi(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function eh(a,b,c,d){a=gi(7,a,d,b);a.expirationTime=c;return a}function bh(a,b,c){a=gi(6,a,null,b);a.expirationTime=c;return a}\nfunction dh(a,b,c){b=gi(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction qk(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}\nfunction Pj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function Mj(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}\nfunction Nj(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Rj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}\nfunction rk(a,b,c,d){var e=b.current,f=Pg(),g=Mg.suspense;f=Qg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(ec(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=Bg(f,g);b.payload={element:a};d=void 0===\nd?null:d;null!==d&&(b.callback=d);Dg(e,b);Rg(e,f);return f}function sk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function tk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function uk(a,b){tk(a,b);(a=a.alternate)&&tk(a,b)}\nfunction vk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new qk(a,b,c),e=gi(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;a[we]=d.current;c&&0!==b&&wc(9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}vk.prototype.render=function(a,b){rk(a,this._internalRoot,null,void 0===b?null:b)};vk.prototype.unmount=function(a){var b=this._internalRoot,c=void 0===a?null:a,d=b.containerInfo;rk(null,b,null,function(){d[we]=null;null!==c&&c()})};\nfunction wk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function yk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new vk(a,0,b?{hydrate:!0}:void 0)}\nfunction zk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=sk(g);h.call(a)}}rk(b,g,a,e)}else{f=c._reactRootContainer=yk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=sk(g);k.call(a)}}ck(function(){rk(b,g,a,e)})}return sk(g)}function Ak(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ha,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\njc=function(a){if(13===a.tag){var b=lg(Pg(),150,100);Rg(a,b);uk(a,b)}};kc=function(a){if(13===a.tag){Pg();var b=kg++;Rg(a,b);uk(a,b)}};lc=function(a){if(13===a.tag){var b=Pg();b=Qg(b,a,null);Rg(a,b);uk(a,b)}};\nZa=function(a,b,c){switch(b){case \"input\":Eb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=ye(d);if(!e)throw Error(u(90));zb(d);Eb(d,e)}}}break;case \"textarea\":Mb(a,c);break;case \"select\":b=c.value,null!=b&&Jb(a,!!c.multiple,b,!1)}};eb=bk;\nfb=function(a,b,c,d){var e=T;T|=4;try{return fg(98,a.bind(null,b,c,d))}finally{T=e,T===S&&jg()}};gb=function(){(T&(1|oj|pj))===S&&(ak(),Sj())};hb=function(a,b){var c=T;T|=2;try{return a(b)}finally{T=c,T===S&&jg()}};function Bk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!wk(b))throw Error(u(200));return Ak(a,b,null,c)}\nvar Ck={createPortal:Bk,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if(\"function\"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=ic(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){if(!wk(b))throw Error(u(200));return zk(null,a,b,!0,c)},render:function(a,b,c){if(!wk(b))throw Error(u(200));return zk(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){if(!wk(c))throw Error(u(200));\nif(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return zk(a,b,c,!1,d)},unmountComponentAtNode:function(a){if(!wk(a))throw Error(u(40));return a._reactRootContainer?(ck(function(){zk(null,null,a,!1,function(){a._reactRootContainer=null;a[we]=null})}),!0):!1},unstable_createPortal:function(){return Bk.apply(void 0,arguments)},unstable_batchedUpdates:bk,flushSync:function(a,b){if((T&(oj|pj))!==S)throw Error(u(187));var c=T;T|=1;try{return fg(99,a.bind(null,b))}finally{T=c,jg()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Cc,\nxe,ye,Ca.injectEventPluginsByName,fa,Sc,function(a){ya(a,Rc)},cb,db,Pd,Ba,Sj,{current:!1}]}};\n(function(a){var b=a.findFiberByHostInstance;return ok(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Ea.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=ic(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:Fc,bundleType:0,version:\"16.12.0\",\nrendererPackageName:\"react-dom\"});var Dk={default:Ck},Ek=Dk&&Ck||Dk;module.exports=Ek.default||Ek;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.18.0\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var f,g,h,k,l;\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,\ny=window.setTimeout,z=window.clearTimeout;if(\"undefined\"!==typeof console){var A=window.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\");\"function\"!==typeof A&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\")}if(\"object\"===\ntypeof w&&\"function\"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported\"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=\nfunction(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=Math.floor((c-1)/2),e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}\nfunction M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;\nfunction V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}\nfunction X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}\nfunction Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};\nexports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if(\"object\"===typeof c&&null!==c){var e=c.delay;e=\"number\"===typeof e&&0<e?d+e:d;c=\"number\"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};exports.unstable_cancelCallback=function(a){a.callback=null};\nexports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};exports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_requestPaint=Z;exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};\nexports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_Profiling=null;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tone\"] = factory();\n\telse\n\t\troot[\"Tone\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 148);\n","/**\n *  Tone.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2014-2019 Yotam Mann\n */\nimport version from \"../version\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTONE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  @class  Tone is the base class of all other classes.\n *  @constructor\n */\nvar Tone = function(){\n\tif (!(this instanceof Tone)){\n\t\tthrow new Error(\"constructor needs to be called with the 'new' keyword\");\n\t}\n};\n\n/**\n *  @memberOf Tone#\n *  @returns {String} returns the name of the class as a string\n */\nTone.prototype.toString = function(){\n\tfor (var className in Tone){\n\t\tvar isLetter = className[0].match(/^[A-Z]$/);\n\t\tvar sameConstructor = Tone[className] === this.constructor;\n\t\tif (Tone.isFunction(Tone[className]) && isLetter && sameConstructor){\n\t\t\treturn className;\n\t\t}\n\t}\n\treturn \"Tone\";\n};\n\n/**\n *  @memberOf Tone#\n *  disconnect and dispose\n *  @returns {Tone} this\n */\nTone.prototype.dispose = function(){\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tGET/SET\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Set the parameters at once. Either pass in an\n *  object mapping parameters to values, or to set a\n *  single parameter, by passing in a string and value.\n *  The last argument is an optional ramp time which\n *  will ramp any signal values to their destination value\n *  over the duration of the rampTime.\n *  @param {Object|String} params\n *  @param {Number=} value\n *  @returns {Tone} this\n *  @memberOf Tone#\n *  @example\n * //set values using an object\n * filter.set({\n * \t\"frequency\" : 300,\n * \t\"type\" : highpass\n * });\n *  @example\n * filter.set(\"type\", \"highpass\");\n *  @example\n * //ramp to the value 220 over 3 seconds.\n * oscillator.set({\n * \t\"frequency\" : 220\n * }, 3);\n */\nTone.prototype.set = function(params, value){\n\tif (Tone.isString(params)){\n\t\tvar tmpObj = {};\n\t\ttmpObj[params] = value;\n\t\tparams = tmpObj;\n\t}\n\n\tparamLoop:\n\tfor (var attr in params){\n\t\tvalue = params[attr];\n\t\tvar parent = this;\n\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\tfor (var i = 0; i < attrSplit.length - 1; i++){\n\t\t\t\tparent = parent[attrSplit[i]];\n\t\t\t\tif (parent instanceof Tone){\n\t\t\t\t\tattrSplit.splice(0, i+1);\n\t\t\t\t\tvar innerParam = attrSplit.join(\".\");\n\t\t\t\t\tparent.set(innerParam, value);\n\t\t\t\t\tcontinue paramLoop;\n\t\t\t\t}\n\t\t\t}\n\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t}\n\t\tvar param = parent[attr];\n\t\tif (Tone.isUndef(param)){\n\t\t\tcontinue;\n\t\t}\n\t\tif ((Tone.Signal && param instanceof Tone.Signal) ||\n\t\t\t(Tone.Param && param instanceof Tone.Param)){\n\t\t\tif (param.value !== value){\n\t\t\t\tparam.value = value;\n\t\t\t}\n\t\t} else if (param instanceof AudioParam){\n\t\t\tif (param.value !== value){\n\t\t\t\tparam.value = value;\n\t\t\t}\n\t\t} else if (Tone.TimeBase && param instanceof Tone.TimeBase){\n\t\t\tparent[attr] = value;\n\t\t} else if (param instanceof Tone){\n\t\t\tparam.set(value);\n\t\t} else if (param !== value){\n\t\t\tparent[attr] = value;\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @memberOf Tone#\n *  @example\n * osc.get();\n * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n *  @example\n * osc.get(\"type\");\n * //returns { \"type\" : \"sine\"}\n * @example\n * //use dot notation to access deep properties\n * synth.get([\"envelope.attack\", \"envelope.release\"]);\n * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n *  \t\t\t\t\t                  all available.\n *  @returns {Object}\n */\nTone.prototype.get = function(params){\n\tif (Tone.isUndef(params)){\n\t\tparams = this._collectDefaults(this.constructor);\n\t} else if (Tone.isString(params)){\n\t\tparams = [params];\n\t}\n\tvar ret = {};\n\tfor (var i = 0; i < params.length; i++){\n\t\tvar attr = params[i];\n\t\tvar parent = this;\n\t\tvar subRet = ret;\n\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\tfor (var j = 0; j < attrSplit.length - 1; j++){\n\t\t\t\tvar subAttr = attrSplit[j];\n\t\t\t\tsubRet[subAttr] = subRet[subAttr] || {};\n\t\t\t\tsubRet = subRet[subAttr];\n\t\t\t\tparent = parent[subAttr];\n\t\t\t}\n\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t}\n\t\tvar param = parent[attr];\n\t\tif (Tone.isObject(params[attr])){\n\t\t\tsubRet[attr] = param.get();\n\t\t} else if (Tone.Signal && param instanceof Tone.Signal){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (Tone.Param && param instanceof Tone.Param){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (param instanceof AudioParam){\n\t\t\tsubRet[attr] = param.value;\n\t\t} else if (param instanceof Tone){\n\t\t\tsubRet[attr] = param.get();\n\t\t} else if (!Tone.isFunction(param) && Tone.isDefined(param)){\n\t\t\tsubRet[attr] = param;\n\t\t}\n\t}\n\treturn ret;\n};\n\n/**\n *  collect all of the default attributes in one\n *  @private\n *  @param {Function} constr the constructor to find the defaults from\n *  @return {Array} all of the attributes which belong to the class\n */\nTone.prototype._collectDefaults = function(constr){\n\tvar ret = [];\n\tif (Tone.isDefined(constr.defaults)){\n\t\tret = Object.keys(constr.defaults);\n\t}\n\tif (Tone.isDefined(constr._super)){\n\t\tvar superDefs = this._collectDefaults(constr._super);\n\t\t//filter out repeats\n\t\tfor (var i = 0; i < superDefs.length; i++){\n\t\t\tif (ret.indexOf(superDefs[i]) === -1){\n\t\t\t\tret.push(superDefs[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tDEFAULTS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  @memberOf Tone\n *  @param  {Array}  values  The arguments array\n *  @param  {Array}  keys    The names of the arguments\n *  @param {Function|Object} constr The class constructor\n *  @return  {Object}  An object composed of the  defaults between the class' defaults\n *                        and the passed in arguments.\n */\nTone.defaults = function(values, keys, constr){\n\tvar options = {};\n\tif (values.length === 1 && Tone.isObject(values[0])){\n\t\toptions = values[0];\n\t} else {\n\t\tfor (var i = 0; i < keys.length; i++){\n\t\t\toptions[keys[i]] = values[i];\n\t\t}\n\t}\n\tif (Tone.isDefined(constr.defaults)){\n\t\treturn Tone.defaultArg(options, constr.defaults);\n\t} else if (Tone.isObject(constr)){\n\t\treturn Tone.defaultArg(options, constr);\n\t} else {\n\t\treturn options;\n\t}\n};\n\n/**\n *  If the `given` parameter is undefined, use the `fallback`.\n *  If both `given` and `fallback` are object literals, it will\n *  return a deep copy which includes all of the parameters from both\n *  objects. If a parameter is undefined in given, it will return\n *  the fallback property.\n *  <br><br>\n *  WARNING: if object is self referential, it will go into an an\n *  infinite recursive loop.\n *  @memberOf Tone\n *  @param  {*} given\n *  @param  {*} fallback\n *  @return {*}\n */\nTone.defaultArg = function(given, fallback){\n\tif (Tone.isObject(given) && Tone.isObject(fallback)){\n\t\tvar ret = {};\n\t\t//make a deep copy of the given object\n\t\tfor (var givenProp in given){\n\t\t\tret[givenProp] = Tone.defaultArg(fallback[givenProp], given[givenProp]);\n\t\t}\n\t\tfor (var fallbackProp in fallback){\n\t\t\tret[fallbackProp] = Tone.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t\t}\n\t\treturn ret;\n\t} else {\n\t\treturn Tone.isUndef(given) ? fallback : given;\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tDEBUGGING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Print the outputs to the console log for debugging purposes. \n *  Prints the contents only if either the object has a property\n *  called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n *  is set to the name of the class. \n *  @example\n * //prints all logs originating from Tone.OscillatorNode\n * Tone.global.TONE_DEBUG_CLASS = \"OscillatorNode\"\n *  @param {*} args Any arguments to print to the console.\n *  @private\n */\nTone.prototype.log = function(){\n\t//if the object is either set to debug = true\n\t//or if there is a string on the Tone.global.with the class name\n\tif (this.debug || this.toString() === Tone.global.TONE_DEBUG_CLASS){\n\t\tvar args = Array.from(arguments);\n\t\targs.unshift(this.toString()+\":\");\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log.apply(undefined, args);\n\t}\n};\n\n/**\n *  Assert that the statement is true, otherwise invoke the error. \n *  @param {Boolean} statement\n *  @param {String} error The message which is passed into an Error\n *  @private\n */\nTone.prototype.assert = function(statement, error){\n\tif (!statement){\n\t\tthrow new Error(error);\n\t}\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tCONNECTIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  connect together all of the arguments in series\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone}\n *  @memberOf Tone\n *  @static\n */\nTone.connectSeries = function(){\n\tvar currentUnit = arguments[0];\n\tfor (var i = 1; i < arguments.length; i++){\n\t\tvar toUnit = arguments[i];\n\t\tTone.connect(currentUnit, toUnit);\n\t\tcurrentUnit = toUnit;\n\t}\n\treturn Tone;\n};\n\n/**\n * Connect two nodes together so that signal flows from the \n * first node to the second. The second node can be an AudioParam. \n * Optionally specific the input and output channels. \n * @param {(AudioNode|Tone.AudioNode)} srcNode The source node\n * @param {(AudioNode|Tone.AudioNode|AudioParam|Tone.AudioParam)} dstNode The destination node\n * @param {number} [outputNumber=0] The output channel of the srcNode\n * @param {number} [inputNumber=0] The input channel of the dstNode\n */\nTone.connect = function(srcNode, dstNode, outputNumber, inputNumber){\n\t\n\t//resolve the input of the dstNode\n\twhile (Tone.isDefined(dstNode.input)){\n\t\tif (Tone.isArray(dstNode.input)){\n\t\t\tinputNumber = Tone.defaultArg(inputNumber, 0);\n\t\t\tdstNode = dstNode.input[inputNumber];\n\t\t\tinputNumber = 0;\n\t\t} else if (dstNode.input){\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\t//make the connection\n\tif (dstNode instanceof AudioParam){\n\t\tsrcNode.connect(dstNode, outputNumber);\n\t} else if (dstNode instanceof AudioNode){\n\t\tsrcNode.connect(dstNode, outputNumber, inputNumber);\n\t}\n\n\treturn Tone;\n};\n\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param {(AudioNode|Tone.AudioNode)} srcNode The source node\n * @param {?(AudioNode|Tone.AudioNode|AudioParam|Tone.AudioParam)} dstNode The destination node\n * @param {?number} [outputNumber=0] The output channel of the srcNode\n * @param {?number} [inputNumber=0] The input channel of the dstNode\n */\nTone.disconnect = function(srcNode, dstNode, outputNumber, inputNumber){\n\tif (dstNode){\n\t\t//resolve the input of the dstNode\n\t\tvar bDone = false;\n\t\twhile (!bDone){\n\t\t\tif (Tone.isArray(dstNode.input)){\n\t\t\t\tif (Tone.isDefined(inputNumber)){\n\t\t\t\t\tTone.disconnect(srcNode, dstNode.input[inputNumber], outputNumber);\n\t\t\t\t} else {\n\t\t\t\t\tdstNode.input.forEach(function(dstNode){\n\t\t\t\t\t\t//ignore errors from connections that aren't there\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tTone.disconnect(srcNode, dstNode, outputNumber);\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbDone = true;\n\t\t\t} else if (dstNode.input){\n\t\t\t\tdstNode = dstNode.input;\n\t\t\t} else {\n\t\t\t\tbDone = true;\n\t\t\t}\n\t\t}\n\t\n\t\t//make the connection\n\t\tif (dstNode instanceof AudioParam){\n\t\t\tsrcNode.disconnect(dstNode, outputNumber);\n\t\t} else if (dstNode instanceof AudioNode){\n\t\t\tsrcNode.disconnect(dstNode, outputNumber, inputNumber);\n\t\t}\n\t} else {\n\t\tsrcNode.disconnect();\n\t}\n\n\treturn Tone;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// TYPE CHECKING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Test if the arg is undefined\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is undefined\n *  @static\n *  @memberOf Tone\n */\nTone.isUndef = function(val){\n\treturn typeof val === \"undefined\";\n};\n\n/**\n *  Test if the arg is not undefined\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is undefined\n *  @static\n *  @memberOf Tone\n */\nTone.isDefined = function(val){\n\treturn !Tone.isUndef(val);\n};\n\n/**\n *  Test if the arg is a function\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a function\n *  @static\n *  @memberOf Tone\n */\nTone.isFunction = function(val){\n\treturn typeof val === \"function\";\n};\n\n/**\n *  Test if the argument is a number.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a number\n *  @static\n *  @memberOf Tone\n */\nTone.isNumber = function(arg){\n\treturn (typeof arg === \"number\");\n};\n\n/**\n *  Test if the given argument is an object literal (i.e. `{}`);\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is an object literal.\n *  @static\n *  @memberOf Tone\n */\nTone.isObject = function(arg){\n\treturn (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n};\n\n/**\n *  Test if the argument is a boolean.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a boolean\n *  @static\n *  @memberOf Tone\n */\nTone.isBoolean = function(arg){\n\treturn (typeof arg === \"boolean\");\n};\n\n/**\n *  Test if the argument is an Array\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is an array\n *  @static\n *  @memberOf Tone\n */\nTone.isArray = function(arg){\n\treturn (Array.isArray(arg));\n};\n\n/**\n *  Test if the argument is a string.\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a string\n *  @static\n *  @memberOf Tone\n */\nTone.isString = function(arg){\n\treturn (typeof arg === \"string\");\n};\n\n/**\n *  Test if the argument is in the form of a note in scientific pitch notation.\n *  e.g. \"C4\"\n *  @param {*} arg the argument to test\n *  @returns {Boolean} true if the arg is a string\n *  @static\n *  @memberOf Tone\n */\nTone.isNote = function(arg){\n\treturn Tone.isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n};\n\n/**\n *  An empty function.\n *  @static\n */\nTone.noOp = function(){};\n\n/**\n *  Make the property not writable. Internal use only.\n *  @private\n *  @param  {String}  property  the property to make not writable\n */\nTone.prototype._readOnly = function(property){\n\tif (Array.isArray(property)){\n\t\tfor (var i = 0; i < property.length; i++){\n\t\t\tthis._readOnly(property[i]);\n\t\t}\n\t} else {\n\t\tObject.defineProperty(this, property, {\n\t\t\t\"writable\" : false,\n\t\t\t\"enumerable\" : true,\n\t\t});\n\t}\n};\n\n/**\n *  Make an attribute writeable. Interal use only.\n *  @private\n *  @param  {String}  property  the property to make writable\n */\nTone.prototype._writable = function(property){\n\tif (Array.isArray(property)){\n\t\tfor (var i = 0; i < property.length; i++){\n\t\t\tthis._writable(property[i]);\n\t\t}\n\t} else {\n\t\tObject.defineProperty(this, property, {\n\t\t\t\"writable\" : true,\n\t\t});\n\t}\n};\n\n/**\n * Possible play states.\n * @enum {String}\n */\nTone.State = {\n\t\"Started\" : \"started\",\n\t\"Stopped\" : \"stopped\",\n\t\"Paused\" : \"paused\",\n};\n\n/**\n * A reference to the global context, `global` or `Tone.global.\n */\nTone.global = Tone.isUndef(global) ? window : global;\n\n///////////////////////////////////////////////////////////////////////////\n// CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Equal power gain scale. Good for cross-fading.\n *  @param  {NormalRange} percent (0-1)\n *  @return {Number}         output gain (0-1)\n *  @static\n *  @memberOf Tone\n */\nTone.equalPowerScale = function(percent){\n\tvar piFactor = 0.5 * Math.PI;\n\treturn Math.sin(percent * piFactor);\n};\n\n/**\n *  Convert decibels into gain.\n *  @param  {Decibels} db\n *  @return {Number}\n *  @static\n *  @memberOf Tone\n */\nTone.dbToGain = function(db){\n\treturn Math.pow(10, db / 20);\n};\n\n/**\n *  Convert gain to decibels.\n *  @param  {Number} gain (0-1)\n *  @return {Decibels}\n *  @static\n *  @memberOf Tone\n */\nTone.gainToDb = function(gain){\n\treturn 20 * (Math.log(gain) / Math.LN10);\n};\n\n/**\n *  Convert an interval (in semitones) to a frequency ratio.\n *  @param  {Interval} interval the number of semitones above the base note\n *  @return {Number}          the frequency ratio\n *  @static\n *  @memberOf Tone\n *  @example\n * tone.intervalToFrequencyRatio(0); // 1\n * tone.intervalToFrequencyRatio(12); // 2\n * tone.intervalToFrequencyRatio(-12); // 0.5\n */\nTone.intervalToFrequencyRatio = function(interval){\n\treturn Math.pow(2, (interval/12));\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tTIMING\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Return the current time of the AudioContext clock plus\n *  the lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone#\n */\nTone.prototype.now = function(){\n\treturn Tone.context.now();\n};\n\n/**\n *  Return the current time of the AudioContext clock plus\n *  the lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @static\n *  @memberOf Tone\n */\nTone.now = function(){\n\treturn Tone.context.now();\n};\n\n/**\n *  Return the current time of the AudioContext clock without\n *  any lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone#\n */\nTone.prototype.immediate = function(){\n\treturn Tone.context.currentTime;\n};\n\n/**\n *  Return the current time of the AudioContext clock without\n *  any lookAhead.\n *  @return {Number} the currentTime from the AudioContext\n *  @memberOf Tone\n */\nTone.immediate = function(){\n\treturn Tone.context.currentTime;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tINHERITANCE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  have a child inherit all of Tone's (or a parent's) prototype\n *  to inherit the parent's properties, make sure to call\n *  Parent.call(this) in the child's constructor\n *\n *  based on closure library's inherit function\n *\n *  @memberOf Tone\n *  @static\n *  @param  {Function} \tchild\n *  @param  {Function=} parent (optional) parent to inherit from\n *                             if no parent is supplied, the child\n *                             will inherit from Tone\n */\nTone.extend = function(child, parent){\n\tif (Tone.isUndef(parent)){\n\t\tparent = Tone;\n\t}\n\tfunction TempConstructor(){}\n\tTempConstructor.prototype = parent.prototype;\n\tchild.prototype = new TempConstructor();\n\t/** @override */\n\tchild.prototype.constructor = child;\n\tchild._super = parent;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tCONTEXT\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * The shared AudioContext\n * @type {Tone.Context}\n * @private\n */\nTone._audioContext = null;\n\n/**\n * \tMost browsers will not play _any_ audio until a user \n * \tclicks something (like a play button). Invoke this method\n * \ton a click or keypress event handler to start the audio context. \n * \tMore about the Autoplay policy [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n *  @memberOf Tone\n *  @static\n *  @return {Promise} This promise is resolved when the audio context is started. \n *  @example\n * document.querySelector('#playbutton').addEventListener('click', () => Tone.start())\n */\nTone.start = function(){\n\treturn Tone.context.resume();\n};\n\n/**\n *  A static pointer to the audio context accessible as Tone.context.\n *  @type {Tone.Context}\n *  @name context\n *  @memberOf Tone\n */\nObject.defineProperty(Tone, \"context\", {\n\t\"get\" : function(){\n\t\treturn Tone._audioContext;\n\t},\n\t\"set\" : function(context){\n\t\tif (context.isContext){\n\t\t\tTone._audioContext = context;\n\t\t} else {\n\t\t\tTone._audioContext = new Tone.Context(context);\n\t\t}\n\t\t//initialize the new audio context\n\t\tTone.Context.emit(\"init\", Tone._audioContext);\n\t}\n});\n\n/**\n *  The AudioContext\n *  @type {Tone.Context}\n *  @name context\n *  @memberOf Tone#\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"context\", {\n\t\"get\" : function(){\n\t\treturn Tone.context;\n\t}\n});\n\n/**\n *  Tone automatically creates a context on init, but if you are working\n *  with other libraries which also create an AudioContext, it can be\n *  useful to set your own. If you are going to set your own context,\n *  be sure to do it at the start of your code, before creating any objects.\n *  @static\n *  @param {AudioContext} ctx The new audio context to set\n */\nTone.setContext = function(ctx){\n\tTone.context = ctx;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tATTRIBUTES\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  The number of seconds of 1 processing block (128 samples)\n *  @type {Number}\n *  @name blockTime\n *  @memberOf Tone\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"blockTime\", {\n\t\"get\" : function(){\n\t\treturn 128 / this.context.sampleRate;\n\t}\n});\n\n/**\n *  The duration in seconds of one sample.\n *  @type {Number}\n *  @name sampleTime\n *  @memberOf Tone\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.prototype, \"sampleTime\", {\n\t\"get\" : function(){\n\t\treturn 1 / this.context.sampleRate;\n\t}\n});\n\n/**\n *  Whether or not all the technologies that Tone.js relies on are supported by the current browser.\n *  @type {Boolean}\n *  @name supported\n *  @memberOf Tone\n *  @readOnly\n *  @static\n */\nObject.defineProperty(Tone, \"supported\", {\n\t\"get\" : function(){\n\t\tvar hasAudioContext = Tone.global.hasOwnProperty(\"AudioContext\") || Tone.global.hasOwnProperty(\"webkitAudioContext\");\n\t\tvar hasPromises = Tone.global.hasOwnProperty(\"Promise\");\n\t\treturn hasAudioContext && hasPromises;\n\t}\n});\n\n/**\n *  Boolean value if the audio context has been initialized.\n *  @type {Boolean}\n *  @memberOf Tone\n *  @static\n *  @name initialized\n *  @readOnly\n */\nObject.defineProperty(Tone, \"initialized\", {\n\t\"get\" : function(){\n\t\treturn Boolean(Tone.context);\n\t}\n});\n\n/**\n *  Get the context when it becomes available\n *  @param  {Function}  resolve  Callback when the context is initialized\n *  @return  {Tone}\n */\nTone.getContext = function(resolve){\n\tif (Tone.initialized){\n\t\tresolve(Tone.context);\n\t} else {\n\t\tvar resCallback = function(){\n\t\t\tresolve(Tone.context);\n\t\t\tTone.Context.off(\"init\", resCallback);\n\t\t};\n\t\tTone.Context.on(\"init\", resCallback);\n\t}\n\treturn Tone;\n};\n\n/**\n * The version number\n * @type {String}\n * @static\n */\nTone.version = version;\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  Makes sure that connect returns the dst node\n *  @private\n */\nif (Tone.supported){\n\tvar testContext = new OfflineAudioContext(2, 1, 44100);\n\tvar testSrcNode = testContext.createGain();\n\tvar testDstNode = testContext.createGain();\n\tif (testSrcNode.connect(testDstNode) !== testDstNode){\n\t\tvar nativeConnect = AudioNode.prototype.connect;\n\t\tAudioNode.prototype.connect = function(){\n\t\t\tnativeConnect.apply(this, arguments);\n\t\t\treturn arguments[0];\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Context\";\nimport \"../shim/AudioNode\";\n\n/**\n *  @class Tone.AudioNode is the base class for classes which process audio.\n *         AudioNodes have inputs and outputs.\n *  @param\t{AudioContext=} context\tThe audio context to use with the class\n *  @extends {Tone}\n */\nTone.AudioNode = function(){\n\tTone.call(this);\n\n\t//use the default context if one is not passed in\n\tvar options = Tone.defaults(arguments, [\"context\"], {\n\t\t\"context\" : Tone.context\n\t});\n\n\t/**\n\t * The AudioContext of this instance\n\t * @private\n\t * @type {AudioContext}\n\t */\n\tthis._context = options.context;\n};\n\nTone.extend(Tone.AudioNode);\n\n/**\n * Get the audio context belonging to this instance.\n * @type {Tone.Context}\n * @memberOf Tone.AudioNode#\n * @name context\n * @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"context\", {\n\tget : function(){\n\t\treturn this._context;\n\t}\n});\n\n/**\n *  Create input and outputs for this object.\n *  @param  {Number}  [input=0]   The number of inputs\n *  @param  {Number}  [outputs=0]  The number of outputs\n *  @return  {Tone.AudioNode}  this\n *  @private\n */\nTone.AudioNode.prototype.createInsOuts = function(inputs, outputs){\n\n\tif (inputs === 1){\n\t\tthis.input = this.context.createGain();\n\t} else if (inputs > 1){\n\t\tthis.input = new Array(inputs);\n\t}\n\n\tif (outputs === 1){\n\t\tthis.output = this.context.createGain();\n\t} else if (outputs > 1){\n\t\tthis.output = new Array(outputs);\n\t}\n};\n\n/**\n *  channelCount is the number of channels used when up-mixing and down-mixing\n *  connections to any inputs to the node. The default value is 2 except for\n *  specific nodes where its value is specially determined.\n *\n *  @memberof Tone.AudioNode#\n *  @type {Number}\n *  @name channelCount\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelCount\", {\n\tget : function(){\n\t\treturn this.output.channelCount;\n\t},\n\tset : function(c){\n\t\treturn this.output.channelCount = c;\n\t}\n});\n\n/**\n *  channelCountMode determines how channels will be counted when up-mixing and\n *  down-mixing connections to any inputs to the node.\n *  The default value is \"max\". This attribute has no effect for nodes with no inputs.\n *  @memberof Tone.AudioNode#\n *  @type {String}\n *  @name channelCountMode\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelCountMode\", {\n\tget : function(){\n\t\treturn this.output.channelCountMode;\n\t},\n\tset : function(m){\n\t\treturn this.output.channelCountMode = m;\n\t}\n});\n\n/**\n *  channelInterpretation determines how individual channels will be treated\n *  when up-mixing and down-mixing connections to any inputs to the node.\n *  The default value is \"speakers\".\n *  @memberof Tone.AudioNode#\n *  @type {String}\n *  @name channelInterpretation\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"channelInterpretation\", {\n\tget : function(){\n\t\treturn this.output.channelInterpretation;\n\t},\n\tset : function(i){\n\t\treturn this.output.channelInterpretation = i;\n\t}\n});\n\n/**\n *  The number of inputs feeding into the AudioNode.\n *  For source nodes, this will be 0.\n *  @type {Number}\n *  @name numberOfInputs\n *  @memberof Tone.AudioNode#\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"numberOfInputs\", {\n\tget : function(){\n\t\tif (this.input){\n\t\t\tif (Tone.isArray(this.input)){\n\t\t\t\treturn this.input.length;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  The number of outputs coming out of the AudioNode.\n *  @type {Number}\n *  @name numberOfOutputs\n *  @memberof Tone.AudioNode#\n *  @readOnly\n */\nObject.defineProperty(Tone.AudioNode.prototype, \"numberOfOutputs\", {\n\tget : function(){\n\t\tif (this.output){\n\t\t\tif (Tone.isArray(this.output)){\n\t\t\t\treturn this.output.length;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n *  @param  {Tone | AudioParam | AudioNode} unit\n *  @param {number} [outputNum=0] optionally which output to connect from\n *  @param {number} [inputNum=0] optionally which input to connect to\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.connect = function(unit, outputNum, inputNum){\n\tif (Tone.isArray(this.output)){\n\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\tthis.output[outputNum].connect(unit, 0, inputNum);\n\t} else {\n\t\tTone.connect(this.output, unit, outputNum, inputNum);\n\t}\n\treturn this;\n};\n\n/**\n *  disconnect the output\n *  @param {Number|AudioNode} output Either the output index to disconnect\n *                                   if the output is an array, or the\n *                                   node to disconnect from.\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.disconnect = function(destination, outputNum, inputNum){\n\tif (Tone.isArray(this.output)){\n\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\tthis.output[outputNum].disconnect(destination, 0, inputNum);\n\t} else {\n\t\tTone.disconnect(this.output, destination, outputNum, inputNum);\n\t}\n\treturn this;\n};\n\n/**\n *  Connect the output of this node to the rest of the nodes in series.\n *  @example\n *  //connect a node to an effect, panVol and then to the master output\n *  node.chain(effect, panVol, Tone.Master);\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.chain = function(){\n\tvar args = Array.from(arguments);\n\targs.unshift(this);\n\tTone.connectSeries.apply(undefined, args);\n\treturn this;\n};\n\n/**\n *  connect the output of this node to the rest of the nodes in parallel.\n *  @param {...(AudioParam|Tone|AudioNode)} nodes\n *  @returns {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.fan = function(){\n\tfor (var i = 0; i < arguments.length; i++){\n\t\tthis.connect(arguments[i]);\n\t}\n\treturn this;\n};\n\n/**\n * Dispose and disconnect\n * @return {Tone.AudioNode} this\n */\nTone.AudioNode.prototype.dispose = function(){\n\tif (Tone.isDefined(this.input)){\n\t\tif (this.input instanceof AudioNode){\n\t\t\tthis.input.disconnect();\n\t\t}\n\t\tthis.input = null;\n\t}\n\tif (Tone.isDefined(this.output)){\n\t\tif (this.output instanceof AudioNode){\n\t\t\tthis.output.disconnect();\n\t\t}\n\t\tthis.output = null;\n\t}\n\tthis._context = null;\n\treturn this;\n};\n\nexport default Tone.AudioNode;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\nimport \"../core/Context\";\nimport \"../core/Gain\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype.createConstantSource){\n\n\tvar ConstantSourceNode = function(context){\n\t\tthis.context = context;\n\n\t\tvar buffer = context.createBuffer(1, 128, context.sampleRate);\n\t\tvar arr = buffer.getChannelData(0);\n\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\tarr[i] = 1;\n\t\t}\n\n\t\tthis._bufferSource = context.createBufferSource();\n\t\tthis._bufferSource.channelCount = 1;\n\t\tthis._bufferSource.channelCountMode = \"explicit\";\n\t\tthis._bufferSource.buffer = buffer;\n\t\tthis._bufferSource.loop = true;\n\n\t\tvar gainNode = this._output = context.createGain();\n\t\tthis.offset = gainNode.gain;\n\n\t\tthis._bufferSource.connect(gainNode);\n\t};\n\n\tConstantSourceNode.prototype.start = function(time){\n\t\tthis._bufferSource.start(time);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.stop = function(time){\n\t\tthis._bufferSource.stop(time);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.connect = function(){\n\t\tthis._output.connect.apply(this._output, arguments);\n\t\treturn this;\n\t};\n\n\tConstantSourceNode.prototype.disconnect = function(){\n\t\tthis._output.disconnect.apply(this._output, arguments);\n\t\treturn this;\n\t};\n\n\tAudioContext.prototype.createConstantSource = function(){\n\t\treturn new ConstantSourceNode(this);\n\t};\n\n\tTone.Context.prototype.createConstantSource = function(){\n\t\treturn new ConstantSourceNode(this);\n\t};\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/Param\";\nimport \"../signal/SignalBase\";\nimport \"../shim/ConstantSourceNode\";\n\n/**\n *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n *          has all of the methods available to native Web Audio\n *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n *          as well as additional conveniences. Read more about working with signals\n *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n *  @constructor\n *  @extends {Tone.Param}\n *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n *                                     is passed in, that parameter will be wrapped\n *                                     and controlled by the Signal.\n *  @param {string} [units=Number] unit The units the signal is in.\n *  @example\n * var signal = new Tone.Signal(10);\n */\nTone.Signal = function(){\n\n\tvar options = Tone.defaults(arguments, [\"value\", \"units\"], Tone.Signal);\n\tTone.Param.call(this, options);\n\n\t/**\n\t * The constant source node which generates the signal\n\t * @type {ConstantSourceNode}\n\t * @private\n\t */\n\tthis._constantSource = this.context.createConstantSource();\n\tthis._constantSource.start(0);\n\tthis._param = this._constantSource.offset;\n\tthis.value = options.value;\n\n\t/**\n\t * The node where the constant signal value is scaled.\n\t * @type {ConstantSourceNode}\n\t * @private\n\t */\n\tthis.output = this._constantSource;\n\n\t/**\n\t * The node where the value is set.\n\t * @type {Tone.Param}\n\t * @private\n\t */\n\tthis.input = this._param = this.output.offset;\n};\n\nTone.extend(Tone.Signal, Tone.Param);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @static\n *  @const\n */\nTone.Signal.defaults = {\n\t\"value\" : 0,\n\t\"units\" : Tone.Type.Default,\n\t\"convert\" : true,\n};\n\n//use SignalBase's connect/disconnect methods\nTone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\nTone.Signal.prototype.disconnect = Tone.SignalBase.prototype.disconnect;\n\n/**\n * Return the current signal value at the given time.\n * @param  {Time} time When to get the signal value\n * @return {Number}\n */\nTone.Signal.prototype.getValueAtTime = function(time){\n\tif (this._param.getValueAtTime){\n\t\treturn this._param.getValueAtTime(time);\n\t} else {\n\t\treturn Tone.Param.prototype.getValueAtTime.call(this, time);\n\t}\n};\n\n/**\n *  dispose and disconnect\n *  @returns {Tone.Signal} this\n */\nTone.Signal.prototype.dispose = function(){\n\tTone.Param.prototype.dispose.call(this);\n\tthis._constantSource.stop();\n\tthis._constantSource.disconnect();\n\tthis._constantSource = null;\n\treturn this;\n};\n\nexport default Tone.Signal;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class A thin wrapper around the Native Web Audio GainNode.\n *         The GainNode is a basic building block of the Web Audio\n *         API and is useful for routing audio and adjusting gains.\n *  @extends {Tone.AudioNode}\n *  @param  {Number=}  gain  The initial gain of the GainNode\n *  @param {Tone.Type=} units The units of the gain parameter.\n */\nTone.Gain = function(){\n\n\tvar options = Tone.defaults(arguments, [\"gain\", \"units\"], Tone.Gain);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The GainNode\n\t *  @type  {GainNode}\n\t *  @private\n\t */\n\tthis.input = this.output = this._gainNode = this.context.createGain();\n\n\t/**\n\t *  The gain parameter of the gain node.\n\t *  @type {Gain}\n\t *  @signal\n\t */\n\tthis.gain = new Tone.Param({\n\t\t\"param\" : this._gainNode.gain,\n\t\t\"units\" : options.units,\n\t\t\"value\" : options.gain,\n\t\t\"convert\" : options.convert\n\t});\n\tthis._readOnly(\"gain\");\n};\n\nTone.extend(Tone.Gain, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Gain.defaults = {\n\t\"gain\" : 1,\n\t\"convert\" : true,\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Gain}  this\n */\nTone.Gain.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._gainNode.disconnect();\n\tthis._gainNode = null;\n\tthis._writable(\"gain\");\n\tthis.gain.dispose();\n\tthis.gain = null;\n};\n\nexport default Tone.Gain;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Time\";\nimport \"../type/Frequency\";\nimport \"../type/TransportTime\";\nimport \"../core/Context\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTYPES\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * Units which a value can take on.\n * @enum {String}\n */\nTone.Type = {\n\t/**\n\t *  Default units\n\t *  @typedef {Default}\n\t */\n\tDefault : \"number\",\n\t/**\n\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t *\n\t *  * Numbers, which will be taken literally as the time (in seconds).\n\t *  * Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.\n\t *  * TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times\n\t *  in the form BARS:QUARTERS:SIXTEENTHS.\n\t *  * Frequency, (\"8hz\") is converted to the length of the cycle in seconds.\n\t *  * Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as\n\t *  \"the current time plus whatever expression follows\".\n\t *  * Object, ({\"4n\" : 3, \"8t\" : -1}). The resulting time is equal to the sum of all of the keys multiplied by the values in the object. \n\t *  * No Argument, for methods which accept time, no argument will be interpreted as\n\t *  \"now\" (i.e. the currentTime).\n\t *\n\t *  @typedef {Time}\n\t */\n\tTime : \"time\",\n\t/**\n\t *  Frequency can be described similar to time, except ultimately the\n\t *  values are converted to frequency instead of seconds. A number\n\t *  is taken literally as the value in hertz. Additionally any of the\n\t *  Time encodings can be used. Note names in the form\n\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t *  frequency value.\n\t *  @typedef {Frequency}\n\t */\n\tFrequency : \"frequency\",\n\t/**\n\t *  TransportTime describes a position along the Transport's timeline. It is\n\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable.\n\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t *  @typedef {TransportTime}\n\t */\n\tTransportTime : \"transportTime\",\n\t/**\n\t *  Ticks are the basic subunit of the Transport. They are\n\t *  the smallest unit of time that the Transport supports.\n\t *  @typedef {Ticks}\n\t */\n\tTicks : \"ticks\",\n\t/**\n\t *  Normal values are within the range [0, 1].\n\t *  @typedef {NormalRange}\n\t */\n\tNormalRange : \"normalRange\",\n\t/**\n\t *  AudioRange values are between [-1, 1].\n\t *  @typedef {AudioRange}\n\t */\n\tAudioRange : \"audioRange\",\n\t/**\n\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t *  because of the logarithmic way that we perceive loudness. 0 decibels\n\t *  means no change in volume. -10db is approximately half as loud and 10db\n\t *  is twice is loud.\n\t *  @typedef {Decibels}\n\t */\n\tDecibels : \"db\",\n\t/**\n\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t *  @typedef {Interval}\n\t */\n\tInterval : \"interval\",\n\t/**\n\t *  Beats per minute.\n\t *  @typedef {BPM}\n\t */\n\tBPM : \"bpm\",\n\t/**\n\t *  The value must be greater than or equal to 0.\n\t *  @typedef {Positive}\n\t */\n\tPositive : \"positive\",\n\t/**\n\t *  Gain is the ratio between input and output of a signal.\n\t *  A gain of 0 is the same as silencing the signal. A gain of\n\t *  1, causes no change to the incoming signal.\n\t *  @typedef {Gain}\n\t */\n\tGain : \"gain\",\n\t/**\n\t *  A cent is a hundredth of a semitone.\n\t *  @typedef {Cents}\n\t */\n\tCents : \"cents\",\n\t/**\n\t *  Angle between 0 and 360.\n\t *  @typedef {Degrees}\n\t */\n\tDegrees : \"degrees\",\n\t/**\n\t *  A number representing a midi note.\n\t *  @typedef {MIDI}\n\t */\n\tMIDI : \"midi\",\n\t/**\n\t *  A colon-separated representation of time in the form of\n\t *  Bars:Beats:Sixteenths.\n\t *  @typedef {BarsBeatsSixteenths}\n\t */\n\tBarsBeatsSixteenths : \"barsBeatsSixteenths\",\n\t/**\n\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t *  Audio is typically sampled 44100 times per second.\n\t *  @typedef {Samples}\n\t */\n\tSamples : \"samples\",\n\t/**\n\t *  Hertz are a frequency representation defined as one cycle per second.\n\t *  @typedef {Hertz}\n\t */\n\tHertz : \"hertz\",\n\t/**\n\t *  A frequency represented by a letter name,\n\t *  accidental and octave. This system is known as\n\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t *  @typedef {Note}\n\t */\n\tNote : \"note\",\n\t/**\n\t *  One millisecond is a thousandth of a second.\n\t *  @typedef {Milliseconds}\n\t */\n\tMilliseconds : \"milliseconds\",\n\t/**\n\t *  Seconds are the time unit of the AudioContext. In the end,\n\t *  all values need to be evaluated to seconds.\n\t *  @typedef {Seconds}\n\t */\n\tSeconds : \"seconds\",\n\t/**\n\t *  A string representing a duration relative to a measure.\n\t *  * \"4n\" = quarter note\n\t *  * \"2m\" = two measures\n\t *  * \"8t\" = eighth-note triplet\n\t *  @typedef {Notation}\n\t */\n\tNotation : \"notation\",\n};\n\n///////////////////////////////////////////////////////////////////////////\n// AUGMENT TONE's PROTOTYPE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Convert Time into seconds.\n *\n *  Unlike the method which it overrides, this takes into account\n *  transporttime and musical notation.\n *\n *  Time : 1.40\n *  Notation: 4n or 1m or 2t\n *  Now Relative: +3n\n *\n *  @param  {Time} time\n *  @return {Seconds}\n */\nTone.prototype.toSeconds = function(time){\n\tif (Tone.isNumber(time)){\n\t\treturn time;\n\t} else if (Tone.isUndef(time)){\n\t\treturn this.now();\n\t} else if (Tone.isString(time) || Tone.isObject(time)){\n\t\treturn (new Tone.Time(time)).toSeconds();\n\t} else if (time instanceof Tone.TimeBase){\n\t\treturn time.toSeconds();\n\t}\n};\n\n/**\n *  Convert a frequency representation into a number.\n *  @param  {Frequency} freq\n *  @return {Hertz}      the frequency in hertz\n */\nTone.prototype.toFrequency = function(freq){\n\tif (Tone.isNumber(freq)){\n\t\treturn freq;\n\t} else if (Tone.isString(freq) || Tone.isUndef(freq) || Tone.isObject(freq)){\n\t\treturn (new Tone.Frequency(freq)).valueOf();\n\t} else if (freq instanceof Tone.TimeBase){\n\t\treturn freq.toFrequency();\n\t}\n};\n\n/**\n *  Convert a time representation into ticks.\n *  @param  {Time} time\n *  @return {Ticks}  the time in ticks\n */\nTone.prototype.toTicks = function(time){\n\tif (Tone.isNumber(time) || Tone.isString(time) || Tone.isObject(time)){\n\t\treturn (new Tone.TransportTime(time)).toTicks();\n\t} else if (Tone.isUndef(time)){\n\t\treturn Tone.Transport.ticks;\n\t} else if (time instanceof Tone.TimeBase){\n\t\treturn time.toTicks();\n\t}\n};\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/Gain\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class  Multiply two incoming signals. Or, if a number is given in the constructor,\n *          multiplies the incoming signal by that value.\n *\n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number=} value Constant value to multiple. If no value is provided,\n *                         it will return the product of the first and second inputs\n *  @example\n * var mult = new Tone.Multiply();\n * var sigA = new Tone.Signal(3);\n * var sigB = new Tone.Signal(4);\n * sigA.connect(mult, 0, 0);\n * sigB.connect(mult, 0, 1);\n * //output of mult is 12.\n *  @example\n * var mult = new Tone.Multiply(10);\n * var sig = new Tone.Signal(2).connect(mult);\n * //the output of mult is 20.\n */\nTone.Multiply = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the input node is the same as the output node\n\t *  it is also the GainNode which handles the scaling of incoming signal\n\t *\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._mult = this.input[0] = this.output = new Tone.Gain();\n\n\t/**\n\t *  the scaling parameter\n\t *  @type {AudioParam}\n\t *  @private\n\t */\n\tthis._param = this.input[1] = this.output.gain;\n\tthis.value = Tone.defaultArg(value, 0);\n};\n\nTone.extend(Tone.Multiply, Tone.Signal);\n\n/**\n *  clean up\n *  @returns {Tone.Multiply} this\n */\nTone.Multiply.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._mult.dispose();\n\tthis._mult = null;\n\tthis._param = null;\n\treturn this;\n};\n\nexport default Tone.Multiply;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../component/Volume\";\nimport \"../core/Master\";\nimport \"../type/Type\";\nimport \"../core/TimelineState\";\nimport \"../signal/Signal\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Base class for sources. Sources have start/stop methods\n *          and the ability to be synced to the\n *          start/stop of Tone.Transport.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @example\n * //Multiple state change events can be chained together,\n * //but must be set in the correct order and with ascending times\n *\n * // OK\n * state.start().stop(\"+0.2\");\n * // AND\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n *\n * // BAD\n * state.stop(\"+0.2\").start();\n * // OR\n * state.start(\"+0.3\").stop(\"+0.2\");\n *\n */\nTone.Source = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.Source.defaults);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t/**\n\t * \tKeep track of the scheduled state.\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\tthis._state.memory = 100;\n\n\t/**\n\t *  The synced `start` callback function from the transport\n\t *  @type {Function}\n\t *  @private\n\t */\n\tthis._synced = false;\n\n\t/**\n\t *  Keep track of all of the scheduled event ids\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._scheduled = [];\n\n\t//make the output explicitly stereo\n\tthis._volume.output.output.channelCount = 2;\n\tthis._volume.output.output.channelCountMode = \"explicit\";\n\t//mute initially\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.Source, Tone.AudioNode);\n\n/**\n *  The default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Source.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Source#\n *  @name state\n */\nObject.defineProperty(Tone.Source.prototype, \"state\", {\n\tget : function(){\n\t\tif (this._synced){\n\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\treturn this._state.getValueAtTime(Tone.Transport.seconds);\n\t\t\t} else {\n\t\t\t\treturn Tone.State.Stopped;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._state.getValueAtTime(this.now());\n\t\t}\n\t}\n});\n\n/**\n * Mute the output.\n * @memberOf Tone.Source#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * source.mute = true;\n */\nObject.defineProperty(Tone.Source.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n//overwrite these functions\nTone.Source.prototype._start = Tone.noOp;\nTone.Source.prototype.restart = Tone.noOp;\nTone.Source.prototype._stop = Tone.noOp;\n\n/**\n *  Start the source at the specified time. If no time is given,\n *  start the source now.\n *  @param  {Time} [time=now] When the source should be started.\n *  @returns {Tone.Source} this\n *  @example\n * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n */\nTone.Source.prototype.start = function(time, offset, duration){\n\tif (Tone.isUndef(time) && this._synced){\n\t\ttime = Tone.Transport.seconds;\n\t} else {\n\t\ttime = this.toSeconds(time);\n\t\ttime = Math.max(time, this.context.currentTime);\n\t}\n\t//if it's started, stop it and restart it\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.cancel(time);\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tthis.restart(time, offset, duration);\n\t} else {\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tif (this._synced){\n\t\t\t// add the offset time to the event\n\t\t\tvar event = this._state.get(time);\n\t\t\tevent.offset = Tone.defaultArg(offset, 0);\n\t\t\tevent.duration = duration;\n\t\t\tvar sched = Tone.Transport.schedule(function(t){\n\t\t\t\tthis._start(t, offset, duration);\n\t\t\t}.bind(this), time);\n\t\t\tthis._scheduled.push(sched);\n\n\t\t\t//if it's already started\n\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\tthis._syncedStart(this.now(), Tone.Transport.seconds);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._start.apply(this, arguments);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the source at the specified time. If no time is given,\n *  stop the source now.\n *  @param  {Time} [time=now] When the source should be stopped.\n *  @returns {Tone.Source} this\n *  @example\n * source.stop(); // stops the source immediately\n */\nTone.Source.prototype.stop = function(time){\n\tif (Tone.isUndef(time) && this._synced){\n\t\ttime = Tone.Transport.seconds;\n\t} else {\n\t\ttime = this.toSeconds(time);\n\t\ttime = Math.max(time, this.context.currentTime);\n\t}\n\tif (!this._synced){\n\t\tthis._stop.apply(this, arguments);\n\t} else {\n\t\tvar sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t\tthis._scheduled.push(sched);\n\t}\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\treturn this;\n};\n\n/**\n *  Sync the source to the Transport so that all subsequent\n *  calls to `start` and `stop` are synced to the TransportTime\n *  instead of the AudioContext time.\n *\n *  @returns {Tone.Source} this\n *  @example\n * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n * source.sync().start(0).stop(0.3);\n * //start the transport.\n * Tone.Transport.start();\n *\n *  @example\n * //start the transport with an offset and the sync'ed sources\n * //will start in the correct position\n * source.sync().start(0.1);\n * //the source will be invoked with an offset of 0.4\n * Tone.Transport.start(\"+0.5\", 0.5);\n */\nTone.Source.prototype.sync = function(){\n\tthis._synced = true;\n\tthis._syncedStart = function(time, offset){\n\t\tif (offset > 0){\n\t\t\t// get the playback state at that time\n\t\t\tvar stateEvent = this._state.get(offset);\n\t\t\t// listen for start events which may occur in the middle of the sync'ed time\n\t\t\tif (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset){\n\t\t\t\t// get the offset\n\t\t\t\tvar startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t\t\tvar duration;\n\t\t\t\tif (stateEvent.duration){\n\t\t\t\t\tduration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t\t\t}\n\t\t\t\tthis._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t\t}\n\t\t}\n\t}.bind(this);\n\tthis._syncedStop = function(time){\n\t\tvar seconds = Tone.Transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n\t\tif (this._state.getValueAtTime(seconds) === Tone.State.Started){\n\t\t\tthis._stop(time);\n\t\t}\n\t}.bind(this);\n\tTone.Transport.on(\"start loopStart\", this._syncedStart);\n\tTone.Transport.on(\"stop pause loopEnd\", this._syncedStop);\n\treturn this;\n};\n\n/**\n *  Unsync the source to the Transport. See Tone.Source.sync\n *  @returns {Tone.Source} this\n */\nTone.Source.prototype.unsync = function(){\n\tif (this._synced){\n\t\tTone.Transport.off(\"stop pause loopEnd\", this._syncedStop);\n\t\tTone.Transport.off(\"start loopStart\", this._syncedStart);\n\t}\n\tthis._synced = false;\n\t// clear all of the scheduled ids\n\tfor (var i = 0; i < this._scheduled.length; i++){\n\t\tvar id = this._scheduled[i];\n\t\tTone.Transport.clear(id);\n\t}\n\tthis._scheduled = [];\n\tthis._state.cancel(0);\n\treturn this;\n};\n\n/**\n *\tClean up.\n *  @return {Tone.Source} this\n */\nTone.Source.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.unsync();\n\tthis._scheduled = null;\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\tthis._state.dispose();\n\tthis._state = null;\n};\n\nexport default Tone.Source;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype._native_createWaveShaper){\n\n\t//fixes safari only bug which is still present in 11\n\tvar ua = navigator.userAgent.toLowerCase();\n\tvar isSafari = ua.includes(\"safari\") && !ua.includes(\"chrome\");\n\tif (isSafari){\n\n\t\tvar WaveShaperNode = function(context){\n\n\t\t\tthis._internalNode = this.input = this.output = context._native_createWaveShaper();\n\n\t\t\tthis._curve = null;\n\n\t\t\tfor (var prop in this._internalNode){\n\t\t\t\tthis._defineProperty(this._internalNode, prop);\n\t\t\t}\n\t\t};\n\n\t\tObject.defineProperty(WaveShaperNode.prototype, \"curve\", {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn this._curve;\n\t\t\t},\n\t\t\t\"set\" : function(curve){\n\t\t\t\tthis._curve = curve;\n\t\t\t\tvar array = new Float32Array(curve.length+1);\n\t\t\t\tarray.set(curve, 1);\n\t\t\t\tarray[0] = curve[0];\n\t\t\t\tthis._internalNode.curve = array;\n\t\t\t}\n\t\t});\n\n\t\tWaveShaperNode.prototype._defineProperty = function(context, prop){\n\t\t\tif (Tone.isUndef(this[prop])){\n\t\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\t\t\"get\" : function(){\n\t\t\t\t\t\tif (typeof context[prop] === \"function\"){\n\t\t\t\t\t\t\treturn context[prop].bind(context);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn context[prop];\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"set\" : function(val){\n\t\t\t\t\t\tcontext[prop] = val;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tTone.global.AudioContext.prototype._native_createWaveShaper = Tone.global.AudioContext.prototype.createWaveShaper;\n\t\tTone.global.AudioContext.prototype.createWaveShaper = function(){\n\t\t\treturn new WaveShaperNode(this);\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/SignalBase\";\nimport \"../shim/WaveShaperNode\";\n\n/**\n *  @class Wraps the native Web Audio API\n *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {function|Array|Number} mapping The function used to define the values.\n *                                    The mapping function should take two arguments:\n *                                    the first is the value at the current position\n *                                    and the second is the array position.\n *                                    If the argument is an array, that array will be\n *                                    set as the wave shaping function. The input\n *                                    signal is an AudioRange [-1, 1] value and the output\n *                                    signal can take on any numerical values.\n *\n *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n *  @example\n * var timesTwo = new Tone.WaveShaper(function(val){\n * \treturn val * 2;\n * }, 2048);\n *  @example\n * //a waveshaper can also be constructed with an array of values\n * var invert = new Tone.WaveShaper([1, -1]);\n */\nTone.WaveShaper = function(mapping, bufferLen){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  the waveshaper\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._shaper = this.input = this.output = this.context.createWaveShaper();\n\n\t/**\n\t *  the waveshapers curve\n\t *  @type {Float32Array}\n\t *  @private\n\t */\n\tthis._curve = null;\n\n\tif (Array.isArray(mapping)){\n\t\tthis.curve = mapping;\n\t} else if (isFinite(mapping) || Tone.isUndef(mapping)){\n\t\tthis._curve = new Float32Array(Tone.defaultArg(mapping, 1024));\n\t} else if (Tone.isFunction(mapping)){\n\t\tthis._curve = new Float32Array(Tone.defaultArg(bufferLen, 1024));\n\t\tthis.setMap(mapping);\n\t}\n};\n\nTone.extend(Tone.WaveShaper, Tone.SignalBase);\n\n/**\n *  Uses a mapping function to set the value of the curve.\n *  @param {function} mapping The function used to define the values.\n *                            The mapping function take two arguments:\n *                            the first is the value at the current position\n *                            which goes from -1 to 1 over the number of elements\n *                            in the curve array. The second argument is the array position.\n *  @returns {Tone.WaveShaper} this\n *  @example\n * //map the input signal from [-1, 1] to [0, 10]\n * shaper.setMap(function(val, index){\n * \treturn (val + 1) * 5;\n * })\n */\nTone.WaveShaper.prototype.setMap = function(mapping){\n\tvar array = new Array(this._curve.length);\n\tfor (var i = 0, len = this._curve.length; i < len; i++){\n\t\tvar normalized = (i / (len - 1)) * 2 - 1;\n\t\tarray[i] = mapping(normalized, i);\n\t}\n\tthis.curve = array;\n\treturn this;\n};\n\n/**\n * The array to set as the waveshaper curve. For linear curves\n * array length does not make much difference, but for complex curves\n * longer arrays will provide smoother interpolation.\n * @memberOf Tone.WaveShaper#\n * @type {Array}\n * @name curve\n */\nObject.defineProperty(Tone.WaveShaper.prototype, \"curve\", {\n\tget : function(){\n\t\treturn this._shaper.curve;\n\t},\n\tset : function(mapping){\n\t\tthis._curve = new Float32Array(mapping);\n\t\tthis._shaper.curve = this._curve;\n\t}\n});\n\n/**\n * Specifies what type of oversampling (if any) should be used when\n * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.WaveShaper#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.WaveShaper.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tif ([\"none\", \"2x\", \"4x\"].includes(oversampling)){\n\t\t\tthis._shaper.oversample = oversampling;\n\t\t} else {\n\t\t\tthrow new RangeError(\"Tone.WaveShaper: oversampling must be either 'none', '2x', or '4x'\");\n\t\t}\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.WaveShaper} this\n */\nTone.WaveShaper.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._shaper.disconnect();\n\tthis._shaper = null;\n\tthis._curve = null;\n\treturn this;\n};\n\nexport default Tone.WaveShaper;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../core/AudioNode\";\n\n/**\n * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n * \t        the effectSend and effectReturn GainNodes, then control the amount of\n * \t        effect which goes to the output using the wet control.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {NormalRange|Object} [wet] The starting wet value.\n */\nTone.Effect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"wet\"], Tone.Effect);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the drywet knob to control the amount of effect\n\t *  @type {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._dryWet = new Tone.CrossFade(options.wet);\n\n\t/**\n\t *  The wet control is how much of the effected\n\t *  will pass through to the output. 1 = 100% effected\n\t *  signal, 0 = 100% dry signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.wet = this._dryWet.fade;\n\n\t/**\n\t *  connect the effectSend to the input of hte effect\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.effectSend = new Tone.Gain();\n\n\t/**\n\t *  connect the output of the effect to the effectReturn\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.effectReturn = new Tone.Gain();\n\n\t//connections\n\tTone.connect(this.input, this._dryWet.a);\n\tTone.connect(this.input, this.effectSend);\n\tthis.effectReturn.connect(this._dryWet.b);\n\tthis._dryWet.connect(this.output);\n\tthis._readOnly([\"wet\"]);\n};\n\nTone.extend(Tone.Effect, Tone.AudioNode);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Effect.defaults = {\n\t\"wet\" : 1\n};\n\n/**\n *  chains the effect in between the effectSend and effectReturn\n *  @param  {Tone} effect\n *  @private\n *  @returns {Tone.Effect} this\n */\nTone.Effect.prototype.connectEffect = function(effect){\n\tthis.effectSend.chain(effect, this.effectReturn);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Effect} this\n */\nTone.Effect.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._dryWet.dispose();\n\tthis._dryWet = null;\n\tthis.effectSend.dispose();\n\tthis.effectSend = null;\n\tthis.effectReturn.dispose();\n\tthis.effectReturn = null;\n\tthis._writable([\"wet\"]);\n\tthis.wet = null;\n\treturn this;\n};\n\nexport default Tone.Effect;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Filter is a filter which allows for all of the same native methods\n *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n *          Tone.Filter has the added ability to set the filter rolloff at -12\n *          (default), -24 and -48.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n *  @param {string=} type The type of filter.\n *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n *                            3 choices: -12, -24, and -48\n *  @example\n *  var filter = new Tone.Filter(200, \"highpass\");\n */\nTone.Filter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"rolloff\"], Tone.Filter);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the filter(s)\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filters = [];\n\n\t/**\n\t *  The cutoff frequency of the filter.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune parameter\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(0, Tone.Type.Cents);\n\n\t/**\n\t *  The gain of the filter, only used in certain filter types\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.gain = new Tone.Signal({\n\t\t\"value\" : options.gain,\n\t\t\"convert\" : true,\n\t\t\"type\" : Tone.Type.Decibels\n\t});\n\n\t/**\n\t *  The Q or Quality of the filter\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q);\n\n\t/**\n\t *  the type of the filter\n\t *  @type {string}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  the rolloff value of the filter\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._rolloff = options.rolloff;\n\n\t//set the rolloff;\n\tthis.rolloff = options.rolloff;\n\tthis._readOnly([\"detune\", \"frequency\", \"gain\", \"Q\"]);\n};\n\nTone.extend(Tone.Filter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @type {Object}\n */\nTone.Filter.defaults = {\n\t\"type\" : \"lowpass\",\n\t\"frequency\" : 350,\n\t\"rolloff\" : -12,\n\t\"Q\" : 1,\n\t\"gain\" : 0,\n};\n\n/**\n * The type of the filter. Types: \"lowpass\", \"highpass\",\n * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n * @memberOf Tone.Filter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Filter.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tvar types = [\"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n\t\tif (types.indexOf(type)=== -1){\n\t\t\tthrow new TypeError(\"Tone.Filter: invalid type \"+type);\n\t\t}\n\t\tthis._type = type;\n\t\tfor (var i = 0; i < this._filters.length; i++){\n\t\t\tthis._filters[i].type = type;\n\t\t}\n\t}\n});\n\n/**\n * The rolloff of the filter which is the drop in db\n * per octave. Implemented internally by cascading filters.\n * Only accepts the values -12, -24, -48 and -96.\n * @memberOf Tone.Filter#\n * @type {number}\n * @name rolloff\n */\nObject.defineProperty(Tone.Filter.prototype, \"rolloff\", {\n\tget : function(){\n\t\treturn this._rolloff;\n\t},\n\tset : function(rolloff){\n\t\trolloff = parseInt(rolloff, 10);\n\t\tvar possibilities = [-12, -24, -48, -96];\n\t\tvar cascadingCount = possibilities.indexOf(rolloff);\n\t\t//check the rolloff is valid\n\t\tif (cascadingCount === -1){\n\t\t\tthrow new RangeError(\"Tone.Filter: rolloff can only be -12, -24, -48 or -96\");\n\t\t}\n\t\tcascadingCount += 1;\n\t\tthis._rolloff = rolloff;\n\t\t//first disconnect the filters and throw them away\n\t\tthis.input.disconnect();\n\t\tfor (var i = 0; i < this._filters.length; i++){\n\t\t\tthis._filters[i].disconnect();\n\t\t\tthis._filters[i] = null;\n\t\t}\n\t\tthis._filters = new Array(cascadingCount);\n\t\tfor (var count = 0; count < cascadingCount; count++){\n\t\t\tvar filter = this.context.createBiquadFilter();\n\t\t\tfilter.type = this._type;\n\t\t\tthis.frequency.connect(filter.frequency);\n\t\t\tthis.detune.connect(filter.detune);\n\t\t\tthis.Q.connect(filter.Q);\n\t\t\tthis.gain.connect(filter.gain);\n\t\t\tthis._filters[count] = filter;\n\t\t}\n\t\t//connect them up\n\t\tvar connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t\tTone.connectSeries.apply(Tone, connectionChain);\n\t}\n});\n\n/**\n * Get the frequency response curve. This curve represets how the filter\n * responses to frequencies between 20hz-20khz. \n * @param  {Number} [len=128] The number of values to return\n * @return {Float32Array}     The frequency response curve between 20-20k\n */\nTone.Filter.prototype.getFrequencyResponse = function(len){\n\tlen = Tone.defaultArg(len, 128);\n\t//start with all 1s\n\tvar totalResponse = new Float32Array(len).map(function(){\n\t\treturn 1;\n\t});\n\tvar freqValues = new Float32Array(len);\n\tfor (var i = 0; i < len; i++){\n\t\tconst norm = Math.pow(i / len, 2);\n\t\tvar freq = norm * (20000 - 20) + 20;\n\t\tfreqValues[i] = freq;\n\t}\n\tvar magValues = new Float32Array(len);\n\tvar phaseValues = new Float32Array(len);\n\tthis._filters.forEach(function(){\n\t\tvar filterClone = this.context.createBiquadFilter();\n\t\tfilterClone.type = this._type;\n\t\tfilterClone.Q.value = this.Q.value;\n\t\tfilterClone.frequency.value = this.frequency.value;\n\t\tfilterClone.gain.value = this.gain.value;\n\t\tfilterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n\t\tmagValues.forEach(function(val, i){\n\t\t\ttotalResponse[i] *= val;\n\t\t});\n\t}.bind(this));\n\treturn totalResponse;\n};\n\n/**\n *  Clean up.\n *  @return {Tone.Filter} this\n */\nTone.Filter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tfor (var i = 0; i < this._filters.length; i++){\n\t\tthis._filters[i].disconnect();\n\t\tthis._filters[i] = null;\n\t}\n\tthis._filters = null;\n\tthis._writable([\"detune\", \"frequency\", \"gain\", \"Q\"]);\n\tthis.frequency.dispose();\n\tthis.Q.dispose();\n\tthis.frequency = null;\n\tthis.Q = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.gain.dispose();\n\tthis.gain = null;\n\treturn this;\n};\n\nexport default Tone.Filter;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Merge brings two signals into the left and right\n *          channels of a single stereo channel.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {number} [channels=2] The number of channels to merge. \n *  @example\n * var merge = new Tone.Merge().toMaster();\n * //routing a sine tone in the left channel\n * //and noise in the right channel\n * var osc = new Tone.Oscillator().connect(merge.left);\n * var noise = new Tone.Noise().connect(merge.right);\n * //starting our oscillators\n * noise.start();\n * osc.start();\n */\nTone.Merge = function(channels){\n\n\t//defaults to 2 channels\n\tchannels = Tone.defaultArg(channels, 2);\n\t\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(channels, 0);\n\n\t/**\n\t *  the merger node for the two channels\n\t *  @type {ChannelMergerNode}\n\t *  @private\n\t */\n\tthis._merger = this.output = this.context.createChannelMerger(channels);\n\n\t//connections\n\tfor (var i = 0; i < channels; i++){\n\t\tthis.input[i] = new Tone.Gain();\n\t\tthis.input[i].connect(this._merger, 0, i);\n\t\tthis.input[i].channelCount = 1;\n\t\tthis.input[i].channelCountMode = \"explicit\";\n\t}\n\n\t/**\n\t *  The left input channel.\n\t *  Alias for <code>input[0]</code>\n\t *  @type {GainNode}\n\t */\n\tthis.left = this.input[0];\n\n\t/**\n\t *  The right input channel.\n\t *  Alias for <code>input[1]</code>.\n\t *  @type {GainNode}\n\t */\n\tthis.right = this.input[1];\n};\n\nTone.extend(Tone.Merge, Tone.AudioNode);\n\n/**\n *  Clean up.\n *  @returns {Tone.Merge} this\n */\nTone.Merge.prototype.dispose = function(){\n\tthis.input.forEach(function(input){\n\t\tinput.dispose();\n\t});\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.left = null;\n\tthis.right = null;\n\tthis._merger.disconnect();\n\tthis._merger = null;\n\treturn this;\n};\n\nexport default Tone.Merge;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  AudioBuffer.copyTo/FromChannel polyfill\n *  @private\n */\nif (Tone.supported){\n\tif (!AudioBuffer.prototype.copyToChannel){\n\t\tAudioBuffer.prototype.copyToChannel = function(src, chanNum, start){\n\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\tstart = start || 0;\n\t\t\tfor (var i = 0; i < channel.length; i++){\n\t\t\t\tchannel[i+start] = src[i];\n\t\t\t}\n\t\t};\n\t\tAudioBuffer.prototype.copyFromChannel = function(dest, chanNum, start){\n\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\tstart = start || 0;\n\t\t\tfor (var i = 0; i < dest.length; i++){\n\t\t\t\tdest[i] = channel[i+start];\n\t\t\t}\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Emitter\";\nimport \"../type/Type\";\nimport \"../shim/AudioBuffer\";\n\n/**\n *  @class  Buffer loading and storage. Tone.Buffer is used internally by all\n *          classes that make requests for audio files such as Tone.Player,\n *          Tone.Sampler and Tone.Convolver.\n *\n *          Aside from load callbacks from individual buffers, Tone.Buffer\n *  \t\tprovides events which keep track of the loading progress\n *  \t\tof _all_ of the buffers. These are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n *\n *  @constructor\n *  @extends {Tone}\n *  @param {AudioBuffer|String} url The url to load, or the audio buffer to set.\n *  @param {Function=} onload A callback which is invoked after the buffer is loaded.\n *                            It's recommended to use `Tone.Buffer.on('load', callback)` instead\n *                            since it will give you a callback when _all_ buffers are loaded.\n *  @param {Function=} onerror The callback to invoke if there is an error\n *  @example\n * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n * \t//the buffer is now available.\n * \tvar buff = buffer.get();\n * });\n *  @example\n * //can load provide fallback extension types if the first type is not supported.\n * var buffer = new Tone.Buffer(\"path/to/sound.[mp3|ogg|wav]\");\n */\nTone.Buffer = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\", \"onerror\"], Tone.Buffer);\n\tTone.call(this);\n\n\t/**\n\t *  stores the loaded AudioBuffer\n\t *  @type {AudioBuffer}\n\t *  @private\n\t */\n\tthis._buffer = null;\n\n\t/**\n\t *  indicates if the buffer should be reversed or not\n\t *  @type {Boolean}\n\t *  @private\n\t */\n\tthis._reversed = options.reverse;\n\n\t/**\n\t *  The XHR\n\t *  @type  {XMLHttpRequest}\n\t *  @private\n\t */\n\tthis._xhr = null;\n\n\t/**\n\t * Private callback when the buffer is loaded.\n\t * @type {Function}\n\t * @private\n\t */\n\tthis.onload = Tone.noOp;\n\n\tif (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer){\n\t\tthis.set(options.url);\n\t\tif (!this.loaded){\n\t\t\tthis.onload = options.onload;\n\t\t}\n\t} else if (Tone.isString(options.url)){\n\t\tthis.load(options.url).then(options.onload).catch(options.onerror);\n\t}\n};\n\nTone.extend(Tone.Buffer);\n\n/**\n *  the default parameters\n *  @type {Object}\n */\nTone.Buffer.defaults = {\n\t\"url\" : undefined,\n\t\"reverse\" : false,\n\t\"onload\" : Tone.noOp,\n\t\"onerror\" : Tone.noOp\n};\n\n/**\n *  Pass in an AudioBuffer or Tone.Buffer to set the value\n *  of this buffer.\n *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n *  @returns {Tone.Buffer} this\n */\nTone.Buffer.prototype.set = function(buffer){\n\tif (buffer instanceof Tone.Buffer){\n\t\t//if it's loaded, set it\n\t\tif (buffer.loaded){\n\t\t\tthis._buffer = buffer.get();\n\t\t} else {\n\t\t\t//otherwise when it's loaded, invoke it's callback\n\t\t\tbuffer.onload = function(){\n\t\t\t\tthis.set(buffer);\n\t\t\t\tthis.onload(this);\n\t\t\t}.bind(this);\n\t\t}\n\t} else {\n\t\tthis._buffer = buffer;\n\t}\n\t//reverse it initially\n\tif (this._reversed){\n\t\tthis._reverse();\n\t}\n\treturn this;\n};\n\n/**\n *  @return {AudioBuffer} The audio buffer stored in the object.\n */\nTone.Buffer.prototype.get = function(){\n\treturn this._buffer;\n};\n\n/**\n *  Makes an xhr reqest for the selected url then decodes\n *  the file as an audio buffer. Invokes\n *  the callback once the audio buffer loads.\n *  @param {String} url The url of the buffer to load.\n *                      filetype support depends on the\n *                      browser.\n *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n */\nTone.Buffer.prototype.load = function(url, onload, onerror){\n\n\tvar promise = new Promise(function(load, error){\n\n\t\tthis._xhr = Tone.Buffer.load(url,\n\n\t\t\t//success\n\t\t\tfunction(buff){\n\t\t\t\tthis._xhr = null;\n\t\t\t\tthis.set(buff);\n\t\t\t\tload(this);\n\t\t\t\tthis.onload(this);\n\t\t\t\tif (onload){\n\t\t\t\t\tonload(this);\n\t\t\t\t}\n\t\t\t}.bind(this),\n\n\t\t\t//error\n\t\t\tfunction(err){\n\t\t\t\tthis._xhr = null;\n\t\t\t\terror(err);\n\t\t\t\tif (onerror){\n\t\t\t\t\tonerror(err);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\n\t}.bind(this));\n\n\treturn promise;\n};\n\n/**\n *  dispose and disconnect\n *  @returns {Tone.Buffer} this\n */\nTone.Buffer.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._buffer = null;\n\tif (this._xhr){\n\t\tTone.Buffer._removeFromDownloadQueue(this._xhr);\n\t\tthis._xhr.abort();\n\t\tthis._xhr = null;\n\t}\n\treturn this;\n};\n\n/**\n * If the buffer is loaded or not\n * @memberOf Tone.Buffer#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"loaded\", {\n\t\"get\" : function(){\n\t\treturn this.length > 0;\n\t},\n});\n\n/**\n * The duration of the buffer.\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name duration\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"duration\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.duration;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n * The length of the buffer in samples\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name length\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"length\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.length;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n * The number of discrete audio channels. Returns 0 if no buffer\n * is loaded.\n * @memberOf Tone.Buffer#\n * @type {Number}\n * @name numberOfChannels\n * @readOnly\n */\nObject.defineProperty(Tone.Buffer.prototype, \"numberOfChannels\", {\n\t\"get\" : function(){\n\t\tif (this._buffer){\n\t\t\treturn this._buffer.numberOfChannels;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n});\n\n/**\n *  Set the audio buffer from the array. To create a multichannel AudioBuffer,\n *  pass in a multidimensional array.\n *  @param {Float32Array} array The array to fill the audio buffer\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype.fromArray = function(array){\n\tvar isMultidimensional = array[0].length > 0;\n\tvar channels = isMultidimensional ? array.length : 1;\n\tvar len = isMultidimensional ? array[0].length : array.length;\n\tvar buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\tif (!isMultidimensional && channels === 1){\n\t\tarray = [array];\n\t}\n\tfor (var c = 0; c < channels; c++){\n\t\tbuffer.copyToChannel(array[c], c);\n\t}\n\tthis._buffer = buffer;\n\treturn this;\n};\n\n/**\n * \tSums muliple channels into 1 channel\n *  @param {Number=} channel Optionally only copy a single channel from the array.\n *  @return {Array}\n */\nTone.Buffer.prototype.toMono = function(chanNum){\n\tif (Tone.isNumber(chanNum)){\n\t\tthis.fromArray(this.toArray(chanNum));\n\t} else {\n\t\tvar outputArray = new Float32Array(this.length);\n\t\tvar numChannels = this.numberOfChannels;\n\t\tfor (var channel = 0; channel < numChannels; channel++){\n\t\t\tvar channelArray = this.toArray(channel);\n\t\t\tfor (var i = 0; i < channelArray.length; i++){\n\t\t\t\toutputArray[i] += channelArray[i];\n\t\t\t}\n\t\t}\n\t\t//divide by the number of channels\n\t\toutputArray = outputArray.map(function(sample){\n\t\t\treturn sample / numChannels;\n\t\t});\n\t\tthis.fromArray(outputArray);\n\t}\n\treturn this;\n};\n\n/**\n * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional\n * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n *  @param {Number=} channel Optionally only copy a single channel from the array.\n *  @return {Array}\n */\nTone.Buffer.prototype.toArray = function(channel){\n\tif (Tone.isNumber(channel)){\n\t\treturn this.getChannelData(channel);\n\t} else if (this.numberOfChannels === 1){\n\t\treturn this.toArray(0);\n\t} else {\n\t\tvar ret = [];\n\t\tfor (var c = 0; c < this.numberOfChannels; c++){\n\t\t\tret[c] = this.getChannelData(c);\n\t\t}\n\t\treturn ret;\n\t}\n};\n\n/**\n *  Returns the Float32Array representing the PCM audio data for the specific channel.\n *  @param  {Number}  channel  The channel number to return\n *  @return  {Float32Array}  The audio as a TypedArray\n */\nTone.Buffer.prototype.getChannelData = function(channel){\n\treturn this._buffer.getChannelData(channel);\n};\n\n/**\n *  Cut a subsection of the array and return a buffer of the\n *  subsection. Does not modify the original buffer\n *  @param {Time} start The time to start the slice\n *  @param {Time=} end The end time to slice. If none is given\n *                     will default to the end of the buffer\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype.slice = function(start, end){\n\tend = Tone.defaultArg(end, this.duration);\n\tvar startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\tvar endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\tvar replacement = [];\n\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\treplacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t}\n\tvar retBuffer = new Tone.Buffer().fromArray(replacement);\n\treturn retBuffer;\n};\n\n/**\n *  Reverse the buffer.\n *  @private\n *  @return {Tone.Buffer} this\n */\nTone.Buffer.prototype._reverse = function(){\n\tif (this.loaded){\n\t\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\t\tArray.prototype.reverse.call(this.getChannelData(i));\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n * Reverse the buffer.\n * @memberOf Tone.Buffer#\n * @type {Boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.Buffer.prototype, \"reverse\", {\n\t\"get\" : function(){\n\t\treturn this._reversed;\n\t},\n\t\"set\" : function(rev){\n\t\tif (this._reversed !== rev){\n\t\t\tthis._reversed = rev;\n\t\t\tthis._reverse();\n\t\t}\n\t},\n});\n\n///////////////////////////////////////////////////////////////////////////\n// STATIC METHODS\n///////////////////////////////////////////////////////////////////////////\n\n//statically inherits Emitter methods\nTone.Emitter.mixin(Tone.Buffer);\n\n/**\n *  the static queue for all of the xhr requests\n *  @type {Array}\n *  @private\n */\nTone.Buffer._downloadQueue = [];\n\n/**\n *  A path which is prefixed before every url.\n *  @type  {String}\n *  @static\n */\nTone.Buffer.baseUrl = \"\";\n\n/**\n *  Create a Tone.Buffer from the array. To create a multichannel AudioBuffer,\n *  pass in a multidimensional array.\n *  @param {Float32Array} array The array to fill the audio buffer\n *  @return {Tone.Buffer} A Tone.Buffer created from the array\n */\nTone.Buffer.fromArray = function(array){\n\treturn (new Tone.Buffer()).fromArray(array);\n};\n\n/**\n * Creates a Tone.Buffer from a URL, returns a promise\n * which resolves to a Tone.Buffer\n * @param  {String} url The url to load.\n * @return {Promise<Tone.Buffer>}     A promise which resolves to a Tone.Buffer\n */\nTone.Buffer.fromUrl = function(url){\n\tvar buffer = new Tone.Buffer();\n\treturn buffer.load(url).then(function(){\n\t\treturn buffer;\n\t});\n};\n\n/**\n * Remove an xhr request from the download queue\n * @private\n */\nTone.Buffer._removeFromDownloadQueue = function(request){\n\tvar index = Tone.Buffer._downloadQueue.indexOf(request);\n\tif (index !== -1){\n\t\tTone.Buffer._downloadQueue.splice(index, 1);\n\t}\n};\n\n/**\n *  Loads a url using XMLHttpRequest.\n *  @param {String} url\n *  @param {Function} onload\n *  @param {Function} onerror\n *  @param {Function} onprogress\n *  @return {XMLHttpRequest}\n */\nTone.Buffer.load = function(url, onload, onerror){\n\t//default\n\tonload = Tone.defaultArg(onload, Tone.noOp);\n\n\t// test if the url contains multiple extensions\n\tvar matches = url.match(/\\[(.+\\|?)+\\]$/);\n\tif (matches){\n\t\tvar extensions = matches[1].split(\"|\");\n\t\tvar extension = extensions[0];\n\t\tfor (var i = 0; i < extensions.length; i++){\n\t\t\tif (Tone.Buffer.supportsType(extensions[i])){\n\t\t\t\textension = extensions[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\turl = url.replace(matches[0], extension);\n\t}\n\n\tfunction onError(e){\n\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\tTone.Buffer.emit(\"error\", e);\n\t\tif (onerror){\n\t\t\tonerror(e);\n\t\t} else {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tfunction onProgress(){\n\t\t//calculate the progress\n\t\tvar totalProgress = 0;\n\t\tfor (var i = 0; i < Tone.Buffer._downloadQueue.length; i++){\n\t\t\ttotalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t\t}\n\t\tTone.Buffer.emit(\"progress\", totalProgress / Tone.Buffer._downloadQueue.length);\n\t}\n\n\tvar request = new XMLHttpRequest();\n\trequest.open(\"GET\", Tone.Buffer.baseUrl + url, true);\n\trequest.responseType = \"arraybuffer\";\n\t//start out as 0\n\trequest.progress = 0;\n\n\tTone.Buffer._downloadQueue.push(request);\n\n\trequest.addEventListener(\"load\", function(){\n\n\t\tif (request.status === 200){\n\t\t\tTone.context.decodeAudioData(request.response).then(function(buff){\n\n\t\t\t\trequest.progress = 1;\n\t\t\t\tonProgress();\n\t\t\t\tonload(buff);\n\n\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\tif (Tone.Buffer._downloadQueue.length === 0){\n\t\t\t\t\t//emit the event at the end\n\t\t\t\t\tTone.Buffer.emit(\"load\");\n\t\t\t\t}\n\t\t\t}).catch(function(){\n\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\tonError(\"Tone.Buffer: could not decode audio data: \"+url);\n\t\t\t});\n\t\t} else {\n\t\t\tonError(\"Tone.Buffer: could not locate file: \"+url);\n\t\t}\n\t});\n\trequest.addEventListener(\"error\", onError);\n\n\trequest.addEventListener(\"progress\", function(event){\n\t\tif (event.lengthComputable){\n\t\t\t//only go to 95%, the last 5% is when the audio is decoded\n\t\t\trequest.progress = (event.loaded / event.total) * 0.95;\n\t\t\tonProgress();\n\t\t}\n\t});\n\n\trequest.send();\n\n\treturn request;\n};\n\n/**\n *  Stop all of the downloads in progress\n *  @return {Tone.Buffer}\n *  @static\n */\nTone.Buffer.cancelDownloads = function(){\n\tTone.Buffer._downloadQueue.slice().forEach(function(request){\n\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\trequest.abort();\n\t});\n\treturn Tone.Buffer;\n};\n\n/**\n *  Checks a url's extension to see if the current browser can play that file type.\n *  @param {String} url The url/extension to test\n *  @return {Boolean} If the file extension can be played\n *  @static\n *  @example\n * Tone.Buffer.supportsType(\"wav\"); //returns true\n * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n */\nTone.Buffer.supportsType = function(url){\n\tvar extension = url.split(\".\");\n\textension = extension[extension.length - 1];\n\tvar response = document.createElement(\"audio\").canPlayType(\"audio/\"+extension);\n\treturn response !== \"\";\n};\n\n/**\n *  Returns a Promise which resolves when all of the buffers have loaded\n *  @return {Promise}\n */\nTone.loaded = function(){\n\tvar onload, onerror;\n\tfunction removeEvents(){\n\t\t//remove the events when it's resolved\n\t\tTone.Buffer.off(\"load\", onload);\n\t\tTone.Buffer.off(\"error\", onerror);\n\t}\n\treturn new Promise(function(success, fail){\n\t\tonload = function(){\n\t\t\tsuccess();\n\t\t};\n\t\tonerror = function(){\n\t\t\tfail();\n\t\t};\n\t\t//add the event listeners\n\t\tTone.Buffer.on(\"load\", onload);\n\t\tTone.Buffer.on(\"error\", onerror);\n\t}).then(removeEvents).catch(function(e){\n\t\tremoveEvents();\n\t\tthrow new Error(e);\n\t});\n};\n\nexport default Tone.Buffer;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Oscillator\";\nimport \"../signal/Scale\";\nimport \"../core/AudioNode\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../type/Type\";\nimport \"../signal/Zero\";\n\n/**\n *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal\n *          which can be attached to an AudioParam or Tone.Signal\n *          in order to modulate that parameter with an oscillator. The LFO can\n *          also be synced to the transport to start/stop and change when the tempo changes.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n *                               in the frequency range of 0.1 to 10 hertz.\n *  @param {number=} min The minimum output value of the LFO.\n *  @param {number=} max The maximum value of the LFO.\n *  @example\n * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n * lfo.connect(filter.frequency);\n */\nTone.LFO = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"min\", \"max\"], Tone.LFO);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._oscillator = new Tone.Oscillator({\n\t\t\"frequency\" : options.frequency,\n\t\t\"type\" : options.type,\n\t});\n\n\t/**\n\t *  the lfo's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._oscillator.frequency;\n\n\t/**\n\t * The amplitude of the LFO, which controls the output range between\n\t * the min and max output. For example if the min is -10 and the max\n\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t * between -5 and 5.\n\t * @type {Number}\n\t * @signal\n\t */\n\tthis.amplitude = this._oscillator.volume;\n\tthis.amplitude.units = Tone.Type.NormalRange;\n\tthis.amplitude.value = options.amplitude;\n\n\t/**\n\t *  The signal which is output when the LFO is stopped\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\n\t/**\n\t *  Just outputs zeros.\n\t *  @type {Tone.Zero}\n\t *  @private\n\t */\n\tthis._zeros = new Tone.Zero();\n\n\t/**\n\t *  The value that the LFO outputs when it's stopped\n\t *  @type {AudioRange}\n\t *  @private\n\t */\n\tthis._stoppedValue = 0;\n\n\t/**\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._a2g = new Tone.AudioToGain();\n\n\t/**\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scaler = this.output = new Tone.Scale(options.min, options.max);\n\n\t/**\n\t *  the units of the LFO (used for converting)\n\t *  @type {Tone.Type}\n\t *  @private\n\t */\n\tthis._units = Tone.Type.Default;\n\tthis.units = options.units;\n\n\t//connect it up\n\tthis._oscillator.chain(this._a2g, this._scaler);\n\tthis._zeros.connect(this._a2g);\n\tthis._stoppedSignal.connect(this._a2g);\n\tthis._readOnly([\"amplitude\", \"frequency\"]);\n\tthis.phase = options.phase;\n};\n\nTone.extend(Tone.LFO, Tone.AudioNode);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.LFO.defaults = {\n\t\"type\" : \"sine\",\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"phase\" : 0,\n\t\"frequency\" : \"4n\",\n\t\"amplitude\" : 1,\n\t\"units\" : Tone.Type.Default\n};\n\n/**\n *  Start the LFO.\n *  @param  {Time} [time=now] the time the LFO will start\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._stoppedSignal.setValueAtTime(0, time);\n\tthis._oscillator.start(time);\n\treturn this;\n};\n\n/**\n *  Stop the LFO.\n *  @param  {Time} [time=now] the time the LFO will stop\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\tthis._oscillator.stop(time);\n\treturn this;\n};\n\n/**\n *  Sync the start/stop/pause to the transport\n *  and the frequency to the bpm of the transport\n *  @returns {Tone.LFO} this\n *  @example\n *  lfo.frequency.value = \"8n\";\n *  lfo.sync().start(0)\n *  //the rate of the LFO will always be an eighth note,\n *  //even as the tempo changes\n */\nTone.LFO.prototype.sync = function(){\n\tthis._oscillator.sync();\n\tthis._oscillator.syncFrequency();\n\treturn this;\n};\n\n/**\n *  unsync the LFO from transport control\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.unsync = function(){\n\tthis._oscillator.unsync();\n\tthis._oscillator.unsyncFrequency();\n\treturn this;\n};\n\n/**\n * The miniumum output of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.LFO.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._toUnits(this._scaler.min);\n\t},\n\tset : function(min){\n\t\tmin = this._fromUnits(min);\n\t\tthis._scaler.min = min;\n\t}\n});\n\n/**\n * The maximum output of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.LFO.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._toUnits(this._scaler.max);\n\t},\n\tset : function(max){\n\t\tmax = this._fromUnits(max);\n\t\tthis._scaler.max = max;\n\t}\n});\n\n/**\n * The type of the oscillator: sine, square, sawtooth, triangle.\n * @memberOf Tone.LFO#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.LFO.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tthis._oscillator.type = type;\n\t\tthis._stoppedValue = this._oscillator._getInitialValue();\n\t\tthis._stoppedSignal.value = this._stoppedValue;\n\t}\n});\n\n/**\n * The phase of the LFO.\n * @memberOf Tone.LFO#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.LFO.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._oscillator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._oscillator.phase = phase;\n\t\tthis._stoppedValue = this._oscillator._getInitialValue();\n\t\tthis._stoppedSignal.value = this._stoppedValue;\n\t}\n});\n\n/**\n * The output units of the LFO.\n * @memberOf Tone.LFO#\n * @type {Tone.Type}\n * @name units\n */\nObject.defineProperty(Tone.LFO.prototype, \"units\", {\n\tget : function(){\n\t\treturn this._units;\n\t},\n\tset : function(val){\n\t\tvar currentMin = this.min;\n\t\tvar currentMax = this.max;\n\t\t//convert the min and the max\n\t\tthis._units = val;\n\t\tthis.min = currentMin;\n\t\tthis.max = currentMax;\n\t}\n});\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.LFO#\n *  @name state\n */\nObject.defineProperty(Tone.LFO.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._oscillator.state;\n\t}\n});\n\n/**\n *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node.\n *  Tone.LFO will automatically convert to the destination units of the\n *  will get the units from the connected node.\n *  @param  {Tone | AudioParam | AudioNode} node\n *  @param {number} [outputNum=0] optionally which output to connect from\n *  @param {number} [inputNum=0] optionally which input to connect to\n *  @returns {Tone.LFO} this\n *  @private\n */\nTone.LFO.prototype.connect = function(node){\n\tif (node.constructor === Tone.Signal || node.constructor === Tone.Param){\n\t\tthis.convert = node.convert;\n\t\tthis.units = node.units;\n\t}\n\tTone.SignalBase.prototype.connect.apply(this, arguments);\n\treturn this;\n};\n\n/**\n *  private method borrowed from Param converts\n *  units from their destination value\n *  @function\n *  @private\n */\nTone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\n/**\n *  private method borrowed from Param converts\n *  units to their destination value\n *  @function\n *  @private\n */\nTone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\n/**\n *  disconnect and dispose\n *  @returns {Tone.LFO} this\n */\nTone.LFO.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"amplitude\", \"frequency\"]);\n\tthis._oscillator.dispose();\n\tthis._oscillator = null;\n\tthis._stoppedSignal.dispose();\n\tthis._stoppedSignal = null;\n\tthis._zeros.dispose();\n\tthis._zeros = null;\n\tthis._scaler.dispose();\n\tthis._scaler = null;\n\tthis._a2g.dispose();\n\tthis._a2g = null;\n\tthis.frequency = null;\n\tthis.amplitude = null;\n\treturn this;\n};\n\nexport default Tone.LFO;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Negate\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\n\n/**\n *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n *         signals <code>.value</code> will be subtracted from the incoming signal.\n *\n *  @extends {Tone.Signal}\n *  @constructor\n *  @param {number=} value The value to subtract from the incoming signal. If the value\n *                         is omitted, it will subtract the second signal from the first.\n *  @example\n * var sub = new Tone.Subtract(1);\n * var sig = new Tone.Signal(4).connect(sub);\n * //the output of sub is 3. \n *  @example\n * var sub = new Tone.Subtract();\n * var sigA = new Tone.Signal(10);\n * var sigB = new Tone.Signal(2.5);\n * sigA.connect(sub, 0, 0);\n * sigB.connect(sub, 0, 1);\n * //output of sub is 7.5\n */\nTone.Subtract = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the summing node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._sum = this.input[0] = this.output = new Tone.Gain();\n\n\t/**\n\t *  negate the input of the second input before connecting it\n\t *  to the summing node.\n\t *  @type {Tone.Negate}\n\t *  @private\n\t */\n\tthis._neg = new Tone.Negate();\n\n\t/**\n\t *  the node where the value is set\n\t *  @private\n\t *  @type {Tone.Signal}\n\t */\n\tthis._param = this.input[1] = new Tone.Signal(value);\n\tthis._param.chain(this._neg, this._sum);\n};\n\nTone.extend(Tone.Subtract, Tone.Signal);\n\n/**\n *  Clean up.\n *  @returns {Tone.SignalBase} this\n */\nTone.Subtract.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._neg.dispose();\n\tthis._neg = null;\n\tthis._sum.disconnect();\n\tthis._sum = null;\n\treturn this;\n};\n\nexport default Tone.Subtract;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\nimport \"../core/Timeline\";\n\n/**\n *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n *         additional unit conversion functionality. It also\n *         serves as a base-class for classes which have a single,\n *         automatable parameter.\n *  @extends {Tone.AudioNode}\n *  @param  {AudioParam}  param  The parameter to wrap.\n *  @param  {Tone.Type} units The units of the audio param.\n *  @param  {Boolean} convert If the param should be converted.\n */\nTone.Param = function(){\n\n\tvar options = Tone.defaults(arguments, [\"param\", \"units\", \"convert\"], Tone.Param);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The native parameter to control\n\t *  @type  {AudioParam}\n\t *  @private\n\t */\n\tthis._param = this.input = options.param;\n\n\t/**\n\t *  The units of the parameter\n\t *  @type {Tone.Type}\n\t */\n\tthis.units = options.units;\n\n\t/**\n\t *  If the value should be converted or not\n\t *  @type {Boolean}\n\t */\n\tthis.convert = options.convert;\n\n\t/**\n\t *  True if the signal value is being overridden by\n\t *  a connected signal.\n\t *  @readOnly\n\t *  @type  {boolean}\n\t *  @private\n\t */\n\tthis.overridden = false;\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t * @type {Tone.Timeline}\n\t * @private\n\t */\n\tthis._events = new Tone.Timeline(1000);\n\n\tif (Tone.isDefined(options.value) && this._param){\n\t\tthis.setValueAtTime(options.value, 0);\n\t}\n};\n\nTone.extend(Tone.Param, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n */\nTone.Param.defaults = {\n\t\"units\" : Tone.Type.Default,\n\t\"convert\" : true,\n\t\"param\" : undefined\n};\n\n/**\n * The current value of the parameter.\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"value\", {\n\tget : function(){\n\t\tvar now = this.now();\n\t\treturn this._toUnits(this.getValueAtTime(now));\n\t},\n\tset : function(value){\n\t\tthis._initialValue = this._fromUnits(value);\n\t\tthis.cancelScheduledValues(this.now());\n\t\tthis.setValueAtTime(value, this.now());\n\t}\n});\n\n/**\n * The minimum output value of the parameter\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"minValue\", {\n\tget : function(){\n\t\tif (this.units === Tone.Type.Time || this.units === Tone.Type.Frequency ||\n\t\t\tthis.units === Tone.Type.NormalRange || this.units === Tone.Type.Positive ||\n\t\t\tthis.units === Tone.Type.BPM){\n\t\t\treturn 0;\n\t\t} else if (this.units === Tone.Type.AudioRange){\n\t\t\treturn -1;\n\t\t} else if (this.units === Tone.Type.Decibels){\n\t\t\treturn -Infinity;\n\t\t} else {\n\t\t\treturn this._param.minValue;\n\t\t}\n\t}\n});\n\n/**\n * The maximum output value of the parameter\n * @memberOf Tone.Param#\n * @type {Number}\n * @name value\n */\nObject.defineProperty(Tone.Param.prototype, \"maxValue\", {\n\tget : function(){\n\t\tif (this.units === Tone.Type.NormalRange ||\n\t\t\tthis.units === Tone.Type.AudioRange){\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn this._param.maxValue;\n\t\t}\n\t}\n});\n\n/**\n *  Convert the given value from the type specified by Tone.Param.units\n *  into the destination value (such as Gain or Frequency).\n *  @private\n *  @param  {*} val the value to convert\n *  @return {number}     the number which the value should be set to\n */\nTone.Param.prototype._fromUnits = function(val){\n\tif ((this.convert || Tone.isUndef(this.convert)) && !this.overridden){\n\t\tswitch (this.units){\n\t\t\tcase Tone.Type.Time:\n\t\t\t\treturn this.toSeconds(val);\n\t\t\tcase Tone.Type.Frequency:\n\t\t\t\treturn this.toFrequency(val);\n\t\t\tcase Tone.Type.Decibels:\n\t\t\t\treturn Tone.dbToGain(val);\n\t\t\tcase Tone.Type.NormalRange:\n\t\t\t\treturn Math.min(Math.max(val, 0), 1);\n\t\t\tcase Tone.Type.AudioRange:\n\t\t\t\treturn Math.min(Math.max(val, -1), 1);\n\t\t\tcase Tone.Type.Positive:\n\t\t\t\treturn Math.max(val, 0);\n\t\t\tdefault:\n\t\t\t\treturn val;\n\t\t}\n\t} else {\n\t\treturn val;\n\t}\n};\n\n/**\n * Convert the parameters value into the units specified by Tone.Param.units.\n * @private\n * @param  {number} val the value to convert\n * @return {number}\n */\nTone.Param.prototype._toUnits = function(val){\n\tif (this.convert || Tone.isUndef(this.convert)){\n\t\tswitch (this.units){\n\t\t\tcase Tone.Type.Decibels:\n\t\t\t\treturn Tone.gainToDb(val);\n\t\t\tdefault:\n\t\t\t\treturn val;\n\t\t}\n\t} else {\n\t\treturn val;\n\t}\n};\n\n/**\n *  the minimum output value\n *  @type {Number}\n *  @private\n */\nTone.Param.prototype._minOutput = 1e-5;\n\n/**\n *  The event types\n *  @enum {String}\n *  @private\n */\nTone.Param.AutomationType = {\n\tLinear : \"linearRampToValueAtTime\",\n\tExponential : \"exponentialRampToValueAtTime\",\n\tTarget : \"setTargetAtTime\",\n\tSetValue : \"setValueAtTime\",\n\tCancel : \"cancelScheduledValues\"\n};\n\n/**\n *  Schedules a parameter value change at the given time.\n *  @param {*}\tvalue The value to set the signal.\n *  @param {Time}  time The time when the change should occur.\n *  @returns {Tone.Param} this\n *  @example\n * //set the frequency to \"G4\" in exactly 1 second from now.\n * freq.setValueAtTime(\"G4\", \"+1\");\n */\nTone.Param.prototype.setValueAtTime = function(value, time){\n\ttime = this.toSeconds(time);\n\tvalue = this._fromUnits(value);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"value\" : value,\n\t\t\"time\" : time,\n\t});\n\tthis.log(Tone.Param.AutomationType.SetValue, value, time);\n\tthis._param.setValueAtTime(value, time);\n\treturn this;\n};\n\n/**\n *  Get the signals value at the given time. Subsequent scheduling\n *  may invalidate the returned value.\n *  @param {Time} time When to get the value\n *  @returns {Number} The value at the given time\n */\nTone.Param.prototype.getValueAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar after = this._events.getAfter(time);\n\tvar before = this._events.get(time);\n\tvar initialValue = Tone.defaultArg(this._initialValue, this._param.defaultValue);\n\tvar value = initialValue;\n\t//if it was set by\n\tif (before === null){\n\t\tvalue = initialValue;\n\t} else if (before.type === Tone.Param.AutomationType.Target){\n\t\tvar previous = this._events.getBefore(before.time);\n\t\tvar previousVal;\n\t\tif (previous === null){\n\t\t\tpreviousVal = initialValue;\n\t\t} else {\n\t\t\tpreviousVal = previous.value;\n\t\t}\n\t\tvalue = this._exponentialApproach(before.time, previousVal, before.value, before.constant, time);\n\t} else if (after === null){\n\t\tvalue = before.value;\n\t} else if (after.type === Tone.Param.AutomationType.Linear){\n\t\tvalue = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\tvalue = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t} else {\n\t\tvalue = before.value;\n\t}\n\treturn value;\n};\n\n/**\n *  Creates a schedule point with the current value at the current time.\n *  This is useful for creating an automation anchor point in order to\n *  schedule changes from the current value.\n *\n *  @param {number=} now (Optionally) pass the now value in.\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setRampPoint = function(time){\n\ttime = this.toSeconds(time);\n\tvar currentVal = this.getValueAtTime(time);\n\tthis.cancelAndHoldAtTime(time);\n\tif (currentVal === 0){\n\t\tcurrentVal = this._minOutput;\n\t}\n\tthis.setValueAtTime(this._toUnits(currentVal), time);\n\treturn this;\n};\n\n/**\n *  Schedules a linear continuous change in parameter value from the\n *  previous scheduled parameter value to the given value.\n *\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.linearRampToValueAtTime = function(value, endTime){\n\tvalue = this._fromUnits(value);\n\tendTime = this.toSeconds(endTime);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Linear,\n\t\t\"value\" : value,\n\t\t\"time\" : endTime,\n\t});\n\tthis.log(Tone.Param.AutomationType.Linear, value, endTime);\n\tthis._param.linearRampToValueAtTime(value, endTime);\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the previous scheduled parameter value to the given value.\n *\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.exponentialRampToValueAtTime = function(value, endTime){\n\tvalue = this._fromUnits(value);\n\tvalue = Math.max(this._minOutput, value);\n\tendTime = this.toSeconds(endTime);\n\t//store the event\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Exponential,\n\t\t\"time\" : endTime,\n\t\t\"value\" : value\n\t});\n\tthis.log(Tone.Param.AutomationType.Exponential, value, endTime);\n\tthis._param.exponentialRampToValueAtTime(value, endTime);\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the current time and current value to the given value over the\n *  duration of the rampTime.\n *\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.exponentialRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\treturn this;\n};\n\n/**\n *  Schedules an linear continuous change in parameter value from\n *  the current time and current value to the given value over the\n *  duration of the rampTime.\n *\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //linearly ramp to the value 4 over 3 seconds.\n * signal.linearRampTo(4, 3);\n */\nTone.Param.prototype.linearRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time. Since it\n *  is an exponential approach it will continue approaching after the ramp duration. The\n *  rampTime is the time that it takes to reach over 99% of the way towards the value.\n *  @param  {number} value   The value to ramp to.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.targetRampTo = function(value, rampTime, startTime){\n\tstartTime = this.toSeconds(startTime);\n\tthis.setRampPoint(startTime);\n\tthis.exponentialApproachValueAtTime(value, startTime, rampTime);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time. Since it\n *  is an exponential approach it will continue approaching after the ramp duration. The\n *  rampTime is the time that it takes to reach over 99% of the way towards the value. This methods\n *  is similar to setTargetAtTime except the third argument is a time instead of a 'timeConstant'\n *  @param  {number} value   The value to ramp to.\n *  @param {Time}\ttime \tWhen the ramp should start.\n *  @param  {Time} rampTime the time that it takes the\n *                               value to ramp from it's current value\n *  @returns {Tone.Param} this\n *  @example\n * //exponentially ramp to the value 2 over 4 seconds.\n * signal.exponentialRampTo(2, 4);\n */\nTone.Param.prototype.exponentialApproachValueAtTime = function(value, time, rampTime){\n\tvar timeConstant = Math.log(this.toSeconds(rampTime)+1)/Math.log(200);\n\ttime = this.toSeconds(time);\n\tthis.setTargetAtTime(value, time, timeConstant);\n\t//at 90% start a linear ramp to the final value\n\tthis.cancelAndHoldAtTime(time + rampTime * 0.9);\n\tthis.linearRampToValueAtTime(value, time + rampTime);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {Time} startTime\n *  @param {number} timeConstant\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\tvalue = this._fromUnits(value);\n\t// The value will never be able to approach without timeConstant > 0.\n\tif (timeConstant <= 0){\n\t\tthrow new Error(\"timeConstant must be greater than 0\");\n\t}\n\tstartTime = this.toSeconds(startTime);\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.Target,\n\t\t\"value\" : value,\n\t\t\"time\" : startTime,\n\t\t\"constant\" : timeConstant\n\t});\n\tthis.log(Tone.Param.AutomationType.Target, value, startTime, timeConstant);\n\tthis._param.setTargetAtTime(value, startTime, timeConstant);\n\treturn this;\n};\n\n/**\n *  Sets an array of arbitrary parameter values starting at the given time\n *  for the given duration.\n *\n *  @param {Array} values\n *  @param {Time} startTime\n *  @param {Time} duration\n *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.setValueCurveAtTime = function(values, startTime, duration, scaling){\n\tscaling = Tone.defaultArg(scaling, 1);\n\tduration = this.toSeconds(duration);\n\tstartTime = this.toSeconds(startTime);\n\tthis.setValueAtTime(values[0] * scaling, startTime);\n\tvar segTime = duration / (values.length - 1);\n\tfor (var i = 1; i < values.length; i++){\n\t\tthis.linearRampToValueAtTime(values[i] * scaling, startTime + i * segTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled parameter changes with times greater than or\n *  equal to startTime.\n *\n *  @param  {Time} time\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.cancelScheduledValues = function(time){\n\ttime = this.toSeconds(time);\n\tthis._events.cancel(time);\n\tthis._param.cancelScheduledValues(time);\n\tthis.log(Tone.Param.AutomationType.Cancel, time);\n\treturn this;\n};\n\n/**\n *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n *  it holds the automated value at time until the next automated event.\n *  @param  {Time} time\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.cancelAndHoldAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar valueAtTime = this.getValueAtTime(time);\n\tthis.log(\"cancelAndHoldAtTime\", time, \"value=\"+valueAtTime);\n\n\t//remove the schedule events\n\tthis._param.cancelScheduledValues(time);\n\n\t//if there is an event at the given time\n\t//and that even is not a \"set\"\n\tvar before = this._events.get(time);\n\tvar after = this._events.getAfter(time);\n\tif (before && before.time === time){\n\t\t//remove everything after\n\t\tif (after){\n\t\t\tthis._events.cancel(after.time);\n\t\t} else {\n\t\t\tthis._events.cancel(time + this.sampleTime);\n\t\t}\n\t} else if (after){\n\t\t//cancel the next event(s)\n\t\tthis._events.cancel(after.time);\n\t\tif (after.type === Tone.Param.AutomationType.Linear){\n\t\t\tthis.linearRampToValueAtTime(valueAtTime, time);\n\t\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\t\tthis.exponentialRampToValueAtTime(valueAtTime, time);\n\t\t}\n\t}\n\n\t//set the value at the given time\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"value\" : valueAtTime,\n\t\t\"time\" : time\n\t});\n\tthis._param.setValueAtTime(valueAtTime, time);\n\treturn this;\n};\n\n/**\n *  Ramps to the given value over the duration of the rampTime.\n *  Automatically selects the best ramp type (exponential or linear)\n *  depending on the `units` of the signal\n *\n *  @param  {number} value\n *  @param  {Time} rampTime \tThe time that it takes the\n *                              value to ramp from it's current value\n *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n *  @returns {Tone.Param} this\n *  @example\n * //ramp to the value either linearly or exponentially\n * //depending on the \"units\" value of the signal\n * signal.rampTo(0, 10);\n *  @example\n * //schedule it to ramp starting at a specific time\n * signal.rampTo(0, 10, 5)\n */\nTone.Param.prototype.rampTo = function(value, rampTime, startTime){\n\trampTime = Tone.defaultArg(rampTime, 0.1);\n\tif (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels){\n\t\tthis.exponentialRampTo(value, rampTime, startTime);\n\t} else {\n\t\tthis.linearRampTo(value, rampTime, startTime);\n\t}\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUTOMATION CURVE CALCULATIONS\n//\tMIT License, copyright (c) 2014 Jordan Santell\n///////////////////////////////////////////////////////////////////////////\n\n// Calculates the the value along the curve produced by setTargetAtTime\nTone.Param.prototype._exponentialApproach = function(t0, v0, v1, timeConstant, t){\n\treturn v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n};\n\n// Calculates the the value along the curve produced by linearRampToValueAtTime\nTone.Param.prototype._linearInterpolate = function(t0, v0, t1, v1, t){\n\treturn v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n};\n\n// Calculates the the value along the curve produced by exponentialRampToValueAtTime\nTone.Param.prototype._exponentialInterpolate = function(t0, v0, t1, v1, t){\n\treturn v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n};\n\n/**\n *  Clean up\n *  @returns {Tone.Param} this\n */\nTone.Param.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._param = null;\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Param;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/Split\";\nimport \"../component/Merge\";\nimport \"../component/CrossFade\";\n\n/**\n *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R.\n *\n *\t@constructor\n *\t@extends {Tone.Effect}\n */\nTone.StereoEffect = function(){\n\n\t//get the defaults\n\tTone.AudioNode.call(this);\n\tvar options = Tone.defaults(arguments, [\"wet\"], Tone.Effect);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  the drywet knob to control the amount of effect\n\t *  @type {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._dryWet = new Tone.CrossFade(options.wet);\n\n\t/**\n\t *  The wet control, i.e. how much of the effected\n\t *  will pass through to the output.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.wet = this._dryWet.fade;\n\n\t/**\n\t *  then split it\n\t *  @type {Tone.Split}\n\t *  @private\n\t */\n\tthis._split = new Tone.Split();\n\n\t/**\n\t *  the effects send LEFT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectSendL = this._split.left;\n\n\t/**\n\t *  the effects send RIGHT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectSendR = this._split.right;\n\n\t/**\n\t *  the stereo effect merger\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = new Tone.Merge();\n\n\t/**\n\t *  the effect return LEFT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectReturnL = this._merge.left;\n\n\t/**\n\t *  the effect return RIGHT\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.effectReturnR = this._merge.right;\n\n\t//connections\n\tTone.connect(this.input, this._split);\n\t//dry wet connections\n\tTone.connect(this.input, this._dryWet, 0, 0);\n\tthis._merge.connect(this._dryWet, 0, 1);\n\tthis._dryWet.connect(this.output);\n\tthis._readOnly([\"wet\"]);\n};\n\nTone.extend(Tone.StereoEffect, Tone.Effect);\n\n/**\n *  Clean up.\n *  @returns {Tone.StereoEffect} this\n */\nTone.StereoEffect.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._dryWet.dispose();\n\tthis._dryWet = null;\n\tthis._split.dispose();\n\tthis._split = null;\n\tthis._merge.dispose();\n\tthis._merge = null;\n\tthis.effectSendL = null;\n\tthis.effectSendR = null;\n\tthis.effectReturnL = null;\n\tthis.effectReturnR = null;\n\tthis._writable([\"wet\"]);\n\tthis.wet = null;\n\treturn this;\n};\n\nexport default Tone.StereoEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Clock\";\nimport \"../type/Type\";\nimport \"../core/Timeline\";\nimport \"../core/Emitter\";\nimport \"../core/Gain\";\nimport \"../core/IntervalTimeline\";\nimport \"../core/TransportRepeatEvent\";\nimport \"../core/TransportEvent\";\n\n/**\n *  @class  Transport for timing musical events.\n *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n *          Tone.Transport timing events pass in the exact time of the scheduled event\n *          in the argument of the callback function. Pass that time value to the object\n *          you're scheduling. <br><br>\n *          A single transport is created for you when the library is initialized.\n *          <br><br>\n *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n *          called with the time of that event as the argument.\n *\n *  @extends {Tone.Emitter}\n *  @singleton\n *  @example\n * //repeated event every 8th note\n * Tone.Transport.scheduleRepeat(function(time){\n * \t//do something with the time\n * }, \"8n\");\n *  @example\n * //schedule an event on the 16th measure\n * Tone.Transport.schedule(function(time){\n * \t//do something with the time\n * }, \"16:0:0\");\n */\nTone.Transport = function(){\n\n\tTone.Emitter.call(this);\n\n\tTone.getContext(function(){\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tLOOPING\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t * \tIf the transport loops or not.\n\t\t *  @type {boolean}\n\t\t */\n\t\tthis.loop = false;\n\n\t\t/**\n\t\t * \tThe loop start position in ticks\n\t\t *  @type {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._loopStart = 0;\n\n\t\t/**\n\t\t * \tThe loop end position in ticks\n\t\t *  @type {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._loopEnd = 0;\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tCLOCK/TEMPO\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t *  @private\n\t\t *  @type  {Number}\n\t\t */\n\t\tthis._ppq = TransportConstructor.defaults.PPQ;\n\n\t\t/**\n\t\t *  watches the main oscillator for timing ticks\n\t\t *  initially starts at 120bpm\n\t\t *  @private\n\t\t *  @type {Tone.Clock}\n\t\t */\n\t\tthis._clock = new Tone.Clock({\n\t\t\t\"callback\" : this._processTick.bind(this),\n\t\t\t\"frequency\" : 0,\n\t\t});\n\n\t\tthis._bindClockEvents();\n\n\t\t/**\n\t\t *  The Beats Per Minute of the Transport.\n\t\t *  @type {BPM}\n\t\t *  @signal\n\t\t *  @example\n\t\t * Tone.Transport.bpm.value = 80;\n\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t */\n\t\tthis.bpm = this._clock.frequency;\n\t\tthis.bpm._toUnits = this._toUnits.bind(this);\n\t\tthis.bpm._fromUnits = this._fromUnits.bind(this);\n\t\tthis.bpm.units = Tone.Type.BPM;\n\t\tthis.bpm.value = TransportConstructor.defaults.bpm;\n\t\tthis._readOnly(\"bpm\");\n\n\t\t/**\n\t\t *  The time signature, or more accurately the numerator\n\t\t *  of the time signature over a denominator of 4.\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._timeSignature = TransportConstructor.defaults.timeSignature;\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tTIMELINE EVENTS\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  All the events in an object to keep track by ID\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t\tthis._scheduledEvents = {};\n\n\t\t/**\n\t\t * \tThe scheduled events.\n\t\t *  @type {Tone.Timeline}\n\t\t *  @private\n\t\t */\n\t\tthis._timeline = new Tone.Timeline();\n\n\t\t/**\n\t\t *  Repeated events\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._repeatedEvents = new Tone.IntervalTimeline();\n\n\t\t/**\n\t\t *  All of the synced Signals\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t\tthis._syncedSignals = [];\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t//\tSWING\n\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  The subdivision of the swing\n\t\t *  @type  {Ticks}\n\t\t *  @private\n\t\t */\n\t\tthis._swingTicks = TransportConstructor.defaults.PPQ / 2; //8n\n\n\t\t/**\n\t\t *  The swing amount\n\t\t *  @type {NormalRange}\n\t\t *  @private\n\t\t */\n\t\tthis._swingAmount = 0;\n\n\t\t//transport is a singleton so it adds itself to the context\n\t\tthis.context.transport = this;\n\n\t}.bind(this));\n};\n\nTone.extend(Tone.Transport, Tone.Emitter);\n\n/**\n *  the defaults\n *  @type {Object}\n *  @const\n *  @static\n */\nTone.Transport.defaults = {\n\t\"bpm\" : 120,\n\t\"swing\" : 0,\n\t\"swingSubdivision\" : \"8n\",\n\t\"timeSignature\" : 4,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : \"4m\",\n\t\"PPQ\" : 192\n};\n\n/**\n * Is an instanceof Tone.Transport\n * @type {Boolean}\n */\nTone.Transport.prototype.isTransport = true;\n\n///////////////////////////////////////////////////////////////////////////////\n//\tTICKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  called on every tick\n *  @param   {number} tickTime clock relative tick time\n *  @private\n */\nTone.Transport.prototype._processTick = function(tickTime, ticks){\n\t//handle swing\n\tif (this._swingAmount > 0 &&\n\t\tticks % this._ppq !== 0 && //not on a downbeat\n\t\tticks % (this._swingTicks * 2) !== 0){\n\t\t//add some swing\n\t\tvar progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n\t\tvar amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n\t\ttickTime += Tone.Ticks(this._swingTicks * 2/3).toSeconds() * amount;\n\t}\n\t//do the loop test\n\tif (this.loop){\n\t\tif (ticks >= this._loopEnd){\n\t\t\tthis.emit(\"loopEnd\", tickTime);\n\t\t\tthis._clock.setTicksAtTime(this._loopStart, tickTime);\n\t\t\tticks = this._loopStart;\n\t\t\tthis.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n\t\t\tthis.emit(\"loop\", tickTime);\n\t\t}\n\t}\n\t//invoke the timeline events scheduled on this tick\n\tthis._timeline.forEachAtTime(ticks, function(event){\n\t\tevent.invoke(tickTime);\n\t});\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSCHEDULABLE EVENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Schedule an event along the timeline.\n *  @param {Function} callback The callback to be invoked at the time.\n *  @param {TransportTime}  time The time to invoke the callback at.\n *  @return {Number} The id of the event which can be used for canceling the event.\n *  @example\n * //trigger the callback when the Transport reaches the desired time\n * Tone.Transport.schedule(function(time){\n * \tenvelope.triggerAttack(time);\n * }, \"128i\");\n */\nTone.Transport.prototype.schedule = function(callback, time){\n\tvar event = new Tone.TransportEvent(this, {\n\t\t\"time\" : Tone.TransportTime(time),\n\t\t\"callback\" : callback\n\t});\n\treturn this._addEvent(event, this._timeline);\n};\n\n/**\n *  Schedule a repeated event along the timeline. The event will fire\n *  at the `interval` starting at the `startTime` and for the specified\n *  `duration`.\n *  @param  {Function}  callback   The callback to invoke.\n *  @param  {Time}    interval   The duration between successive\n *                               callbacks. Must be a positive number.\n *  @param  {TransportTime=}    startTime  When along the timeline the events should\n *                               start being invoked.\n *  @param {Time} [duration=Infinity] How long the event should repeat.\n *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n *                           the event.\n *  @example\n * //a callback invoked every eighth note after the first measure\n * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n */\nTone.Transport.prototype.scheduleRepeat = function(callback, interval, startTime, duration){\n\tvar event = new Tone.TransportRepeatEvent(this, {\n\t\t\"callback\" : callback,\n\t\t\"interval\" : Tone.Time(interval),\n\t\t\"time\" : Tone.TransportTime(startTime),\n\t\t\"duration\" : Tone.Time(Tone.defaultArg(duration, Infinity)),\n\t});\n\t//kick it off if the Transport is started\n\treturn this._addEvent(event, this._repeatedEvents);\n};\n\n/**\n *  Schedule an event that will be removed after it is invoked. \n *  @param {Function} callback The callback to invoke once.\n *  @param {TransportTime} time The time the callback should be invoked.\n *  @returns {Number} The ID of the scheduled event.\n */\nTone.Transport.prototype.scheduleOnce = function(callback, time){\n\tvar event = new Tone.TransportEvent(this, {\n\t\t\"time\" : Tone.TransportTime(time),\n\t\t\"callback\" : callback,\n\t\t\"once\" : true\n\t});\n\treturn this._addEvent(event, this._timeline);\n};\n\n/**\n *  Clear the passed in event id from the timeline\n *  @param {Number} eventId The id of the event.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.clear = function(eventId){\n\tif (this._scheduledEvents.hasOwnProperty(eventId)){\n\t\tvar item = this._scheduledEvents[eventId.toString()];\n\t\titem.timeline.remove(item.event);\n\t\titem.event.dispose();\n\t\tdelete this._scheduledEvents[eventId.toString()];\n\t}\n\treturn this;\n};\n\n/**\n * Add an event to the correct timeline. Keep track of the\n * timeline it was added to.\n * @param {Tone.TransportEvent}\tevent\n * @param {Tone.Timeline} timeline\n * @returns {Number} the event id which was just added\n * @private\n */\nTone.Transport.prototype._addEvent = function(event, timeline){\n\tthis._scheduledEvents[event.id.toString()] = {\n\t\t\"event\" : event,\n\t\t\"timeline\" : timeline\n\t};\n\ttimeline.add(event);\n\treturn event.id;\n};\n\n/**\n *  Remove scheduled events from the timeline after\n *  the given time. Repeated events will be removed\n *  if their startTime is after the given time\n *  @param {TransportTime} [after=0] Clear all events after\n *                          this time.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.cancel = function(after){\n\tafter = Tone.defaultArg(after, 0);\n\tafter = this.toTicks(after);\n\tthis._timeline.forEachFrom(after, function(event){\n\t\tthis.clear(event.id);\n\t}.bind(this));\n\tthis._repeatedEvents.forEachFrom(after, function(event){\n\t\tthis.clear(event.id);\n\t}.bind(this));\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSTART/STOP/PAUSE\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Bind start/stop/pause events from the clock and emit them.\n *  @private\n */\nTone.Transport.prototype._bindClockEvents = function(){\n\tthis._clock.on(\"start\", function(time, offset){\n\t\toffset = Tone.Ticks(offset).toSeconds();\n\t\tthis.emit(\"start\", time, offset);\n\t}.bind(this));\n\n\tthis._clock.on(\"stop\", function(time){\n\t\tthis.emit(\"stop\", time);\n\t}.bind(this));\n\n\tthis._clock.on(\"pause\", function(time){\n\t\tthis.emit(\"pause\", time);\n\t}.bind(this));\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Transport#\n *  @name state\n */\nObject.defineProperty(Tone.Transport.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._clock.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the transport and all sources synced to the transport.\n *  @param  {Time} [time=now] The time when the transport should start.\n *  @param  {TransportTime=} offset The timeline offset to start the transport.\n *  @returns {Tone.Transport} this\n *  @example\n * //start the transport in one second starting at beginning of the 5th measure.\n * Tone.Transport.start(\"+1\", \"4:0:0\");\n */\nTone.Transport.prototype.start = function(time, offset){\n\t//start the clock\n\tif (Tone.isDefined(offset)){\n\t\toffset = this.toTicks(offset);\n\t}\n\tthis._clock.start(time, offset);\n\treturn this;\n};\n\n/**\n *  Stop the transport and all sources synced to the transport.\n *  @param  {Time} [time=now] The time when the transport should stop.\n *  @returns {Tone.Transport} this\n *  @example\n * Tone.Transport.stop();\n */\nTone.Transport.prototype.stop = function(time){\n\tthis._clock.stop(time);\n\treturn this;\n};\n\n/**\n *  Pause the transport and all sources synced to the transport.\n *  @param  {Time} [time=now]\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.pause = function(time){\n\tthis._clock.pause(time);\n\treturn this;\n};\n\n/**\n * Toggle the current state of the transport. If it is\n * started, it will stop it, otherwise it will start the Transport.\n * @param  {Time=} time The time of the event\n * @return {Tone.Transport}      this\n */\nTone.Transport.prototype.toggle = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._clock.getStateAtTime(time) !== Tone.State.Started){\n\t\tthis.start(time);\n\t} else {\n\t\tthis.stop(time);\n\t}\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSETTERS/GETTERS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  The time signature as just the numerator over 4.\n *  For example 4/4 would be just 4 and 6/8 would be 3.\n *  @memberOf Tone.Transport#\n *  @type {Number|Array}\n *  @name timeSignature\n *  @example\n * //common time\n * Tone.Transport.timeSignature = 4;\n * // 7/8\n * Tone.Transport.timeSignature = [7, 8];\n * //this will be reduced to a single number\n * Tone.Transport.timeSignature; //returns 3.5\n */\nObject.defineProperty(Tone.Transport.prototype, \"timeSignature\", {\n\tget : function(){\n\t\treturn this._timeSignature;\n\t},\n\tset : function(timeSig){\n\t\tif (Tone.isArray(timeSig)){\n\t\t\ttimeSig = (timeSig[0] / timeSig[1]) * 4;\n\t\t}\n\t\tthis._timeSignature = timeSig;\n\t}\n});\n\n/**\n * When the Tone.Transport.loop = true, this is the starting position of the loop.\n * @memberOf Tone.Transport#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.Transport.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(startPosition){\n\t\tthis._loopStart = this.toTicks(startPosition);\n\t}\n});\n\n/**\n * When the Tone.Transport.loop = true, this is the ending position of the loop.\n * @memberOf Tone.Transport#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.Transport.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(endPosition){\n\t\tthis._loopEnd = this.toTicks(endPosition);\n\t}\n});\n\n/**\n *  Set the loop start and stop at the same time.\n *  @param {TransportTime} startPosition\n *  @param {TransportTime} endPosition\n *  @returns {Tone.Transport} this\n *  @example\n * //loop over the first measure\n * Tone.Transport.setLoopPoints(0, \"1m\");\n * Tone.Transport.loop = true;\n */\nTone.Transport.prototype.setLoopPoints = function(startPosition, endPosition){\n\tthis.loopStart = startPosition;\n\tthis.loopEnd = endPosition;\n\treturn this;\n};\n\n/**\n *  The swing value. Between 0-1 where 1 equal to\n *  the note + half the subdivision.\n *  @memberOf Tone.Transport#\n *  @type {NormalRange}\n *  @name swing\n */\nObject.defineProperty(Tone.Transport.prototype, \"swing\", {\n\tget : function(){\n\t\treturn this._swingAmount;\n\t},\n\tset : function(amount){\n\t\t//scale the values to a normal range\n\t\tthis._swingAmount = amount;\n\t}\n});\n\n/**\n *  Set the subdivision which the swing will be applied to.\n *  The default value is an 8th note. Value must be less\n *  than a quarter note.\n *\n *  @memberOf Tone.Transport#\n *  @type {Time}\n *  @name swingSubdivision\n */\nObject.defineProperty(Tone.Transport.prototype, \"swingSubdivision\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._swingTicks).toNotation();\n\t},\n\tset : function(subdivision){\n\t\tthis._swingTicks = this.toTicks(subdivision);\n\t}\n});\n\n/**\n *  The Transport's position in Bars:Beats:Sixteenths.\n *  Setting the value will jump to that position right away.\n *  @memberOf Tone.Transport#\n *  @type {BarsBeatsSixteenths}\n *  @name position\n */\nObject.defineProperty(Tone.Transport.prototype, \"position\", {\n\tget : function(){\n\t\tvar now = this.now();\n\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\treturn Tone.Ticks(ticks).toBarsBeatsSixteenths();\n\t},\n\tset : function(progress){\n\t\tvar ticks = this.toTicks(progress);\n\t\tthis.ticks = ticks;\n\t}\n});\n\n/**\n *  The Transport's position in seconds\n *  Setting the value will jump to that position right away.\n *  @memberOf Tone.Transport#\n *  @type {Seconds}\n *  @name seconds\n */\nObject.defineProperty(Tone.Transport.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this._clock.seconds;\n\t},\n\tset : function(s){\n\t\tvar now = this.now();\n\t\tvar ticks = this.bpm.timeToTicks(s, now);\n\t\tthis.ticks = ticks;\n\t}\n});\n\n/**\n *  The Transport's loop position as a normalized value. Always\n *  returns 0 if the transport if loop is not true.\n *  @memberOf Tone.Transport#\n *  @name progress\n *  @type {NormalRange}\n */\nObject.defineProperty(Tone.Transport.prototype, \"progress\", {\n\tget : function(){\n\t\tif (this.loop){\n\t\t\tvar now = this.now();\n\t\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\t\treturn (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  The transports current tick position.\n *\n *  @memberOf Tone.Transport#\n *  @type {Ticks}\n *  @name ticks\n */\nObject.defineProperty(Tone.Transport.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn this._clock.ticks;\n\t},\n\tset : function(t){\n\t\tif (this._clock.ticks !== t){\n\t\t\tvar now = this.now();\n\t\t\t//stop everything synced to the transport\n\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\tthis.emit(\"stop\", now);\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t\t//restart it with the new time\n\t\t\t\tthis.emit(\"start\", now, this.seconds);\n\t\t\t} else {\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * Get the clock's ticks at the given time.\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}       The tick value at the given time.\n */\nTone.Transport.prototype.getTicksAtTime = function(time){\n\treturn Math.round(this._clock.getTicksAtTime(time));\n};\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.Transport.prototype.getSecondsAtTime = function(time){\n\treturn this._clock.getSecondsAtTime(time);\n};\n\n/**\n *  Pulses Per Quarter note. This is the smallest resolution\n *  the Transport timing supports. This should be set once\n *  on initialization and not set again. Changing this value\n *  after other objects have been created can cause problems.\n *\n *  @memberOf Tone.Transport#\n *  @type {Number}\n *  @name PPQ\n */\nObject.defineProperty(Tone.Transport.prototype, \"PPQ\", {\n\tget : function(){\n\t\treturn this._ppq;\n\t},\n\tset : function(ppq){\n\t\tvar bpm = this.bpm.value;\n\t\tthis._ppq = ppq;\n\t\tthis.bpm.value = bpm;\n\t}\n});\n\n/**\n *  Convert from BPM to frequency (factoring in PPQ)\n *  @param  {BPM}  bpm The BPM value to convert to frequency\n *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n *  @private\n */\nTone.Transport.prototype._fromUnits = function(bpm){\n\treturn 1 / (60 / bpm / this.PPQ);\n};\n\n/**\n *  Convert from frequency (with PPQ) into BPM\n *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n *  @return  {BPM}  The frequency value as BPM.\n *  @private\n */\nTone.Transport.prototype._toUnits = function(freq){\n\treturn (freq / this.PPQ) * 60;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tSYNCING\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n *  Returns the time aligned to the next subdivision\n *  of the Transport. If the Transport is not started,\n *  it will return 0.\n *  Note: this will not work precisely during tempo ramps.\n *  @param  {Time}  subdivision  The subdivision to quantize to\n *  @return  {Number}  The context time of the next subdivision.\n *  @example\n * Tone.Transport.start(); //the transport must be started\n * Tone.Transport.nextSubdivision(\"4n\");\n */\nTone.Transport.prototype.nextSubdivision = function(subdivision){\n\tsubdivision = this.toTicks(subdivision);\n\tif (this.state !== Tone.State.Started){\n\t\t//if the transport's not started, return 0\n\t\treturn 0;\n\t} else {\n\t\tvar now = this.now();\n\t\t//the remainder of the current ticks and the subdivision\n\t\tvar transportPos = this.getTicksAtTime(now);\n\t\tvar remainingTicks = subdivision - transportPos % subdivision;\n\t\treturn this._clock.nextTickTime(remainingTicks, now);\n\t}\n};\n\n/**\n *  Attaches the signal to the tempo control signal so that\n *  any changes in the tempo will change the signal in the same\n *  ratio.\n *\n *  @param  {Tone.Signal} signal\n *  @param {number=} ratio Optionally pass in the ratio between\n *                         the two signals. Otherwise it will be computed\n *                         based on their current values.\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.syncSignal = function(signal, ratio){\n\tif (!ratio){\n\t\t//get the sync ratio\n\t\tvar now = this.now();\n\t\tif (signal.getValueAtTime(now) !== 0){\n\t\t\tratio = signal.getValueAtTime(now) / this.bpm.getValueAtTime(now);\n\t\t} else {\n\t\t\tratio = 0;\n\t\t}\n\t}\n\tvar ratioSignal = new Tone.Gain(ratio);\n\tthis.bpm.chain(ratioSignal, signal._param);\n\tthis._syncedSignals.push({\n\t\t\"ratio\" : ratioSignal,\n\t\t\"signal\" : signal,\n\t\t\"initial\" : signal.value\n\t});\n\tsignal.value = 0;\n\treturn this;\n};\n\n/**\n *  Unsyncs a previously synced signal from the transport's control.\n *  See Tone.Transport.syncSignal.\n *  @param  {Tone.Signal} signal\n *  @returns {Tone.Transport} this\n */\nTone.Transport.prototype.unsyncSignal = function(signal){\n\tfor (var i = this._syncedSignals.length - 1; i >= 0; i--){\n\t\tvar syncedSignal = this._syncedSignals[i];\n\t\tif (syncedSignal.signal === signal){\n\t\t\tsyncedSignal.ratio.dispose();\n\t\t\tsyncedSignal.signal.value = syncedSignal.initial;\n\t\t\tthis._syncedSignals.splice(i, 1);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Transport} this\n *  @private\n */\nTone.Transport.prototype.dispose = function(){\n\tTone.Emitter.prototype.dispose.call(this);\n\tthis._clock.dispose();\n\tthis._clock = null;\n\tthis._writable(\"bpm\");\n\tthis.bpm = null;\n\tthis._timeline.dispose();\n\tthis._timeline = null;\n\tthis._repeatedEvents.dispose();\n\tthis._repeatedEvents = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n//\tINITIALIZATION\n///////////////////////////////////////////////////////////////////////////////\n\nvar TransportConstructor = Tone.Transport;\nTone.Transport = new TransportConstructor();\n\nTone.Context.on(\"init\", function(context){\n\tif (context.transport && context.transport.isTransport){\n\t\tTone.Transport = context.transport;\n\t} else {\n\t\tTone.Transport = new TransportConstructor();\n\t}\n});\n\nTone.Context.on(\"close\", function(context){\n\tif (context.transport && context.transport.isTransport){\n\t\tcontext.transport.dispose();\n\t}\n});\n\nexport default Tone.Transport;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../source/Source\";\nimport \"../core/Transport\";\nimport \"../source/OscillatorNode\";\n\n/**\n *  @class Tone.Oscillator supports a number of features including\n *         phase rotation, multiple oscillator types (see Tone.Oscillator.type),\n *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {Frequency} [frequency] Starting frequency\n *  @param {string} [type] The oscillator type. Read more about type below.\n *  @example\n * //make and start a 440hz sine tone\n * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n */\nTone.Oscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.Oscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  the main oscillator\n\t *  @type {OscillatorNode}\n\t *  @private\n\t */\n\tthis._oscillator = null;\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  the periodic wave\n\t *  @type {PeriodicWave}\n\t *  @private\n\t */\n\tthis._wave = null;\n\n\t/**\n\t *  The partials of the oscillator\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._partials = options.partials;\n\n\t/**\n\t *  The number of partials to limit or extend the periodic wave by\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._partialCount = options.partialCount;\n\n\t/**\n\t *  the phase of the oscillator\n\t *  between 0 - 360\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._phase = options.phase;\n\n\t/**\n\t *  the type of the oscillator\n\t *  @type {string}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t//setup\n\tif (options.partialCount && options.type !== Tone.Oscillator.Type.Custom){\n\t\tthis._type = this.baseType + options.partialCount.toString();\n\t}\n\tthis.phase = this._phase;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.Oscillator, Tone.Source);\n\n/**\n *  the default parameters\n *  @type {Object}\n */\nTone.Oscillator.defaults = {\n\t\"type\" : \"sine\",\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"partials\" : [],\n\t\"partialCount\" : 0\n};\n\n/**\n *  The Oscillator types\n *  @enum {String}\n */\nTone.Oscillator.Type = {\n\tSine : \"sine\",\n\tTriangle : \"triangle\",\n\tSawtooth : \"sawtooth\",\n\tSquare : \"square\",\n\tCustom : \"custom\"\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.Oscillator.prototype._start = function(time){\n\tthis.log(\"start\", time);\n\t//new oscillator with previous values\n\tvar oscillator = new Tone.OscillatorNode();\n\tthis._oscillator = oscillator;\n\tif (this._wave){\n\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t} else {\n\t\tthis._oscillator.type = this._type;\n\t}\n\t//connect the control signal to the oscillator frequency & detune\n\tthis._oscillator.connect(this.output);\n\tthis.frequency.connect(this._oscillator.frequency);\n\tthis.detune.connect(this._oscillator.detune);\n\n\t//start the oscillator\n\ttime = this.toSeconds(time);\n\tthis._oscillator.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @private\n *  @param  {Time} [time=now] (optional) timing parameter\n *  @returns {Tone.Oscillator} this\n */\nTone.Oscillator.prototype._stop = function(time){\n\tthis.log(\"stop\", time);\n\tif (this._oscillator){\n\t\ttime = this.toSeconds(time);\n\t\tthis._oscillator.stop(time);\n\t}\n\treturn this;\n};\n\n/**\n * Restart the oscillator. Does not stop the oscillator, but instead\n * just cancels any scheduled 'stop' from being invoked.\n * @param  {Time=} time\n * @return {Tone.Oscillator}      this\n */\nTone.Oscillator.prototype.restart = function(time){\n\tif (this._oscillator){\n\t\tthis._oscillator.cancelStop();\n\t}\n\tthis._state.cancel(this.toSeconds(time));\n\treturn this;\n};\n\n/**\n *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n *  will also affect the oscillators frequency.\n *  @returns {Tone.Oscillator} this\n *  @example\n * Tone.Transport.bpm.value = 120;\n * osc.frequency.value = 440;\n * //the ration between the bpm and the frequency will be maintained\n * osc.syncFrequency();\n * Tone.Transport.bpm.value = 240;\n * // the frequency of the oscillator is doubled to 880\n */\nTone.Oscillator.prototype.syncFrequency = function(){\n\tTone.Transport.syncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n *  Unsync the oscillator's frequency from the Transport.\n *  See Tone.Oscillator.syncFrequency\n *  @returns {Tone.Oscillator} this\n */\nTone.Oscillator.prototype.unsyncFrequency = function(){\n\tTone.Transport.unsyncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n * 8 partials of the triangle wave.\n * <br><br>\n * Uses PeriodicWave internally even for native types so that it can set the phase.\n * PeriodicWave equations are from the\n * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n *\n * @memberOf Tone.Oscillator#\n * @type {string}\n * @name type\n * @example\n * //set it to a square wave\n * osc.type = \"square\";\n * @example\n * //set the first 6 partials of a sawtooth wave\n * osc.type = \"sawtooth6\";\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tvar isBasicType = [Tone.Oscillator.Type.Sine, Tone.Oscillator.Type.Square, Tone.Oscillator.Type.Triangle, Tone.Oscillator.Type.Sawtooth].includes(type);\n\t\tif (this._phase === 0 && isBasicType){\n\t\t\tthis._wave = null;\n\t\t\tthis._partialCount = 0;\n\t\t\t//just go with the basic approach\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tthis._oscillator.type = type;\n\t\t\t}\n\t\t} else {\n\t\t\tvar coefs = this._getRealImaginary(type, this._phase);\n\t\t\tvar periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t\t\tthis._wave = periodicWave;\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t}\n\t\t}\n\t\tthis._type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.Oscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._type.replace(this.partialCount, \"\");\n\t},\n\tset : function(baseType){\n\t\tif (this.partialCount && this._type !== Tone.Oscillator.Type.Custom && baseType !== Tone.Oscillator.Type.Custom){\n\t\t\tthis.type = baseType + this.partialCount;\n\t\t} else {\n\t\t\tthis.type = baseType;\n\t\t}\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @example\n * osc.type = 'sine'\n * osc.partialCount = 3\n * //is equivalent to\n * osc.type = 'sine3'\n * @memberOf Tone.Oscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._partialCount;\n\t},\n\tset : function(p){\n\t\tvar type = this._type;\n\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\t\tif (partial){\n\t\t\ttype = partial[1];\n\t\t}\n\t\tif (this._type !== Tone.Oscillator.Type.Custom){\n\t\t\tif (p === 0){\n\t\t\t\tthis.type = type;\n\t\t\t} else {\n\t\t\t\tthis.type = type + p.toString();\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. \n *  @memberOf Tone.Oscillator#\n *  @returns {Object}\n */\nTone.Oscillator.prototype.get = function(){\n\tvar values = Tone.prototype.get.apply(this, arguments);\n\tif (values.type !== Tone.Oscillator.Type.Custom){\n\t\tdelete values.partials;\n\t}\n\treturn values;\n};\n\n/**\n *  Returns the real and imaginary components based\n *  on the oscillator type.\n *  @returns {Array} [real, imaginary]\n *  @private\n */\nTone.Oscillator.prototype._getRealImaginary = function(type, phase){\n\tvar fftSize = 4096;\n\tvar periodicWaveSize = fftSize / 2;\n\n\tvar real = new Float32Array(periodicWaveSize);\n\tvar imag = new Float32Array(periodicWaveSize);\n\n\tvar partialCount = 1;\n\tif (type === Tone.Oscillator.Type.Custom){\n\t\tpartialCount = this._partials.length + 1;\n\t\tthis._partialCount = this._partials.length;\n\t\tperiodicWaveSize = partialCount;\n\t} else {\n\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\tif (partial){\n\t\t\tpartialCount = parseInt(partial[2]) + 1;\n\t\t\tthis._partialCount = parseInt(partial[2]);\n\t\t\ttype = partial[1];\n\t\t\tpartialCount = Math.max(partialCount, 2);\n\t\t\tperiodicWaveSize = partialCount;\n\t\t} else {\n\t\t\tthis._partialCount = 0;\n\t\t}\n\t\tthis._partials = [];\n\t}\n\n\tfor (var n = 1; n < periodicWaveSize; ++n){\n\t\tvar piFactor = 2 / (n * Math.PI);\n\t\tvar b;\n\t\tswitch (type){\n\t\t\tcase Tone.Oscillator.Type.Sine:\n\t\t\t\tb = (n <= partialCount) ? 1 : 0;\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Square:\n\t\t\t\tb = (n & 1) ? 2 * piFactor : 0;\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Sawtooth:\n\t\t\t\tb = piFactor * ((n & 1) ? 1 : -1);\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Triangle:\n\t\t\t\tif (n & 1){\n\t\t\t\t\tb = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n\t\t\t\t} else {\n\t\t\t\t\tb = 0;\n\t\t\t\t}\n\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\tbreak;\n\t\t\tcase Tone.Oscillator.Type.Custom:\n\t\t\t\tb = this._partials[n - 1];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new TypeError(\"Tone.Oscillator: invalid type: \"+type);\n\t\t}\n\t\tif (b !== 0){\n\t\t\treal[n] = -b * Math.sin(phase * n);\n\t\t\timag[n] = b * Math.cos(phase * n);\n\t\t} else {\n\t\t\treal[n] = 0;\n\t\t\timag[n] = 0;\n\t\t}\n\t}\n\treturn [real, imag];\n};\n\n/**\n *  Compute the inverse FFT for a given phase.\n *  @param  {Float32Array}  real\n *  @param  {Float32Array}  imag\n *  @param  {NormalRange}  phase\n *  @return  {AudioRange}\n *  @private\n */\nTone.Oscillator.prototype._inverseFFT = function(real, imag, phase){\n\tvar sum = 0;\n\tvar len = real.length;\n\tfor (var i = 0; i < len; i++){\n\t\tsum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t}\n\treturn sum;\n};\n\n/**\n *  Returns the initial value of the oscillator.\n *  @return  {AudioRange}\n *  @private\n */\nTone.Oscillator.prototype._getInitialValue = function(){\n\tvar coefs = this._getRealImaginary(this._type, 0);\n\tvar real = coefs[0];\n\tvar imag = coefs[1];\n\tvar maxValue = 0;\n\tvar twoPi = Math.PI * 2;\n\t//check for peaks in 8 places\n\tfor (var i = 0; i < 8; i++){\n\t\tmaxValue = Math.max(this._inverseFFT(real, imag, (i / 8) * twoPi), maxValue);\n\t}\n\treturn -this._inverseFFT(real, imag, this._phase) / maxValue;\n};\n\n/**\n * The partials of the waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.Oscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._partials;\n\t},\n\tset : function(partials){\n\t\tthis._partials = partials;\n\t\tthis.type = Tone.Oscillator.Type.Custom;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.Oscillator#\n * @type {Degrees}\n * @name phase\n * @example\n * osc.phase = 180; //flips the phase of the oscillator\n */\nObject.defineProperty(Tone.Oscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._phase * (180 / Math.PI);\n\t},\n\tset : function(phase){\n\t\tthis._phase = phase * Math.PI / 180;\n\t\t//reset the type\n\t\tthis.type = this._type;\n\t}\n});\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Oscillator} this\n */\nTone.Oscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tif (this._oscillator !== null){\n\t\tthis._oscillator.dispose();\n\t\tthis._oscillator = null;\n\t}\n\tthis._wave = null;\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis._partials = null;\n\treturn this;\n};\n\nexport default Tone.Oscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n *  @extends {Tone}\n *  @param {Time=} delayTime The delay applied to the incoming signal.\n *  @param {Time=} maxDelay The maximum delay time.\n */\nTone.Delay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"maxDelay\"], Tone.Delay);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t * The maximum delay time initialized with the node\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._maxDelay = Math.max(this.toSeconds(options.maxDelay), this.toSeconds(options.delayTime));\n\t\n\t/**\n\t *  The native delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._delayNode = this.input = this.output = this.context.createDelay(this._maxDelay);\n\n\t/**\n\t *  The amount of time the incoming signal is\n\t *  delayed.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = new Tone.Param({\n\t\t\"param\" : this._delayNode.delayTime,\n\t\t\"units\" : Tone.Type.Time,\n\t\t\"value\" : options.delayTime\n\t});\n\n\tthis._readOnly(\"delayTime\");\n};\n\nTone.extend(Tone.Delay, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Delay.defaults = {\n\t\"maxDelay\" : 1,\n\t\"delayTime\" : 0\n};\n\n/**\n * The maximum delay time. This cannot be changed. The value is passed into the constructor.\n * @memberof Tone.Delay#\n * @type {Time}\n * @name maxDelay\n * @readOnly\n */\nObject.defineProperty(Tone.Delay.prototype, \"maxDelay\", {\n\tget : function(){\n\t\treturn this._maxDelay;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.Delay}  this\n */\nTone.Delay.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._delayNode.disconnect();\n\tthis._delayNode = null;\n\tthis._writable(\"delayTime\");\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.Delay;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *\t@class  Tone.Split splits an incoming signal into left and right channels.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {number} [channels=2] The number of channels to merge.\n *  @example\n * var split = new Tone.Split();\n * stereoSignal.connect(split);\n */\nTone.Split = function(channels){\n\n\t//defaults to 2 channels\n\tchannels = Tone.defaultArg(channels, 2);\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(0, channels);\n\n\t/**\n\t *  @type {ChannelSplitterNode}\n\t *  @private\n\t */\n\tthis._splitter = this.input = this.context.createChannelSplitter(channels);\n\n\t//connections\n\tfor (var i = 0; i < channels; i++){\n\t\tthis.output[i] = new Tone.Gain();\n\t\tTone.connect(this._splitter, this.output[i], i, 0);\n\t\tthis.output[i].channelCount = 1;\n\t\tthis.output[i].channelCountMode = \"explicit\";\n\t}\n\n\t/**\n\t *  Left channel output.\n\t *  Alias for <code>output[0]</code>\n\t *  @type {Tone.Gain}\n\t */\n\tthis.left = this.output[0];\n\n\t/**\n\t *  Right channel output.\n\t *  Alias for <code>output[1]</code>\n\t *  @type {Tone.Gain}\n\t */\n\tthis.right = this.output[1];\n};\n\nTone.extend(Tone.Split, Tone.AudioNode);\n\n/**\n *  Clean up.\n *  @returns {Tone.Split} this\n */\nTone.Split.prototype.dispose = function(){\n\tthis.output.forEach(function(output){\n\t\toutput.dispose();\n\t});\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._splitter.disconnect();\n\tthis.left = null;\n\tthis.right = null;\n\tthis._splitter = null;\n\treturn this;\n};\n\nexport default Tone.Split;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Emitter\";\nimport \"../core/Timeline\";\nimport \"../shim/AudioContext\";\n\nvar AudioContextProperties = [\"baseLatency\", \"destination\", \"currentTime\", \"sampleRate\", \"listener\", \"state\"];\nvar AudioContextMethods = [\"suspend\", \"close\", \"resume\", \"getOutputTimestamp\", \"createMediaElementSource\", \"createMediaStreamSource\", \"createMediaStreamDestination\", \"createBuffer\", \"decodeAudioData\", \"createBufferSource\", \"createConstantSource\", \"createGain\", \"createDelay\", \"createBiquadFilter\", \"createIIRFilter\", \"createWaveShaper\", \"createPanner\", \"createConvolver\", \"createDynamicsCompressor\", \"createAnalyser\", \"createScriptProcessor\", \"createStereoPanner\", \"createOscillator\", \"createPeriodicWave\", \"createChannelSplitter\", \"createChannelMerger\", \"audioWorklet\"];\n\n/**\n *  @class Wrapper around the native AudioContext.\n *  @extends {Tone.Emitter}\n *  @param {AudioContext=} context optionally pass in a context\n */\nTone.Context = function(){\n\n\tTone.Emitter.call(this);\n\n\tvar options = Tone.defaults(arguments, [\"context\"], Tone.Context);\n\n\tif (!options.context){\n\t\toptions.context = new Tone.global.AudioContext();\n\t\tif (!options.context){\n\t\t\tthrow new Error(\"could not create AudioContext. Possibly too many AudioContexts running already.\");\n\t\t}\n\t}\n\tthis._context = options.context;\n\t//make sure it's not an AudioContext wrapper\n\twhile (this._context.rawContext){\n\t\tthis._context = this._context.rawContext;\n\t}\n\n\t// extend all of the properties\n\tAudioContextProperties.forEach(function(prop){\n\t\tthis._defineProperty(this._context, prop);\n\t}.bind(this));\n\t// extend all of the methods\n\tAudioContextMethods.forEach(function(method){\n\t\tthis._defineMethod(this._context, method);\n\t}.bind(this));\n\n\t/**\n\t *  The default latency hint\n\t *  @type  {String}\n\t *  @private\n\t */\n\tthis._latencyHint = options.latencyHint;\n\n\t/**\n\t *  An object containing all of the constants AudioBufferSourceNodes\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tthis._constants = {};\n\n\t///////////////////////////////////////////////////////////////////////\n\t// WORKER\n\t///////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  The amount of time events are scheduled\n\t *  into the future\n\t *  @type  {Number}\n\t */\n\tthis.lookAhead = options.lookAhead;\n\n\t/**\n\t *  A reference to the actual computed update interval\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._computedUpdateInterval = 0;\n\n\t/**\n\t *  A reliable callback method\n\t *  @private\n\t *  @type  {Ticker}\n\t */\n\tthis._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval);\n\n\t///////////////////////////////////////////////////////////////////////\n\t// TIMEOUTS\n\t///////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  All of the setTimeout events.\n\t *  @type  {Tone.Timeline}\n\t *  @private\n\t */\n\tthis._timeouts = new Tone.Timeline();\n\n\t/**\n\t *  The timeout id counter\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._timeoutIds = 0;\n\n\tthis.on(\"tick\", this._timeoutLoop.bind(this));\n\n\t//forward state change events\n\tthis._context.onstatechange = function(e){\n\t\tthis.emit(\"statechange\", e);\n\t}.bind(this);\n};\n\nTone.extend(Tone.Context, Tone.Emitter);\nTone.Emitter.mixin(Tone.Context);\n\n/**\n * defaults\n * @static\n * @type {Object}\n */\nTone.Context.defaults = {\n\t\"clockSource\" : \"worker\",\n\t\"latencyHint\" : \"interactive\",\n\t\"lookAhead\" : 0.1,\n\t\"updateInterval\" : 0.03\n};\n\n/**\n * Is an instanceof Tone.Context\n * @type {Boolean}\n */\nTone.Context.prototype.isContext = true;\n\n/**\n *  Define a property on this Tone.Context.\n *  This is used to extend the native AudioContext\n *  @param  {AudioContext}  context\n *  @param  {String}  prop\n *  @private\n */\nTone.Context.prototype._defineProperty = function(context, prop){\n\tif (Tone.isUndef(this[prop])){\n\t\tObject.defineProperty(this, prop, {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn context[prop];\n\t\t\t},\n\t\t\t\"set\" : function(val){\n\t\t\t\tcontext[prop] = val;\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n *  Define a method on this Tone.Context.\n *  This is used to extend the native AudioContext\n *  @param  {AudioContext}  context\n *  @param  {String}  prop\n *  @private\n */\nTone.Context.prototype._defineMethod = function(context, prop){\n\tif (Tone.isUndef(this[prop])){\n\t\tObject.defineProperty(this, prop, {\n\t\t\t\"get\" : function(){\n\t\t\t\treturn context[prop].bind(context);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n *  The current audio context time\n *  @return  {Number}\n */\nTone.Context.prototype.now = function(){\n\treturn this._context.currentTime + this.lookAhead;\n};\n\n/**\n *  The audio output destination. Alias for Tone.Master\n *  @readyOnly\n *  @type  {Tone.Master}\n */\nObject.defineProperty(Tone.Context.prototype, \"destination\", {\n\t\"get\" : function(){\n\t\tif (!this.master){\n\t\t\treturn this._context.destination;\n\t\t} else {\n\t\t\treturn this.master;\n\t\t}\n\t}\n});\n\n/**\n *  Starts the audio context from a suspended state. This is required\n *  to initially start the AudioContext.\n *  @return  {Promise}\n */\nTone.Context.prototype.resume = function(){\n\tif (this._context.state === \"suspended\" && this._context instanceof AudioContext){\n\t\treturn this._context.resume();\n\t} else {\n\t\treturn Promise.resolve();\n\t}\n};\n\n/**\n *  Promise which is invoked when the context is running.\n *  Tries to resume the context if it's not started.\n *  @return  {Promise}\n */\nTone.Context.prototype.close = function(){\n\tvar closePromise = Promise.resolve();\n\t//never close the global Tone.Context\n\tif (this !== Tone.global.TONE_AUDIO_CONTEXT){\n\t\tclosePromise = this.rawContext.close();\n\t}\n\treturn closePromise.then(function(){\n\t\tTone.Context.emit(\"close\", this);\n\t}.bind(this));\n};\n\n/**\n *  Generate a looped buffer at some constant value.\n *  @param  {Number}  val\n *  @return  {BufferSourceNode}\n */\nTone.Context.prototype.getConstant = function(val){\n\tif (this._constants[val]){\n\t\treturn this._constants[val];\n\t} else {\n\t\tvar buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\t\tvar arr = buffer.getChannelData(0);\n\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\tarr[i] = val;\n\t\t}\n\t\tvar constant = this._context.createBufferSource();\n\t\tconstant.channelCount = 1;\n\t\tconstant.channelCountMode = \"explicit\";\n\t\tconstant.buffer = buffer;\n\t\tconstant.loop = true;\n\t\tconstant.start(0);\n\t\tthis._constants[val] = constant;\n\t\treturn constant;\n\t}\n};\n\n/**\n *  The private loop which keeps track of the context scheduled timeouts\n *  Is invoked from the clock source\n *  @private\n */\nTone.Context.prototype._timeoutLoop = function(){\n\tvar now = this.now();\n\twhile (this._timeouts && this._timeouts.length && this._timeouts.peek().time <= now){\n\t\tthis._timeouts.shift().callback();\n\t}\n};\n\n/**\n *  A setTimeout which is gaurenteed by the clock source.\n *  Also runs in the offline context.\n *  @param  {Function}  fn       The callback to invoke\n *  @param  {Seconds}    timeout  The timeout in seconds\n *  @returns {Number} ID to use when invoking Tone.Context.clearTimeout\n */\nTone.Context.prototype.setTimeout = function(fn, timeout){\n\tthis._timeoutIds++;\n\tvar now = this.now();\n\tthis._timeouts.add({\n\t\t\"callback\" : fn,\n\t\t\"time\" : now + timeout,\n\t\t\"id\" : this._timeoutIds\n\t});\n\treturn this._timeoutIds;\n};\n\n/**\n *  Clears a previously scheduled timeout with Tone.context.setTimeout\n *  @param  {Number}  id  The ID returned from setTimeout\n *  @return  {Tone.Context}  this\n */\nTone.Context.prototype.clearTimeout = function(id){\n\tthis._timeouts.forEach(function(event){\n\t\tif (event.id === id){\n\t\t\tthis.remove(event);\n\t\t}\n\t});\n\treturn this;\n};\n\n/**\n *  How often the Web Worker callback is invoked.\n *  This number corresponds to how responsive the scheduling\n *  can be. Context.updateInterval + Context.lookAhead gives you the\n *  total latency between scheduling an event and hearing it.\n *  @type {Number}\n *  @memberOf Tone.Context#\n *  @name updateInterval\n */\nObject.defineProperty(Tone.Context.prototype, \"updateInterval\", {\n\t\"get\" : function(){\n\t\treturn this._ticker.updateInterval;\n\t},\n\t\"set\" : function(interval){\n\t\tthis._ticker.updateInterval = interval;\n\t}\n});\n\n/**\n *  The unwrapped AudioContext.\n *  @type {AudioContext}\n *  @memberOf Tone.Context#\n *  @name rawContext\n *  @readOnly\n */\nObject.defineProperty(Tone.Context.prototype, \"rawContext\", {\n\t\"get\" : function(){\n\t\treturn this._context;\n\t}\n});\n\n/**\n *  What the source of the clock is, either \"worker\" (Web Worker [default]),\n *  \"timeout\" (setTimeout), or \"offline\" (none).\n *  @type {String}\n *  @memberOf Tone.Context#\n *  @name clockSource\n */\nObject.defineProperty(Tone.Context.prototype, \"clockSource\", {\n\t\"get\" : function(){\n\t\treturn this._ticker.type;\n\t},\n\t\"set\" : function(type){\n\t\tthis._ticker.type = type;\n\t}\n});\n\n/**\n *  The type of playback, which affects tradeoffs between audio\n *  output latency and responsiveness.\n *\n *  In addition to setting the value in seconds, the latencyHint also\n *  accepts the strings \"interactive\" (prioritizes low latency),\n *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n *  latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n *  @type {String|Seconds}\n *  @memberOf Tone.Context#\n *  @name latencyHint\n *  @example\n * //set the lookAhead to 0.3 seconds\n * Tone.context.latencyHint = 0.3;\n */\nObject.defineProperty(Tone.Context.prototype, \"latencyHint\", {\n\t\"get\" : function(){\n\t\treturn this._latencyHint;\n\t},\n\t\"set\" : function(hint){\n\t\tvar lookAhead = hint;\n\t\tthis._latencyHint = hint;\n\t\tif (Tone.isString(hint)){\n\t\t\tswitch (hint){\n\t\t\t\tcase \"interactive\" :\n\t\t\t\t\tlookAhead = 0.1;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"playback\" :\n\t\t\t\t\tlookAhead = 0.8;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"balanced\" :\n\t\t\t\t\tlookAhead = 0.25;\n\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fastest\" :\n\t\t\t\t\tthis._context.latencyHint = \"interactive\";\n\t\t\t\t\tlookAhead = 0.01;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.lookAhead = lookAhead;\n\t\tthis.updateInterval = lookAhead/3;\n\t}\n});\n\n/**\n *  Unlike other dispose methods, this returns a Promise\n *  which executes when the context is closed and disposed\n *  @returns {Promise} this\n */\nTone.Context.prototype.dispose = function(){\n\treturn this.close().then(function(){\n\t\tTone.Emitter.prototype.dispose.call(this);\n\t\tthis._ticker.dispose();\n\t\tthis._ticker = null;\n\t\tthis._timeouts.dispose();\n\t\tthis._timeouts = null;\n\t\tfor (var con in this._constants){\n\t\t\tthis._constants[con].disconnect();\n\t\t}\n\t\tthis._constants = null;\n\t}.bind(this));\n};\n\n/**\n * @class A class which provides a reliable callback using either\n *        a Web Worker, or if that isn't supported, falls back to setTimeout.\n * @private\n */\nvar Ticker = function(callback, type, updateInterval){\n\n\t/**\n\t * Either \"worker\" or \"timeout\"\n\t * @type {String}\n\t * @private\n\t */\n\tthis._type = type;\n\n\t/**\n\t * The update interval of the worker\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._updateInterval = updateInterval;\n\n\t/**\n\t * The callback to invoke at regular intervals\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._callback = Tone.defaultArg(callback, Tone.noOp);\n\n\t//create the clock source for the first time\n\tthis._createClock();\n};\n\n/**\n * The possible ticker types\n * @private\n * @type {Object}\n */\nTicker.Type = {\n\t\"Worker\" : \"worker\",\n\t\"Timeout\" : \"timeout\",\n\t\"Offline\" : \"offline\"\n};\n\n/**\n *  Generate a web worker\n *  @return  {WebWorker}\n *  @private\n */\nTicker.prototype._createWorker = function(){\n\n\t//URL Shim\n\tTone.global.URL = Tone.global.URL || Tone.global.webkitURL;\n\n\tvar blob = new Blob([\n\t\t//the initial timeout time\n\t\t\"var timeoutTime = \"+(this._updateInterval * 1000).toFixed(1)+\";\" +\n\t\t//onmessage callback\n\t\t\"self.onmessage = function(msg){\" +\n\t\t\"\ttimeoutTime = parseInt(msg.data);\" +\n\t\t\"};\" +\n\t\t//the tick function which posts a message\n\t\t//and schedules a new tick\n\t\t\"function tick(){\" +\n\t\t\"\tsetTimeout(tick, timeoutTime);\" +\n\t\t\"\tself.postMessage('tick');\" +\n\t\t\"}\" +\n\t\t//call tick initially\n\t\t\"tick();\"\n\t]);\n\tvar blobUrl = URL.createObjectURL(blob);\n\tvar worker = new Worker(blobUrl);\n\n\tworker.onmessage = this._callback.bind(this);\n\n\tthis._worker = worker;\n};\n\n/**\n * Create a timeout loop\n * @private\n */\nTicker.prototype._createTimeout = function(){\n\tthis._timeout = setTimeout(function(){\n\t\tthis._createTimeout();\n\t\tthis._callback();\n\t}.bind(this), this._updateInterval * 1000);\n};\n\n/**\n * Create the clock source.\n * @private\n */\nTicker.prototype._createClock = function(){\n\tif (this._type === Ticker.Type.Worker){\n\t\ttry {\n\t\t\tthis._createWorker();\n\t\t} catch (e){\n\t\t\t// workers not supported, fallback to timeout\n\t\t\tthis._type = Ticker.Type.Timeout;\n\t\t\tthis._createClock();\n\t\t}\n\t} else if (this._type === Ticker.Type.Timeout){\n\t\tthis._createTimeout();\n\t}\n};\n\n/**\n * @memberOf Ticker#\n * @type {Number}\n * @name updateInterval\n * @private\n */\nObject.defineProperty(Ticker.prototype, \"updateInterval\", {\n\t\"get\" : function(){\n\t\treturn this._updateInterval;\n\t},\n\t\"set\" : function(interval){\n\t\tthis._updateInterval = Math.max(interval, 128/44100);\n\t\tif (this._type === Ticker.Type.Worker){\n\t\t\tthis._worker.postMessage(Math.max(interval * 1000, 1));\n\t\t}\n\t}\n});\n\n/**\n * The type of the ticker, either a worker or a timeout\n * @memberOf Ticker#\n * @type {Number}\n * @name type\n * @private\n */\nObject.defineProperty(Ticker.prototype, \"type\", {\n\t\"get\" : function(){\n\t\treturn this._type;\n\t},\n\t\"set\" : function(type){\n\t\tthis._disposeClock();\n\t\tthis._type = type;\n\t\tthis._createClock();\n\t}\n});\n\n/**\n * Clean up the current clock source\n * @private\n */\nTicker.prototype._disposeClock = function(){\n\tif (this._timeout){\n\t\tclearTimeout(this._timeout);\n\t\tthis._timeout = null;\n\t}\n\tif (this._worker){\n\t\tthis._worker.terminate();\n\t\tthis._worker.onmessage = null;\n\t\tthis._worker = null;\n\t}\n};\n\n/**\n * Clean up\n * @private\n */\nTicker.prototype.dispose = function(){\n\tthis._disposeClock();\n\tthis._callback = null;\n};\n\n// set the audio context initially, and if one is not already created\nif (Tone.supported && !Tone.initialized){\t\t\t\n\tif (!Tone.global.TONE_AUDIO_CONTEXT){\n\t\tTone.global.TONE_AUDIO_CONTEXT = new Tone.Context();\n\t}\n\tTone.context = Tone.global.TONE_AUDIO_CONTEXT;\n\n\t// log on first initialization\n\t// allow optional silencing of this log\n\tif (!Tone.global.TONE_SILENCE_LOGGING){\n\t\tvar prefix = \"v\";\n\t\tif (Tone.version === \"dev\"){\n\t\t\tprefix = \"\";\n\t\t}\n\t\tvar printString = \" * Tone.js \" + prefix + Tone.version + \" * \"; \n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(\"%c\" + printString, \"background: #000; color: #fff\");\n\t}\n} else if (!Tone.supported && !Tone.global.TONE_SILENCE_LOGGING){\n\t// eslint-disable-next-line no-console\n\tconsole.warn(\"This browser does not support Tone.js\");\n}\n\nexport default Tone.Context;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\nimport \"../core/Master\";\n\n/**\n *  @class  Base-class for all instruments\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n */\nTone.Instrument = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Instrument.defaults);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The output and volume triming node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t/**\n\t * Keep track of all events scheduled to the transport\n\t * when the instrument is 'synced'\n\t * @type {Array<Number>}\n\t * @private\n\t */\n\tthis._scheduledEvents = [];\n};\n\nTone.extend(Tone.Instrument, Tone.AudioNode);\n\n/**\n *  the default attributes\n *  @type {object}\n */\nTone.Instrument.defaults = {\n\t/** the volume of the output in decibels */\n\t\"volume\" : 0\n};\n\n/**\n *  @abstract\n *  @param {string|number} note the note to trigger\n *  @param {Time} [time=now] the time to trigger the ntoe\n *  @param {number} [velocity=1] the velocity to trigger the note\n */\nTone.Instrument.prototype.triggerAttack = Tone.noOp;\n\n/**\n *  @abstract\n *  @param {Time} [time=now] when to trigger the release\n */\nTone.Instrument.prototype.triggerRelease = Tone.noOp;\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * instrument.sync()\n * //schedule 3 notes when the transport first starts\n * instrument.triggerAttackRelease('C4', '8n', 0)\n * instrument.triggerAttackRelease('E4', '8n', '8n')\n * instrument.triggerAttackRelease('G4', '8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n * Wrap the given method so that it can be synchronized\n * @param {String} method Which method to wrap and sync\n * @param  {Number} timePosition What position the time argument appears in\n * @private\n */\nTone.Instrument.prototype._syncMethod = function(method, timePosition){\n\tvar originalMethod = this[\"_original_\"+method] = this[method];\n\tthis[method] = function(){\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\tvar time = args[timePosition];\n\t\tvar id = Tone.Transport.schedule(function(t){\n\t\t\targs[timePosition] = t;\n\t\t\toriginalMethod.apply(this, args);\n\t\t}.bind(this), time);\n\t\tthis._scheduledEvents.push(id);\n\t}.bind(this);\n};\n\n/**\n * Unsync the instrument from the Transport\n * @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.unsync = function(){\n\tthis._scheduledEvents.forEach(function(id){\n\t\tTone.Transport.clear(id);\n\t});\n\tthis._scheduledEvents = [];\n\tif (this._original_triggerAttack){\n\t\tthis.triggerAttack = this._original_triggerAttack;\n\t\tthis.triggerRelease = this._original_triggerRelease;\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the attack and then the release after the duration.\n *  @param  {Frequency} note     The note to trigger.\n *  @param  {Time} duration How long the note should be held for before\n *                          triggering the release. This value must be greater than 0.\n *  @param {Time} [time=now]  When the note should be triggered.\n *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n *  @returns {Tone.Instrument} this\n *  @example\n * //trigger \"C4\" for the duration of an 8th note\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.Instrument.prototype.triggerAttackRelease = function(note, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(note, time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.Instrument} this\n */\nTone.Instrument.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis._writable([\"volume\"]);\n\tthis.volume = null;\n\tthis.unsync();\n\tthis._scheduledEvents = null;\n\treturn this;\n};\n\nexport default Tone.Instrument;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Signal\";\n\n/**\n *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n *         See Tone.GainToAudio.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n *  var a2g = new Tone.AudioToGain();\n */\nTone.AudioToGain = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._norm = this.input = this.output = new Tone.WaveShaper(function(x){\n\t\treturn (x + 1) / 2;\n\t});\n};\n\nTone.extend(Tone.AudioToGain, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.AudioToGain} this\n */\nTone.AudioToGain.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._norm.dispose();\n\tthis._norm = null;\n\treturn this;\n};\n\nexport default Tone.AudioToGain;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Subtract\";\nimport \"../signal/EqualPowerGain\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n * @class  Tone.Crossfade provides equal power fading between two inputs.\n *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n *\n * @constructor\n * @extends {Tone.AudioNode}\n * @param {NormalRange} [initialFade=0.5]\n * @example\n * var crossFade = new Tone.CrossFade(0.5);\n * //connect effect A to crossfade from\n * //effect output 0 to crossfade input 0\n * effectA.connect(crossFade, 0, 0);\n * //connect effect B to crossfade from\n * //effect output 0 to crossfade input 1\n * effectB.connect(crossFade, 0, 1);\n * crossFade.fade.value = 0;\n * // ^ only effectA is output\n * crossFade.fade.value = 1;\n * // ^ only effectB is output\n * crossFade.fade.value = 0.5;\n * // ^ the two signals are mixed equally.\n */\nTone.CrossFade = function(initialFade){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(2, 1);\n\n\t/**\n\t *  Alias for <code>input[0]</code>.\n\t *  @type {Tone.Gain}\n\t */\n\tthis.a = this.input[0] = new Tone.Gain();\n\n\t/**\n\t *  Alias for <code>input[1]</code>.\n\t *  @type {Tone.Gain}\n\t */\n\tthis.b = this.input[1] = new Tone.Gain();\n\n\t/**\n\t * \tThe mix between the two inputs. A fade value of 0\n\t * \twill output 100% <code>input[0]</code> and\n\t * \ta value of 1 will output 100% <code>input[1]</code>.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.fade = new Tone.Signal(Tone.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\n\t/**\n\t *  equal power gain cross fade\n\t *  @private\n\t *  @type {Tone.EqualPowerGain}\n\t */\n\tthis._equalPowerA = new Tone.EqualPowerGain();\n\n\t/**\n\t *  equal power gain cross fade\n\t *  @private\n\t *  @type {Tone.EqualPowerGain}\n\t */\n\tthis._equalPowerB = new Tone.EqualPowerGain();\n\n\t/**\n\t *  invert the incoming signal\n\t *  @private\n\t *  @type {Tone}\n\t */\n\tthis._one = this.context.getConstant(1);\n\n\t/**\n\t *  invert the incoming signal\n\t *  @private\n\t *  @type {Tone.Subtract}\n\t */\n\tthis._invert = new Tone.Subtract();\n\n\t//connections\n\tthis.a.connect(this.output);\n\tthis.b.connect(this.output);\n\tthis.fade.chain(this._equalPowerB, this.b.gain);\n\tTone.connect(this._one, this._invert, 0, 0);\n\tthis.fade.connect(this._invert, 0, 1);\n\tthis._invert.chain(this._equalPowerA, this.a.gain);\n\tthis._readOnly(\"fade\");\n};\n\nTone.extend(Tone.CrossFade, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.CrossFade} this\n */\nTone.CrossFade.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"fade\");\n\tthis._equalPowerA.dispose();\n\tthis._equalPowerA = null;\n\tthis._equalPowerB.dispose();\n\tthis._equalPowerB = null;\n\tthis.fade.dispose();\n\tthis.fade = null;\n\tthis._invert.dispose();\n\tthis._invert = null;\n\tthis._one = null;\n\tthis.a.dispose();\n\tthis.a = null;\n\tthis.b.dispose();\n\tthis.b = null;\n\treturn this;\n};\n\nexport default Tone.CrossFade;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class A Timeline class for scheduling and maintaining state\n *         along a timeline. All events must have a \"time\" property.\n *         Internally, events are stored in time order for fast\n *         retrieval.\n *  @extends {Tone}\n *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n */\nTone.Timeline = function(){\n\n\tvar options = Tone.defaults(arguments, [\"memory\"], Tone.Timeline);\n\tTone.call(this);\n\n\t/**\n\t *  The array of scheduled timeline events\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._timeline = [];\n\n\t/**\n\t *  The memory of the timeline, i.e.\n\t *  how many events in the past it will retain\n\t *  @type {Positive}\n\t */\n\tthis.memory = options.memory;\n};\n\nTone.extend(Tone.Timeline);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n */\nTone.Timeline.defaults = {\n\t\"memory\" : Infinity\n};\n\n/**\n *  The number of items in the timeline.\n *  @type {Number}\n *  @memberOf Tone.Timeline#\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.Timeline.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._timeline.length;\n\t}\n});\n\n/**\n *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n *  @param  {Object}  event  The event object to insert into the\n *                           timeline.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.add = function(event){\n\t//the event needs to have a time attribute\n\tif (Tone.isUndef(event.time)){\n\t\tthrow new Error(\"Tone.Timeline: events must have a time attribute\");\n\t}\n\tevent.time = event.time.valueOf();\n\tvar index = this._search(event.time);\n\tthis._timeline.splice(index + 1, 0, event);\n\t//if the length is more than the memory, remove the previous ones\n\tif (this.length > this.memory){\n\t\tvar diff = this.length - this.memory;\n\t\tthis._timeline.splice(0, diff);\n\t}\n\treturn this;\n};\n\n/**\n *  Remove an event from the timeline.\n *  @param  {Object}  event  The event object to remove from the list.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.remove = function(event){\n\tvar index = this._timeline.indexOf(event);\n\tif (index !== -1){\n\t\tthis._timeline.splice(index, 1);\n\t}\n\treturn this;\n};\n\n/**\n *  Get the nearest event whose time is less than or equal to the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object set after that time.\n */\nTone.Timeline.prototype.get = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar index = this._search(time, comparator);\n\tif (index !== -1){\n\t\treturn this._timeline[index];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Return the first event in the timeline without removing it\n *  @returns {Object} The first event object\n */\nTone.Timeline.prototype.peek = function(){\n\treturn this._timeline[0];\n};\n\n/**\n *  Return the first event in the timeline and remove it\n *  @returns {Object} The first event object\n */\nTone.Timeline.prototype.shift = function(){\n\treturn this._timeline.shift();\n};\n\n/**\n *  Get the event which is scheduled after the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object after the given time\n */\nTone.Timeline.prototype.getAfter = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar index = this._search(time, comparator);\n\tif (index + 1 < this._timeline.length){\n\t\treturn this._timeline[index + 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Get the event before the event at the given time.\n *  @param  {Number}  time  The time to query.\n *  @param  {String}  comparator Which value in the object to compare\n *  @returns {Object} The event object before the given time\n */\nTone.Timeline.prototype.getBefore = function(time, comparator){\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar len = this._timeline.length;\n\t//if it's after the last item, return the last item\n\tif (len > 0 && this._timeline[len - 1][comparator] < time){\n\t\treturn this._timeline[len - 1];\n\t}\n\tvar index = this._search(time, comparator);\n\tif (index - 1 >= 0){\n\t\treturn this._timeline[index - 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Cancel events after the given time\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.cancel = function(after){\n\tif (this._timeline.length > 1){\n\t\tvar index = this._search(after);\n\t\tif (index >= 0){\n\t\t\tif (this._timeline[index].time === after){\n\t\t\t\t//get the first item with that time\n\t\t\t\tfor (var i = index; i >= 0; i--){\n\t\t\t\t\tif (this._timeline[i].time === after){\n\t\t\t\t\t\tindex = i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._timeline = this._timeline.slice(0, index);\n\t\t\t} else {\n\t\t\t\tthis._timeline = this._timeline.slice(0, index + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._timeline = [];\n\t\t}\n\t} else if (this._timeline.length === 1){\n\t\t//the first item's time\n\t\tif (this._timeline[0].time >= after){\n\t\t\tthis._timeline = [];\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel events before or equal to the given time.\n *  @param  {Number}  time  The time to cancel before.\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.cancelBefore = function(time){\n\tvar index = this._search(time);\n\tif (index >= 0){\n\t\tthis._timeline = this._timeline.slice(index + 1);\n\t}\n\treturn this;\n};\n\n/**\n * Returns the previous event if there is one. null otherwise\n * @param  {Object} event The event to find the previous one of\n * @return {Object}       The event right before the given event\n */\nTone.Timeline.prototype.previousEvent = function(event){\n\tvar index = this._timeline.indexOf(event);\n\tif (index > 0){\n\t\treturn this._timeline[index-1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Does a binary search on the timeline array and returns the\n *  nearest event index whose time is after or equal to the given time.\n *  If a time is searched before the first index in the timeline, -1 is returned.\n *  If the time is after the end, the index of the last item is returned.\n *  @param  {Number}  time\n *  @param  {String}  comparator Which value in the object to compare\n *  @return  {Number} the index in the timeline array\n *  @private\n */\nTone.Timeline.prototype._search = function(time, comparator){\n\tif (this._timeline.length === 0){\n\t\treturn -1;\n\t}\n\tcomparator = Tone.defaultArg(comparator, \"time\");\n\tvar beginning = 0;\n\tvar len = this._timeline.length;\n\tvar end = len;\n\tif (len > 0 && this._timeline[len - 1][comparator] <= time){\n\t\treturn len - 1;\n\t}\n\twhile (beginning < end){\n\t\t// calculate the midpoint for roughly equal partition\n\t\tvar midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\tvar event = this._timeline[midPoint];\n\t\tvar nextEvent = this._timeline[midPoint + 1];\n\t\tif (event[comparator] === time){\n\t\t\t//choose the last one that has the same time\n\t\t\tfor (var i = midPoint; i < this._timeline.length; i++){\n\t\t\t\tvar testEvent = this._timeline[i];\n\t\t\t\tif (testEvent[comparator] === time){\n\t\t\t\t\tmidPoint = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn midPoint;\n\t\t} else if (event[comparator] < time && nextEvent[comparator] > time){\n\t\t\treturn midPoint;\n\t\t} else if (event[comparator] > time){\n\t\t\t//search lower\n\t\t\tend = midPoint;\n\t\t} else {\n\t\t\t//search upper\n\t\t\tbeginning = midPoint + 1;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/**\n *  Internal iterator. Applies extra safety checks for\n *  removing items from the array.\n *  @param  {Function}  callback\n *  @param  {Number=}    lowerBound\n *  @param  {Number=}    upperBound\n *  @private\n */\nTone.Timeline.prototype._iterate = function(callback, lowerBound, upperBound){\n\tlowerBound = Tone.defaultArg(lowerBound, 0);\n\tupperBound = Tone.defaultArg(upperBound, this._timeline.length-1);\n\tthis._timeline.slice(lowerBound, upperBound+1).forEach(function(event){\n\t\tcallback.call(this, event);\n\t}.bind(this));\n};\n\n/**\n *  Iterate over everything in the array\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEach = function(callback){\n\tthis._iterate(callback);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at or before the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachBefore = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar upperBound = this._search(time);\n\tif (upperBound !== -1){\n\t\tthis._iterate(callback, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array after the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachAfter = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar lowerBound = this._search(time);\n\tthis._iterate(callback, lowerBound + 1);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array between the startTime and endTime. \n *  The timerange is inclusive of the startTime, but exclusive of the endTime. \n *  range = [startTime, endTime). \n *  @param  {Number}  startTime The time to check if items are before\n *  @param  {Number}  endTime The end of the test interval. \n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachBetween = function(startTime, endTime, callback){\n\tvar lowerBound = this._search(startTime);\n\tvar upperBound = this._search(endTime);\n\tif (lowerBound !== -1 && upperBound !== -1){\n\t\tif (this._timeline[lowerBound].time !== startTime){\n\t\t\tlowerBound += 1;\n\t\t}\n\t\t//exclusive of the end time\n\t\tif (this._timeline[upperBound].time === endTime){\n\t\t\tupperBound -= 1;\n\t\t}\n\t\tthis._iterate(callback, lowerBound, upperBound);\n\t} else if (lowerBound === -1){\n\t\tthis._iterate(callback, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at or after the given time. Similar to\n *  forEachAfter, but includes the item(s) at the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachFrom = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar lowerBound = this._search(time);\n\t//work backwards until the event time is less than time\n\twhile (lowerBound >= 0 && this._timeline[lowerBound].time >= time){\n\t\tlowerBound--;\n\t}\n\tthis._iterate(callback, lowerBound + 1);\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array at the given time\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.Timeline} this\n */\nTone.Timeline.prototype.forEachAtTime = function(time, callback){\n\t//iterate over the items in reverse so that removing an item doesn't break things\n\tvar upperBound = this._search(time);\n\tif (upperBound !== -1){\n\t\tthis._iterate(function(event){\n\t\t\tif (event.time === time){\n\t\t\t\tcallback.call(this, event);\n\t\t\t}\n\t\t}, 0, upperBound);\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Timeline}  this\n */\nTone.Timeline.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._timeline = null;\n\treturn this;\n};\n\nexport default Tone.Timeline;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  This is an abstract base class for other monophonic instruments to \n *          extend. IMPORTANT: It does not make any sound on its own and\n *          shouldn't be directly instantiated.\n *\n *  @constructor\n *  @abstract\n *  @extends {Tone.Instrument}\n */\nTone.Monophonic = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Monophonic.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The glide time between notes. \n\t *  @type {Time}\n\t */\n\tthis.portamento = options.portamento;\n};\n\nTone.extend(Tone.Monophonic, Tone.Instrument);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Monophonic.defaults = {\n\t\"portamento\" : 0\n};\n\n/**\n *  Trigger the attack of the note optionally with a given velocity. \n *  \n *  \n *  @param  {Frequency} note     The note to trigger.\n *  @param  {Time} [time=now]     When the note should start.\n *  @param  {number} [velocity=1] velocity The velocity scaler \n *                                determines how \"loud\" the note \n *                                will be triggered.\n *  @returns {Tone.Monophonic} this\n *  @example\n * synth.triggerAttack(\"C4\");\n *  @example\n * //trigger the note a half second from now at half velocity\n * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n */\nTone.Monophonic.prototype.triggerAttack = function(note, time, velocity){\n\tthis.log(\"triggerAttack\", note, time, velocity);\n\ttime = this.toSeconds(time);\n\tthis._triggerEnvelopeAttack(time, velocity);\n\tthis.setNote(note, time);\n\treturn this;\n};\n\n/**\n *  Trigger the release portion of the envelope\n *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n *  @returns {Tone.Monophonic} this\n *  @example\n * synth.triggerRelease();\n */\nTone.Monophonic.prototype.triggerRelease = function(time){\n\tthis.log(\"triggerRelease\", time);\n\ttime = this.toSeconds(time);\n\tthis._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  override this method with the actual method\n *  @abstract\n *  @private\n */\t\nTone.Monophonic.prototype._triggerEnvelopeAttack = function(){};\n\n/**\n *  override this method with the actual method\n *  @abstract\n *  @private\n */\t\nTone.Monophonic.prototype._triggerEnvelopeRelease = function(){};\n\n/**\n *  Get the level of the output at the given time. Measures\n *  the envelope(s) value at the time. \n *  @param {Time} time The time to query the envelope value\n *  @return {NormalRange} The output level between 0-1\n */\nTone.Monophonic.prototype.getLevelAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this.envelope.getValueAtTime(time);\n};\n\n/**\n *  Set the note at the given time. If no time is given, the note\n *  will set immediately. \n *  @param {Frequency} note The note to change to.\n *  @param  {Time} [time=now] The time when the note should be set. \n *  @returns {Tone.Monophonic} this\n * @example\n * //change to F#6 in one quarter note from now.\n * synth.setNote(\"F#6\", \"+4n\");\n * @example\n * //change to Bb4 right now\n * synth.setNote(\"Bb4\");\n */\nTone.Monophonic.prototype.setNote = function(note, time){\n\ttime = this.toSeconds(time);\n\tif (this.portamento > 0 && this.getLevelAtTime(time) > 0.05){\n\t\tvar portTime = this.toSeconds(this.portamento);\n\t\tthis.frequency.exponentialRampTo(note, portTime, time);\n\t} else {\n\t\tthis.frequency.setValueAtTime(note, time);\n\t}\n\treturn this;\n};\n\nexport default Tone.Monophonic;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Multiply\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  Performs a linear scaling on an input signal.\n *          Scales a NormalRange input to between\n *          outputMin and outputMax.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {number} [outputMin=0] The output value when the input is 0. \n *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n *  @example\n * var scale = new Tone.Scale(50, 100);\n * var signal = new Tone.Signal(0.5).connect(scale);\n * //the output of scale equals 75\n */\nTone.Scale = function(outputMin, outputMax){\n\n\tTone.SignalBase.call(this);\n\t\n\t/** \n\t *  @private\n\t *  @type {number}\n\t */\n\tthis._outputMin = Tone.defaultArg(outputMin, 0);\n\n\t/** \n\t *  @private\n\t *  @type {number}\n\t */\n\tthis._outputMax = Tone.defaultArg(outputMax, 1);\n\n\t/** \n\t *  @private\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.input = new Tone.Multiply(1);\n\t\n\t/** \n\t *  @private\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._add = this.output = new Tone.Add(0);\n\n\tthis._scale.connect(this._add);\n\tthis._setRange();\n};\n\nTone.extend(Tone.Scale, Tone.SignalBase);\n\n/**\n * The minimum output value. This number is output when \n * the value input value is 0. \n * @memberOf Tone.Scale#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.Scale.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._outputMin;\n\t},\n\tset : function(min){\n\t\tthis._outputMin = min;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n * The maximum output value. This number is output when \n * the value input value is 1. \n * @memberOf Tone.Scale#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.Scale.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._outputMax;\n\t},\n\tset : function(max){\n\t\tthis._outputMax = max;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n *  set the values\n *  @private\n */\nTone.Scale.prototype._setRange = function(){\n\tthis._add.value = this._outputMin;\n\tthis._scale.value = this._outputMax - this._outputMin;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Scale} this\n */\nTone.Scale.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._add.dispose();\n\tthis._add = null;\n\tthis._scale.dispose();\n\tthis._scale = null;\n\treturn this;\n}; \n\nexport default Tone.Scale;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Volume is a simple volume node, useful for creating a volume fader.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels} [volume=0] the initial volume\n *  @example\n * var vol = new Tone.Volume(-12);\n * instrument.chain(vol, Tone.Master);\n */\nTone.Volume = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\"], Tone.Volume);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t * the output node\n\t * @type {GainNode}\n\t * @private\n\t */\n\tthis.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\n\t/**\n\t * The unmuted volume\n\t * @type {Decibels}\n\t * @private\n\t */\n\tthis._unmutedVolume = options.volume;\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this.output.gain;\n\n\tthis._readOnly(\"volume\");\n\n\t//set the mute initially\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.Volume, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Volume.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Mute the output.\n * @memberOf Tone.Volume#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * volume.mute = true;\n */\nObject.defineProperty(Tone.Volume.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this.volume.value === -Infinity;\n\t},\n\tset : function(mute){\n\t\tif (!this.mute && mute){\n\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t//maybe it should ramp here?\n\t\t\tthis.volume.value = -Infinity;\n\t\t} else if (this.mute && !mute){\n\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t}\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Volume} this\n */\nTone.Volume.prototype.dispose = function(){\n\tthis.input.dispose();\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"volume\");\n\tthis.volume.dispose();\n\tthis.volume = null;\n\treturn this;\n};\n\nexport default Tone.Volume;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n *         it's own class is that many browsers optimize out Tone.Signal\n *         with a value of 0 and will not process nodes further down the graph.\n *  @extends {Tone.SignalBase}\n */\nTone.Zero = function(){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  The gain node\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gain = this.input = this.output = new Tone.Gain();\n\n\tTone.connect(this.context.getConstant(0), this._gain);\n};\n\nTone.extend(Tone.Zero, Tone.SignalBase);\n\n/**\n *  clean up\n *  @return  {Tone.Zero}  this\n */\nTone.Zero.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._gain.dispose();\n\tthis._gain = null;\n\treturn this;\n};\n\nexport default Tone.Zero;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\n\n/**\n *  @class Add a signal and a number or two signals. When no value is\n *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n *         and <code>input[1]</code>. If a value is passed into the constructor, \n *         the it will be added to the input.\n *  \n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number=} value If no value is provided, Tone.Add will sum the first\n *                         and second inputs. \n *  @example\n * var signal = new Tone.Signal(2);\n * var add = new Tone.Add(2);\n * signal.connect(add);\n * //the output of add equals 4\n *  @example\n * //if constructed with no arguments\n * //it will add the first and second inputs\n * var add = new Tone.Add();\n * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n * //the output of add equals 7. \n */\nTone.Add = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  the summing node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\n\t/**\n\t *  @private\n\t *  @type {Tone.Signal}\n\t */\n\tthis._param = this.input[1] = new Tone.Signal(value);\n\n\tthis._param.connect(this._sum);\n};\n\nTone.extend(Tone.Add, Tone.Signal);\n\n/**\n *  Clean up.\n *  @returns {Tone.Add} this\n */\nTone.Add.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._sum.dispose();\n\tthis._sum = null;\n\treturn this;\n}; \n\nexport default Tone.Add;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Base class for all Signals. Used Internally.\n *\n *  @constructor\n *  @extends {Tone}\n */\nTone.SignalBase = function(){\n\tTone.AudioNode.call(this);\n};\n\nTone.extend(Tone.SignalBase, Tone.AudioNode);\n\n/**\n *  When signals connect to other signals or AudioParams,\n *  they take over the output value of that signal or AudioParam.\n *  For all other nodes, the behavior is the same as a default <code>connect</code>.\n *\n *  @override\n *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node\n *  @param {number} [outputNumber=0] The output number to connect from.\n *  @param {number} [inputNumber=0] The input number to connect to.\n *  @returns {Tone.SignalBase} this\n */\nTone.SignalBase.prototype.connect = function(node, outputNumber, inputNumber){\n\t//zero it out so that the signal can have full control\n\tif ((Tone.Signal && Tone.Signal === node.constructor) ||\n\t\t\t(Tone.Param && Tone.Param === node.constructor)){\n\t\t//cancel changes\n\t\tnode._param.cancelScheduledValues(0);\n\t\t//reset the value\n\t\tnode._param.setValueAtTime(0, 0);\n\t\t//mark the value as overridden\n\t\tnode.overridden = true;\n\t} else if (node instanceof AudioParam){\n\t\tnode.cancelScheduledValues(0);\n\t\tnode.setValueAtTime(0, 0);\n\t}\n\tTone.AudioNode.prototype.connect.call(this, node, outputNumber, inputNumber);\n\treturn this;\n};\n\nexport default Tone.SignalBase;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Envelope\";\nimport \"../core/Gain\";\n\n/**\n *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n *          an audio signal as the input and will apply the envelope to the amplitude\n *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n *  @constructor\n *  @extends {Tone.Envelope}\n *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from\n *                               0 to it's maximum value.\n *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n *                       \tto fall to the sustain value.\n *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n *                                \tthe release is triggered.\n *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n *  @example\n * var ampEnv = new Tone.AmplitudeEnvelope({\n * \t\"attack\": 0.1,\n * \t\"decay\": 0.2,\n * \t\"sustain\": 1.0,\n * \t\"release\": 0.8\n * }).toMaster();\n * //create an oscillator and connect it\n * var osc = new Tone.Oscillator().connect(ampEnv).start();\n * //trigger the envelopes attack and release \"8t\" apart\n * ampEnv.triggerAttackRelease(\"8t\");\n */\nTone.AmplitudeEnvelope = function(){\n\n\tTone.Envelope.apply(this, arguments);\n\n\t/**\n\t *  the input node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.input = this.output = new Tone.Gain();\n\n\tthis._sig.connect(this.output.gain);\n};\n\nTone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\n/**\n *  Clean up\n *  @return  {Tone.AmplitudeEnvelope}  this\n */\nTone.AmplitudeEnvelope.prototype.dispose = function(){\n\tTone.Envelope.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.AmplitudeEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Wrapper around the native BufferSourceNode.\n *  @extends {Tone.AudioNode}\n *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n *  @param  {Function}  onload  The callback to invoke when the\n *                               buffer is done playing.\n */\nTone.BufferSource = function(){\n\n\tvar options = Tone.defaults(arguments, [\"buffer\", \"onload\"], Tone.BufferSource);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The callback to invoke after the\n\t *  buffer source is done playing.\n\t *  @type  {Function}\n\t */\n\tthis.onended = options.onended;\n\n\t/**\n\t *  The time that the buffer was started.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._startTime = -1;\n\n\t/**\n\t *  An additional flag if the actual BufferSourceNode\n\t *  has been started. b/c stopping an unstarted buffer\n\t *  will throw it into an invalid state\n\t *  @type  {Boolean}\n\t *  @private\n\t */\n\tthis._sourceStarted = false;\n\n\t/**\n\t *  Flag if the source has already been stopped\n\t *  @type  {Boolean}\n\t *  @private\n\t */\n\tthis._sourceStopped = false;\n\n\t/**\n\t *  The time that the buffer is scheduled to stop.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._stopTime = -1;\n\n\t/**\n\t *  The gain node which envelopes the BufferSource\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gainNode = this.output = new Tone.Gain(0);\n\n\t/**\n\t *  The buffer source\n\t *  @type  {AudioBufferSourceNode}\n\t *  @private\n\t */\n\tthis._source = this.context.createBufferSource();\n\tTone.connect(this._source, this._gainNode);\n\tthis._source.onended = this._onended.bind(this);\n\n\t/**\n\t * The private buffer instance\n\t * @type {Tone.Buffer}\n\t * @private\n\t */\n\tthis._buffer = new Tone.Buffer(options.buffer, options.onload);\n\n\t/**\n\t *  The playbackRate of the buffer\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.playbackRate = new Tone.Param({\n\t\tparam : this._source.playbackRate,\n\t\tunits : Tone.Type.Positive,\n\t\tvalue : options.playbackRate\n\t});\n\n\t/**\n\t *  The fadeIn time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeIn = options.fadeIn;\n\n\t/**\n\t *  The fadeOut time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeOut = options.fadeOut;\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t * @type {String}\n\t */\n\tthis.curve = options.curve;\n\n\t/**\n\t * The onended timeout\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._onendedTimeout = -1;\n\n\t//set some values initially\n\tthis.loop = options.loop;\n\tthis.loopStart = options.loopStart;\n\tthis.loopEnd = options.loopEnd;\n};\n\nTone.extend(Tone.BufferSource, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.BufferSource.defaults = {\n\t\"onended\" : Tone.noOp,\n\t\"onload\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0,\n\t\"curve\" : \"linear\",\n\t\"playbackRate\" : 1\n};\n\n/**\n *  Returns the playback state of the source, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.BufferSource#\n *  @name state\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"state\", {\n\tget : function(){\n\t\treturn this.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the playback state at the given time\n *  @param  {Time}  time  The time to test the state at\n *  @return  {Tone.State}  The playback state. \n */\nTone.BufferSource.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._startTime !== -1 && \n\t\tthis._startTime <= time && \n\t\t(this._stopTime === -1 || time < this._stopTime) && \n\t\t!this._sourceStopped){\n\t\treturn Tone.State.Started;\n\t} else {\n\t\treturn Tone.State.Stopped;\n\t}\n};\n\n/**\n *  Start the buffer\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.start = function(time, offset, duration, gain){\n\tthis.log(\"start\", time, offset, duration, gain);\n\tthis.assert(this._startTime === -1, \"can only be started once\");\n\tthis.assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\tthis.assert(!this._sourceStopped, \"source is already stopped\");\n\n\ttime = this.toSeconds(time);\n\t//if it's a loop the default offset is the loopstart point\n\tif (this.loop){\n\t\toffset = Tone.defaultArg(offset, this.loopStart);\n\t} else {\n\t\t//otherwise the default offset is 0\n\t\toffset = Tone.defaultArg(offset, 0);\n\t}\n\toffset = this.toSeconds(offset);\n\t//make sure the offset is not less than 0\n\toffset = Math.max(offset, 0);\n\n\tgain = Tone.defaultArg(gain, 1);\n\n\t//apply a fade in envelope\n\tvar fadeInTime = this.toSeconds(this.fadeIn);\n\tif (fadeInTime > 0){\n\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\tif (this.curve === \"linear\"){\n\t\t\tthis._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n\t\t} else {\n\t\t\tthis._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n\t\t}\n\t} else {\n\t\tthis._gainNode.gain.setValueAtTime(gain, time);\n\t}\n\n\tthis._startTime = time;\n\n\t//if a duration is given, schedule a stop\n\tif (Tone.isDefined(duration)){\n\t\tvar computedDur = this.toSeconds(duration);\n\t\t//make sure it's never negative\n\t\tcomputedDur = Math.max(computedDur, 0);\n\n\t\tthis.stop(time + computedDur);\n\t}\n\n\t//start the buffer source\n\tif (this.loop){\n\t\t//modify the offset if it's greater than the loop time\n\t\tvar loopEnd = this.loopEnd || this.buffer.duration;\n\t\tvar loopStart = this.loopStart;\n\t\tvar loopDuration = loopEnd - loopStart;\n\t\t//move the offset back\n\t\tif (offset >= loopEnd){\n\t\t\toffset = ((offset - loopStart) % loopDuration) + loopStart;\n\t\t}\n\t}\n\tthis._source.buffer = this.buffer.get();\n\tthis._source.loopEnd = this.loopEnd || this.buffer.duration;\n\tif (offset < this.buffer.duration){\n\t\tthis._sourceStarted = true;\n\t\tthis._source.start(time, offset);\n\t}\n\n\treturn this;\n};\n\n/**\n *  Stop the buffer. \n *  @param  {Time=}  time         The time the buffer should stop.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.stop = function(time){\n\tthis.log(\"stop\", time);\n\tthis.assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\tthis.assert(!this._sourceStopped, \"source is already stopped\");\n\n\ttime = this.toSeconds(time);\n\n\t//if the event has already been scheduled, clear it\n\tif (this._stopTime !== -1){\n\t\tthis.cancelStop();\n\t}\n\n\t//the fadeOut time\n\tvar fadeOutTime = this.toSeconds(this.fadeOut);\n\n\t//cancel the previous curve\n\tthis._stopTime = time + fadeOutTime;\n\n\tif (fadeOutTime > 0){\n\t\t//start the fade out curve at the given time\n\t\tif (this.curve === \"linear\"){\n\t\t\tthis._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n\t\t} else {\n\t\t\tthis._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n\t\t}\n\t} else {\n\t\t//stop any ongoing ramps, and set the value to 0\n\t\tthis._gainNode.gain.cancelAndHoldAtTime(time);\n\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t}\n\n\tTone.context.clearTimeout(this._onendedTimeout);\n\tthis._onendedTimeout = Tone.context.setTimeout(this._onended.bind(this), this._stopTime - this.now());\n\n\treturn this;\n};\n\n/**\n *  Cancel a scheduled stop event\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.cancelStop = function(){\n\tif (this._startTime !== -1 && !this._sourceStopped){\n\t\t//cancel the stop envelope\n\t\tvar fadeInTime = this.toSeconds(this.fadeIn);\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime + fadeInTime + this.sampleTime);\n\t\tthis.context.clearTimeout(this._onendedTimeout);\n\t\tthis._stopTime = -1;\n\t}\n\treturn this;\n};\n\n/**\n *  Internal callback when the buffer is ended.\n *  Invokes `onended` and disposes the node.\n *  @private\n */\nTone.BufferSource.prototype._onended = function(){\n\tif (!this._sourceStopped){\n\t\tthis._sourceStopped = true;\n\t\t//allow additional time for the exponential curve to fully decay\n\t\tvar additionalTail = this.curve === \"exponential\" ? this.fadeOut * 2 : 0;\n\t\tif (this._sourceStarted && this._stopTime !== -1){\n\t\t\tthis._source.stop(this._stopTime + additionalTail);\n\t\t}\n\t\tthis.onended(this);\n\n\t\t//dispose the source after it's come to a stop\n\t\tsetTimeout(function(){\n\t\t\t//if it hasn't already been disposed\n\t\t\tif (this._source){\n\t\t\t\tthis._source.disconnect();\n\t\t\t\tthis._gainNode.disconnect();\n\t\t\t}\n\t\t}.bind(this), additionalTail * 1000 + 100);\n\t}\n};\n\n/**\n * If loop is true, the loop will start at this position.\n * @memberOf Tone.BufferSource#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._source.loopStart;\n\t},\n\tset : function(loopStart){\n\t\tthis._source.loopStart = this.toSeconds(loopStart);\n\t}\n});\n\n/**\n * If loop is true, the loop will end at this position.\n * @memberOf Tone.BufferSource#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._source.loopEnd;\n\t},\n\tset : function(loopEnd){\n\t\tthis._source.loopEnd = this.toSeconds(loopEnd);\n\t}\n});\n\n/**\n * The audio buffer belonging to the player.\n * @memberOf Tone.BufferSource#\n * @type {Tone.Buffer}\n * @name buffer\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"buffer\", {\n\tget : function(){\n\t\treturn this._buffer;\n\t},\n\tset : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t}\n});\n\n/**\n * If the buffer should loop once it's over.\n * @memberOf Tone.BufferSource#\n * @type {Boolean}\n * @name loop\n */\nObject.defineProperty(Tone.BufferSource.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._source.loop;\n\t},\n\tset : function(loop){\n\t\tthis._source.loop = loop;\n\t\tthis.cancelStop();\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.BufferSource}  this\n */\nTone.BufferSource.prototype.dispose = function(){\n\tif (!this._wasDisposed){\n\t\tthis._wasDisposed = true;\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.onended = null;\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tthis._source = null;\n\t\tthis._gainNode.dispose();\n\t\tthis._gainNode = null;\n\t\tthis._buffer.dispose();\n\t\tthis._buffer = null;\n\t\tthis._startTime = -1;\n\t\tthis.playbackRate = null;\n\t\tTone.context.clearTimeout(this._onendedTimeout);\n\t}\n\treturn this;\n};\n\nexport default Tone.BufferSource;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n * \t@class  Tone.FeedbackEffect provides a loop between an \n * \t        audio source and its own output. This is a base-class\n * \t        for feedback effects. \n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {NormalRange|Object} [feedback] The initial feedback value.\n */\nTone.FeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.Effect.call(this, options);\n\t\n\t/**\n\t *  the gain which controls the feedback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of signal which is fed back into the effect input. \n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = this._feedbackGain.gain;\n\n\t//the feedback loop\n\tthis.effectReturn.chain(this._feedbackGain, this.effectSend);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.FeedbackEffect, Tone.Effect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.FeedbackEffect.defaults = {\n\t\"feedback\" : 0.125\n};\n\n/**\n *  Clean up. \n *  @returns {Tone.FeedbackEffect} this\n */\nTone.FeedbackEffect.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis._feedbackGain.dispose();\n\tthis._feedbackGain = null;\n\tthis.feedback = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Timeline\";\nimport \"../type/Type\";\n\n/**\n *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n *          and <code>getValueAtTime(time)</code>.\n *\n *  @extends {Tone.Timeline}\n *  @param {String} initial The initial state of the TimelineState. \n *                          Defaults to <code>undefined</code>\n */\nTone.TimelineState = function(initial){\n\n\tTone.Timeline.call(this);\n\n\t/**\n\t *  The initial state\n\t *  @private\n\t *  @type {String}\n\t */\n\tthis._initial = initial;\n};\n\nTone.extend(Tone.TimelineState, Tone.Timeline);\n\n/**\n *  Returns the scheduled state scheduled before or at\n *  the given time.\n *  @param  {Number}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n */\nTone.TimelineState.prototype.getValueAtTime = function(time){\n\tvar event = this.get(time);\n\tif (event !== null){\n\t\treturn event.state;\n\t} else {\n\t\treturn this._initial;\n\t}\n};\n\n/**\n *  Add a state to the timeline.\n *  @param  {String}  state The name of the state to set.\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.TimelineState} this\n */\nTone.TimelineState.prototype.setStateAtTime = function(state, time){\n\t//all state changes need to be >= the previous state time\n\t//TODO throw error if time < the previous event time\n\tthis.add({\n\t\t\"state\" : state,\n\t\t\"time\" : time\n\t});\n\treturn this;\n};\n\n/**\n *  Return the event before the time with the given state\n *  @param {Tone.State} state The state to look for\n *  @param  {Time}  time  When to check before\t\t\t\n *  @return  {Object}  The event with the given state before the time\n */\nTone.TimelineState.prototype.getLastState = function(state, time){\n\ttime = this.toSeconds(time);\n\tvar index = this._search(time);\n\tfor (var i = index; i >= 0; i--){\n\t\tvar event = this._timeline[i];\n\t\tif (event.state === state){\n\t\t\treturn event;\n\t\t}\n\t}\n};\n\n/**\n *  Return the event after the time with the given state\n *  @param {Tone.State} state The state to look for\n *  @param  {Time}  time  When to check from\n *  @return  {Object}  The event with the given state after the time\n */\nTone.TimelineState.prototype.getNextState = function(state, time){\n\ttime = this.toSeconds(time);\n\tvar index = this._search(time);\n\tif (index !== -1){\n\t\tfor (var i = index; i < this._timeline.length; i++){\n\t\t\tvar event = this._timeline[i];\n\t\t\tif (event.state === state){\n\t\t\t\treturn event;\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default Tone.TimelineState;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.Emitter gives classes which extend it\n *         the ability to listen for and emit events.\n *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n *         MIT (c) 2011 Jerome Etienne.\n *\n *  @extends {Tone}\n */\nTone.Emitter = function(){\n\tTone.call(this);\n\t/**\n\t *  Contains all of the events.\n\t *  @private\n\t *  @type  {Object}\n\t */\n\tthis._events = {};\n};\n\nTone.extend(Tone.Emitter);\n\n/**\n *  Bind a callback to a specific event.\n *  @param  {String}    event     The name of the event to listen for.\n *  @param  {Function}  callback  The callback to invoke when the\n *                                event is emitted\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.on = function(event, callback){\n\t//split the event\n\tvar events = event.split(/\\W+/);\n\tfor (var i = 0; i < events.length; i++){\n\t\tvar eventName = events[i];\n\t\tif (!this._events.hasOwnProperty(eventName)){\n\t\t\tthis._events[eventName] = [];\n\t\t}\n\t\tthis._events[eventName].push(callback);\n\t}\n\treturn this;\n};\n\n/**\n *  Bind a callback which is only invoked once\n *  @param  {String}    event     The name of the event to listen for.\n *  @param  {Function}  callback  The callback to invoke when the\n *                                event is emitted\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.once = function(event, callback){\n\tvar boundCallback = function(){\n\t\t//invoke the callback\n\t\tcallback.apply(this, arguments);\n\t\tthis.off(event, boundCallback);\n\t}.bind(this);\n\tthis.on(event, boundCallback);\n\treturn this;\n};\n\n/**\n *  Remove the event listener.\n *  @param  {String}    event     The event to stop listening to.\n *  @param  {Function=}  callback  The callback which was bound to\n *                                the event with Tone.Emitter.on.\n *                                If no callback is given, all callbacks\n *                                events are removed.\n *  @return  {Tone.Emitter}    this\n */\nTone.Emitter.prototype.off = function(event, callback){\n\tvar events = event.split(/\\W+/);\n\tfor (var ev = 0; ev < events.length; ev++){\n\t\tevent = events[ev];\n\t\tif (this._events.hasOwnProperty(event)){\n\t\t\tif (Tone.isUndef(callback)){\n\t\t\t\tthis._events[event] = [];\n\t\t\t} else {\n\t\t\t\tvar eventList = this._events[event];\n\t\t\t\tfor (var i = 0; i < eventList.length; i++){\n\t\t\t\t\tif (eventList[i] === callback){\n\t\t\t\t\t\teventList.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Invoke all of the callbacks bound to the event\n *  with any arguments passed in.\n *  @param  {String}  event  The name of the event.\n *  @param {...*} args The arguments to pass to the functions listening.\n *  @return  {Tone.Emitter}  this\n */\nTone.Emitter.prototype.emit = function(event){\n\tif (this._events){\n\t\tvar args = Array.apply(null, arguments).slice(1);\n\t\tif (this._events.hasOwnProperty(event)){\n\t\t\tvar eventList = this._events[event].slice(0);\n\t\t\tfor (var i = 0, len = eventList.length; i < len; i++){\n\t\t\t\teventList[i].apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Add Emitter functions (on/off/emit) to the object\n *  @param  {Object|Function}  object  The object or class to extend.\n *  @returns {Tone.Emitter}\n */\nTone.Emitter.mixin = function(object){\n\tvar functions = [\"on\", \"once\", \"off\", \"emit\"];\n\tobject._events = {};\n\tfor (var i = 0; i < functions.length; i++){\n\t\tvar func = functions[i];\n\t\tvar emitterFunc = Tone.Emitter.prototype[func];\n\t\tobject[func] = emitterFunc;\n\t}\n\treturn Tone.Emitter;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Emitter}  this\n */\nTone.Emitter.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Emitter;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/AudioContext\";\n\n/**\n *  AnalyserNode.getFloatTimeDomainData polyfill\n *  @private\n */\nif (Tone.supported){\n\tif (!AnalyserNode.prototype.getFloatTimeDomainData){\n\t\t//referenced https://github.com/mohayonao/get-float-time-domain-data\n\t\tAnalyserNode.prototype.getFloatTimeDomainData = function(array){\n\t\t\tvar uint8 = new Uint8Array(array.length);\n\t\t\tthis.getByteTimeDomainData(uint8);\n\t\t\tfor (var i = 0; i < uint8.length; i++){\n\t\t\t\tarray[i] = (uint8[i] - 128) / 128;\n\t\t\t}\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/AudioNode\";\nimport \"../shim/AnalyserNode\";\n\n/**\n *  @class  Wrapper around the native Web Audio's\n *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n *          Extracts FFT or Waveform data from the incoming signal.\n *  @extends {Tone.AudioNode}\n *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\".\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 16 to 16384.\n */\nTone.Analyser = function(){\n\n\tvar options = Tone.defaults(arguments, [\"type\", \"size\"], Tone.Analyser);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {AnalyserNode}\n\t */\n\tthis._analyser = this.input = this.output = this.context.createAnalyser();\n\n\t/**\n\t *  The analysis type\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The buffer that the FFT data is written to\n\t *  @type {TypedArray}\n\t *  @private\n\t */\n\tthis._buffer = null;\n\n\t//set the values initially\n\tthis.size = options.size;\n\tthis.type = options.type;\n};\n\nTone.extend(Tone.Analyser, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.Analyser.defaults = {\n\t\"size\" : 1024,\n\t\"type\" : \"fft\",\n\t\"smoothing\" : 0.8\n};\n\n/**\n *  Possible return types of analyser.getValue()\n *  @enum {String}\n */\nTone.Analyser.Type = {\n\tWaveform : \"waveform\",\n\tFFT : \"fft\"\n};\n\n/**\n *  Run the analysis given the current settings and return the\n *  result as a TypedArray of length [size](#size).\n *  @returns {TypedArray}\n */\nTone.Analyser.prototype.getValue = function(){\n\tif (this._type === Tone.Analyser.Type.FFT){\n\t\tthis._analyser.getFloatFrequencyData(this._buffer);\n\t} else if (this._type === Tone.Analyser.Type.Waveform){\n\t\tthis._analyser.getFloatTimeDomainData(this._buffer);\n\t}\n\treturn this._buffer;\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 16 to 16384.\n *  @memberOf Tone.Analyser#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.Analyser.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.frequencyBinCount;\n\t},\n\tset : function(size){\n\t\t// fftSize is double frequencyBinCount\n\t\tthis._analyser.fftSize = size * 2;\n\t\tthis._buffer = new Float32Array(size);\n\t}\n});\n\n/**\n *  The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n *  @memberOf Tone.Analyser#\n *  @type {String}\n *  @name type\n */\nObject.defineProperty(Tone.Analyser.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tif (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT){\n\t\t\tthrow new TypeError(\"Tone.Analyser: invalid type: \"+type);\n\t\t}\n\t\tthis._type = type;\n\t}\n});\n\n/**\n *  0 represents no time averaging with the last analysis frame.\n *  @memberOf Tone.Analyser#\n *  @type {NormalRange}\n *  @name smoothing\n */\nObject.defineProperty(Tone.Analyser.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._analyser.smoothingTimeConstant;\n\t},\n\tset : function(val){\n\t\tthis._analyser.smoothingTimeConstant = val;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.Analyser}  this\n */\nTone.Analyser.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.disconnect();\n\tthis._analyser = null;\n\tthis._buffer = null;\n};\n\nexport default Tone.Analyser;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../source/PulseOscillator\";\nimport \"../source/PWMOscillator\";\nimport \"../source/FMOscillator\";\nimport \"../source/AMOscillator\";\nimport \"../source/FatOscillator\";\n\n/**\n *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n *         into one class. The oscillator class can be changed by setting the `type`.\n *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n *         will use the FMOscillator, AMOscillator or FatOscillator respectively.\n *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n *         to a FatOscillator of type \"sawtooth\".\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The initial frequency of the oscillator.\n *  @param {String} type The type of the oscillator.\n *  @example\n *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n */\nTone.OmniOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OmniOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  the type of the oscillator source\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._sourceType = undefined;\n\n\t/**\n\t *  the oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._oscillator = null;\n\n\t//set the oscillator\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n\t//set the options\n\tthis.set(options);\n};\n\nTone.extend(Tone.OmniOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.OmniOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"type\" : \"sine\",\n\t\"phase\" : 0\n};\n\n/**\n *  @enum {String}\n *  @private\n */\nvar OmniOscType = {\n\tPulse : \"PulseOscillator\",\n\tPWM : \"PWMOscillator\",\n\tOsc : \"Oscillator\",\n\tFM : \"FMOscillator\",\n\tAM : \"AMOscillator\",\n\tFat : \"FatOscillator\"\n};\n\n/**\n *  start the oscillator\n *  @param {Time} [time=now] the time to start the oscillator\n *  @private\n */\nTone.OmniOscillator.prototype._start = function(time){\n\tthis._oscillator.start(time);\n};\n\n/**\n *  start the oscillator\n *  @param {Time} [time=now] the time to start the oscillator\n *  @private\n */\nTone.OmniOscillator.prototype._stop = function(time){\n\tthis._oscillator.stop(time);\n};\n\nTone.OmniOscillator.prototype.restart = function(time){\n\tthis._oscillator.restart(time);\n};\n\n/**\n * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n * when it's not.\n *\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name type\n * @example\n * omniOsc.type = \"pwm\";\n * //modulationFrequency is parameter which is available\n * //only when the type is \"pwm\".\n * omniOsc.modulationFrequency.value = 0.5;\n * @example\n * //an square wave frequency modulated by a sawtooth\n * omniOsc.type = \"fmsquare\";\n * omniOsc.modulationType = \"sawtooth\";\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"type\", {\n\tget : function(){\n\t\tvar prefix = \"\";\n\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\tprefix = \"fm\";\n\t\t} else if (this._sourceType === OmniOscType.AM){\n\t\t\tprefix = \"am\";\n\t\t} else if (this._sourceType === OmniOscType.Fat){\n\t\t\tprefix = \"fat\";\n\t\t}\n\t\treturn prefix + this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tif (type.substr(0, 2) === \"fm\"){\n\t\t\tthis._createNewOscillator(OmniOscType.FM);\n\t\t\tthis._oscillator.type = type.substr(2);\n\t\t} else if (type.substr(0, 2) === \"am\"){\n\t\t\tthis._createNewOscillator(OmniOscType.AM);\n\t\t\tthis._oscillator.type = type.substr(2);\n\t\t} else if (type.substr(0, 3) === \"fat\"){\n\t\t\tthis._createNewOscillator(OmniOscType.Fat);\n\t\t\tthis._oscillator.type = type.substr(3);\n\t\t} else if (type === \"pwm\"){\n\t\t\tthis._createNewOscillator(OmniOscType.PWM);\n\t\t} else if (type === \"pulse\"){\n\t\t\tthis._createNewOscillator(OmniOscType.Pulse);\n\t\t} else {\n\t\t\tthis._createNewOscillator(OmniOscType.Osc);\n\t\t\tthis._oscillator.type = type;\n\t\t}\n\t}\n});\n\n/**\n * The partials of the waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * This is not available on \"pwm\" and \"pulse\" oscillator types.\n * @memberOf Tone.OmniOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._oscillator.partials;\n\t},\n\tset : function(partials){\n\t\tthis._oscillator.partials = partials;\n\t}\n});\n\n/**\n * The partial count of the oscillator. This is not available on \"pwm\" and \"pulse\" oscillator types.\n * @memberOf Tone.OmniOscillator#\n * @type {Number}\n * @name partialCount\n * @example\n * //set the maximum number of partials\n * osc.partialCount = 0;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._oscillator.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._oscillator.partialCount = partialCount;\n\t}\n});\n\n/**\n *  Set a member/attribute of the oscillator.\n *  @param {Object|String} params\n *  @param {number=} value\n *  @param {Time=} rampTime\n *  @returns {Tone.OmniOscillator} this\n */\nTone.OmniOscillator.prototype.set = function(params, value){\n\t//make sure the type is set first\n\tif (params === \"type\"){\n\t\tthis.type = value;\n\t} else if (Tone.isObject(params) && params.hasOwnProperty(\"type\")){\n\t\tthis.type = params.type;\n\t}\n\t//then set the rest\n\tTone.prototype.set.apply(this, arguments);\n\treturn this;\n};\n\n/**\n *  Get the object's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n *  \t\t\t\t\t                  all available.\n *  @returns {Object}\n */\nTone.OmniOscillator.prototype.get = function(params){\n\tvar options = this._oscillator.get(params);\n\toptions.type = this.type;\n\treturn options;\n};\n\n/**\n *  connect the oscillator to the frequency and detune signals\n *  @private\n */\nTone.OmniOscillator.prototype._createNewOscillator = function(oscType){\n\tif (oscType !== this._sourceType){\n\t\tthis._sourceType = oscType;\n\t\tvar OscillatorConstructor = Tone[oscType];\n\t\t//short delay to avoid clicks on the change\n\t\tvar now = this.now();\n\t\tif (this._oscillator !== null){\n\t\t\tvar oldOsc = this._oscillator;\n\t\t\toldOsc.stop(now);\n\t\t\t//dispose the old one\n\t\t\tthis.context.setTimeout(function(){\n\t\t\t\toldOsc.dispose();\n\t\t\t\toldOsc = null;\n\t\t\t}, this.blockTime);\n\t\t}\n\t\tthis._oscillator = new OscillatorConstructor();\n\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\tthis.detune.connect(this._oscillator.detune);\n\t\tthis._oscillator.connect(this.output);\n\t\tif (this.state === Tone.State.Started){\n\t\t\tthis._oscillator.start(now);\n\t\t}\n\t}\n};\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.OmniOscillator#\n * @type {Degrees}\n * @name phase\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._oscillator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._oscillator.phase = phase;\n\t}\n});\n\n/**\n * The source type names\n * @private\n * @type {Object}\n */\nvar SourceTypeNames = {\n\tPulseOscillator : \"pulse\",\n\tPWMOscillator : \"pwm\",\n\tOscillator : \"oscillator\",\n\tFMOscillator : \"fm\",\n\tAMOscillator : \"am\",\n\tFatOscillator : \"fat\"\n};\n\n/**\n * The source type of the oscillator. \n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name sourceType\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n * omniOsc.sourceType // 'fm'\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"sourceType\", {\n\tget : function(){\n\t\treturn SourceTypeNames[this._sourceType];\n\t},\n\tset : function(sType){\n\t\t//the basetype defaults to sine\n\t\tvar baseType = \"sine\";\n\t\tif (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\"){\n\t\t\tbaseType = this._oscillator.type;\n\t\t} \n\n\t\t//set the type\n\t\tif (sType === SourceTypeNames.FMOscillator){\n\t\t\tthis.type = \"fm\" + baseType;\n\t\t} else if (sType === SourceTypeNames.AMOscillator){\n\t\t\tthis.type = \"am\" + baseType;\n\t\t} else if (sType === SourceTypeNames.FatOscillator){\n\t\t\tthis.type = \"fat\" + baseType;\n\t\t} else if (sType === SourceTypeNames.Oscillator){\n\t\t\tthis.type = baseType;\n\t\t} else if (sType === SourceTypeNames.PulseOscillator){\n\t\t\tthis.type = \"pulse\";\n\t\t} else if (sType === SourceTypeNames.PWMOscillator){\n\t\t\tthis.type = \"pwm\";\n\t\t}\n\t}\n});\n\n/**\n * The base type of the oscillator.\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name baseType\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n * omniOsc.sourceType // 'fm'\n * omniOsc.baseType //'square'\n * omniOsc.partialCount //4\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._oscillator.baseType;\n\t},\n\tset : function(baseType){\n\t\tif (this.sourceType !== SourceTypeNames.PulseOscillator && this.sourceType !== SourceTypeNames.PWMOscillator){\n\t\t\tthis._oscillator.baseType = baseType;\n\t\t}\n\t}\n});\n\n/**\n * The width of the oscillator (only if the oscillator is set to \"pulse\")\n * @memberOf Tone.OmniOscillator#\n * @type {NormalRange}\n * @signal\n * @name width\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n * //can access the width attribute only if type === \"pulse\"\n * omniOsc.width.value = 0.2;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"width\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Pulse){\n\t\t\treturn this._oscillator.width;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n * The number of detuned oscillators\n * @memberOf Tone.OmniOscillator#\n * @type {Number}\n * @name count\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"count\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\treturn this._oscillator.count;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(count){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\tthis._oscillator.count = count;\n\t\t}\n\t}\n});\n\n/**\n * The detune spread between the oscillators. If \"count\" is\n * set to 3 oscillators and the \"spread\" is set to 40,\n * the three oscillators would be detuned like this: [-20, 0, 20]\n * for a total detune spread of 40 cents. See Tone.FatOscillator\n * for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {Cents}\n * @name spread\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"spread\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\treturn this._oscillator.spread;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(spread){\n\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\tthis._oscillator.spread = spread;\n\t\t}\n\t}\n});\n\n/**\n * The type of the modulator oscillator. Only if the oscillator\n * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n * for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {String}\n * @name modulationType\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\treturn this._oscillator.modulationType;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\tset : function(mType){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\tthis._oscillator.modulationType = mType;\n\t\t}\n\t}\n});\n\n/**\n * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n * modulating signal (ma) -- as in ma/mf.\n * See Tone.FMOscillator for more info.\n * @type {Positive}\n * @signal\n * @name modulationIndex\n * @memberof Tone.OmniOscillator#\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationIndex\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\treturn this._oscillator.modulationIndex;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n *  A harmonicity of 1 gives both oscillators the same frequency.\n *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n *  for more info.\n *  @memberOf Tone.OmniOscillator#\n *  @signal\n *  @type {Positive}\n *  @name harmonicity\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"harmonicity\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\treturn this._oscillator.harmonicity;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n * The modulationFrequency Signal of the oscillator\n * (only if the oscillator type is set to pwm). See\n * Tone.PWMOscillator for more info.\n * @memberOf Tone.OmniOscillator#\n * @type {Frequency}\n * @signal\n * @name modulationFrequency\n * @example\n * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n * //can access the modulationFrequency attribute only if type === \"pwm\"\n * omniOsc.modulationFrequency.value = 0.2;\n */\nObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationFrequency\", {\n\tget : function(){\n\t\tif (this._sourceType === OmniOscType.PWM){\n\t\t\treturn this._oscillator.modulationFrequency;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.OmniOscillator} this\n */\nTone.OmniOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._oscillator.dispose();\n\tthis._oscillator = null;\n\tthis._sourceType = null;\n\treturn this;\n};\n\nexport default Tone.OmniOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../source/OmniOscillator\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n *          routed through a Tone.AmplitudeEnvelope.\n *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.Synth().toMaster();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.Synth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.Synth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this.oscillator.frequency;\n\n\t/**\n\t *  The detune control.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this.oscillator.detune;\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the oscillators to the output\n\tthis.oscillator.chain(this.envelope, this.output);\n\tthis._readOnly([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n};\n\nTone.extend(Tone.Synth, Tone.Monophonic);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.Synth.defaults = {\n\t\"oscillator\" : {\n\t\t\"type\" : \"triangle\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.3,\n\t\t\"release\" : 1\n\t}\n};\n\n/**\n *  start the attack portion of the envelope\n *  @param {Time} [time=now] the time the attack should start\n *  @param {number} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.Synth} this\n *  @private\n */\nTone.Synth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.oscillator.start(time);\n\t//if there is no release portion, stop the oscillator\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n\t}\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelope\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.Synth} this\n *  @private\n */\nTone.Synth.prototype._triggerEnvelopeRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.toSeconds(this.envelope.release));\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.Synth} this\n */\nTone.Synth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.Synth;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../core/Buffer\";\nimport \"../source/BufferSource\";\n\n/**\n *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {string} type the noise type (white|pink|brown)\n *  @example\n * //initialize the noise and start\n * var noise = new Tone.Noise(\"pink\").start();\n *\n * //make an autofilter to shape the noise\n * var autoFilter = new Tone.AutoFilter({\n * \t\"frequency\" : \"8m\",\n * \t\"min\" : 800,\n * \t\"max\" : 15000\n * }).connect(Tone.Master);\n *\n * //connect the noise\n * noise.connect(autoFilter);\n * //start the autofilter LFO\n * autoFilter.start()\n */\nTone.Noise = function(){\n\n\tvar options = Tone.defaults(arguments, [\"type\"], Tone.Noise);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  @private\n\t *  @type {AudioBufferSourceNode}\n\t */\n\tthis._source = null;\n\n\t/**\n\t *  the buffer\n\t *  @private\n\t *  @type {AudioBuffer}\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The playback rate of the noise. Affects\n\t *  the \"frequency\" of the noise.\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis._playbackRate = options.playbackRate;\n};\n\nTone.extend(Tone.Noise, Tone.Source);\n\n/**\n *  the default parameters\n *\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Noise.defaults = {\n\t\"type\" : \"white\",\n\t\"playbackRate\" : 1\n};\n\n/**\n * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n * @memberOf Tone.Noise#\n * @type {string}\n * @name type\n * @example\n * noise.type = \"white\";\n */\nObject.defineProperty(Tone.Noise.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tif (this._type !== type){\n\t\t\tif (type in _noiseBuffers){\n\t\t\t\tthis._type = type;\n\t\t\t\t//if it's playing, stop and restart it\n\t\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\t\tvar now = this.now();\n\t\t\t\t\tthis._stop(now);\n\t\t\t\t\tthis._start(now);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new TypeError(\"Tone.Noise: invalid type: \"+type);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n *  The playback rate of the noise. Affects\n *  the \"frequency\" of the noise.\n *  @type {Positive}\n *  @signal\n */\nObject.defineProperty(Tone.Noise.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tif (this._source){\n\t\t\tthis._source.playbackRate.value = rate;\n\t\t}\n\t}\n});\n\n/**\n *  internal start method\n *\n *  @param {Time} time\n *  @private\n */\nTone.Noise.prototype._start = function(time){\n\tvar buffer = _noiseBuffers[this._type];\n\tthis._source = new Tone.BufferSource(buffer).connect(this.output);\n\tthis._source.loop = true;\n\tthis._source.playbackRate.value = this._playbackRate;\n\tthis._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n};\n\n/**\n *  internal stop method\n *\n *  @param {Time} time\n *  @private\n */\nTone.Noise.prototype._stop = function(time){\n\tif (this._source){\n\t\tthis._source.stop(this.toSeconds(time));\n\t\tthis._source = null;\n\t}\n};\n\n/**\n * Restarts the noise.\n * @param  {Time} time When to restart the noise.\n * @return {Tone.Noise}      this\n */\nTone.Noise.prototype.restart = function(time){\n\t//TODO could be optimized by cancelling the buffer source 'stop'\n\t//stop and restart\n\tthis._stop(time);\n\tthis._start(time);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Noise} this\n */\nTone.Noise.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tif (this._source !== null){\n\t\tthis._source.disconnect();\n\t\tthis._source = null;\n\t}\n\tthis._buffer = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// THE BUFFERS\n///////////////////////////////////////////////////////////////////////////\n\n//Noise buffer stats\nvar bufferLength = 44100 * 5;\nvar channels = 2;\n\n/**\n *\tThe noise arrays. Generated on initialization.\n *  borrowed heavily from https://github.com/zacharydenton/noise.js\n *  (c) 2013 Zach Denton (MIT)\n *  @static\n *  @private\n *  @type {Array}\n */\nvar _noiseBuffers = {};\nvar _noiseCache = {};\n\nObject.defineProperty(_noiseBuffers, \"pink\", {\n\tget : function(){\n\t\tif (!_noiseCache.pink){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tvar b0, b1, b2, b3, b4, b5, b6;\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\n\t\t\t\t\tchannel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t\t\t\tchannel[i] *= 0.11; // (roughly) compensate for gain\n\t\t\t\t\tb6 = white * 0.115926;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.pink = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.pink;\n\t}\n});\n\nObject.defineProperty(_noiseBuffers, \"brown\", {\n\tget : function(){\n\t\tif (!_noiseCache.brown){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tvar lastOut = 0.0;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\tchannel[i] = (lastOut + (0.02 * white)) / 1.02;\n\t\t\t\t\tlastOut = channel[i];\n\t\t\t\t\tchannel[i] *= 3.5; // (roughly) compensate for gain\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.brown = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.brown;\n\t}\n});\n\nObject.defineProperty(_noiseBuffers, \"white\", {\n\tget : function(){\n\t\tif (!_noiseCache.white){\n\t\t\tvar buffer = [];\n\t\t\tfor (var channelNum = 0; channelNum < channels; channelNum++){\n\t\t\t\tvar channel = new Float32Array(bufferLength);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\tchannel[i] = Math.random() * 2 - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.white = new Tone.Buffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.white;\n\t}\n});\n\nexport default Tone.Noise;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Volume\";\nimport \"../core/Context\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  A single master output which is connected to the\n *          AudioDestinationNode (aka your speakers).\n *          It provides useful conveniences such as the ability\n *          to set the volume and mute the entire application.\n *          It also gives you the ability to apply master effects to your application.\n *          <br><br>\n *          Like Tone.Transport, A single Tone.Master is created\n *          on initialization and you do not need to explicitly construct one.\n *\n *  @constructor\n *  @extends {Tone}\n *  @singleton\n *  @example\n * //the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.Master);\n * //a convenience for connecting to the master output is also provided:\n * oscillator.toMaster();\n * //the above two examples are equivalent.\n */\nTone.Master = function(){\n\n\tTone.AudioNode.call(this);\n\tTone.getContext(function(){\n\t\tthis.createInsOuts(1, 0);\n\n\t\t/**\n\t\t *  The private volume node\n\t\t *  @type  {Tone.Volume}\n\t\t *  @private\n\t\t */\n\t\tthis._volume = this.output = new Tone.Volume();\n\n\t\t/**\n\t\t * The volume of the master output.\n\t\t * @type {Decibels}\n\t\t * @signal\n\t\t */\n\t\tthis.volume = this._volume.volume;\n\n\t\tthis._readOnly(\"volume\");\n\t\t//connections\n\t\tTone.connectSeries(this.input, this.output, this.context.destination);\n\n\t\t//master is a singleton so it adds itself to the context\n\t\tthis.context.master = this;\n\t}.bind(this));\n};\n\nTone.extend(Tone.Master, Tone.AudioNode);\n\n/**\n *  @type {Object}\n *  @const\n */\nTone.Master.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Is an instanceof Tone.Master\n * @type {Boolean}\n */\nTone.Master.prototype.isMaster = true;\n\n/**\n * Mute the output.\n * @memberOf Tone.Master#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * Tone.Master.mute = true;\n */\nObject.defineProperty(Tone.Master.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n *  chained in the master effects chain.\n *  @param {...(AudioNode|Tone)} nodes All arguments will be connected in a row\n *                                  and the Master will be routed through it.\n *  @return  {Tone.Master}  this\n *  @example\n * //some overall compression to keep the levels in check\n * var masterCompressor = new Tone.Compressor({\n * \t\"threshold\" : -6,\n * \t\"ratio\" : 3,\n * \t\"attack\" : 0.5,\n * \t\"release\" : 0.1\n * });\n * //give a little boost to the lows\n * var lowBump = new Tone.Filter(200, \"lowshelf\");\n * //route everything through the filter\n * //and compressor before going to the speakers\n * Tone.Master.chain(lowBump, masterCompressor);\n */\nTone.Master.prototype.chain = function(){\n\tthis.input.disconnect();\n\tvar args = Array.from(arguments);\n\targs.unshift(this.input);\n\targs.push(this.output);\n\tTone.connectSeries.apply(undefined, args);\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Master}  this\n */\nTone.Master.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUGMENT TONE's PROTOTYPE\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n *  @returns {Tone.AudioNode} this\n *  @example\n * //connect an oscillator to the master output\n * var osc = new Tone.Oscillator().toMaster();\n */\nTone.AudioNode.prototype.toMaster = function(){\n\tthis.connect(this.context.master);\n\treturn this;\n};\n\n/**\n *  initialize the module and listen for new audio contexts\n *  @private\n */\nvar MasterConstructor = Tone.Master;\nTone.Master = new MasterConstructor();\n\nTone.Context.on(\"init\", function(context){\n\t// if it already exists, just restore it\n\tif (context.master && context.master.isMaster){\n\t\tTone.Master = context.master;\n\t} else {\n\t\tTone.Master = new MasterConstructor();\n\t}\n});\n\nTone.Context.on(\"close\", function(context){\n\tif (context.master && context.master.isMaster){\n\t\tcontext.master.dispose();\n\t}\n});\n\nexport default Tone.Master;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/ScaledEnvelope\";\nimport \"../component/Envelope\";\n\n/**\n *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n *         it's got a `baseFrequency` and `octaves` parameter.\n *\n *  @extends {Tone.Envelope}\n *  @constructor\n *  @param {Time|Object} [attack]\tthe attack time in seconds\n *  @param {Time} [decay]\tthe decay time in seconds\n *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n *  @param {Time} [release]\tthe release time in seconds\n *  @example\n *  var freqEnv = new Tone.FrequencyEnvelope({\n *  \t\"attack\" : 0.2,\n *  \t\"baseFrequency\" : \"C2\",\n *  \t\"octaves\" : 4\n *  });\n *  freqEnv.connect(oscillator.frequency);\n */\nTone.FrequencyEnvelope = function(){\n\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\t//merge it with the frequency envelope defaults\n\toptions = Tone.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\tTone.ScaledEnvelope.call(this, options);\n\n\t/**\n\t *  Stores the octave value\n\t *  @type {Positive}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t//setup\n\tthis.baseFrequency = options.baseFrequency;\n\tthis.octaves = options.octaves;\n\tthis.exponent = options.exponent;\n};\n\nTone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\n/**\n *  the default parameters\n *  @static\n */\nTone.FrequencyEnvelope.defaults = {\n\t\"baseFrequency\" : 200,\n\t\"octaves\" : 4,\n\t\"exponent\" : 1\n};\n\n/**\n * The envelope's mininum output value. This is the value which it\n * starts at.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = this.toFrequency(min);\n\t\t//also update the octaves\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n * The number of octaves above the baseFrequency that the\n * envelope will scale to.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tthis._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t}\n});\n\n/**\n * The envelope's exponent value.\n * @memberOf Tone.FrequencyEnvelope#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.FrequencyEnvelope.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.FrequencyEnvelope} this\n */\nTone.FrequencyEnvelope.prototype.dispose = function(){\n\tTone.ScaledEnvelope.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.FrequencyEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Scale\";\nimport \"../signal/Pow\";\n\n/**\n *  @class  Performs an exponential scaling on an input signal.\n *          Scales a NormalRange value [0,1] exponentially\n *          to the output range of outputMin to outputMax.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {number} [outputMin=0] The output value when the input is 0.\n *  @param {number} [outputMax=1]\tThe output value when the input is 1.\n *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n *  @example\n * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n * var signal = new Tone.Signal(0.5).connect(scaleExp);\n */\nTone.ScaleExp = function(outputMin, outputMax, exponent){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  scale the input to the output range\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\n\t/**\n\t *  @private\n\t *  @type {Tone.Pow}\n\t *  @private\n\t */\n\tthis._exp = this.input = new Tone.Pow(Tone.defaultArg(exponent, 2));\n\n\tthis._exp.connect(this._scale);\n};\n\nTone.extend(Tone.ScaleExp, Tone.SignalBase);\n\n/**\n * Instead of interpolating linearly between the <code>min</code> and\n * <code>max</code> values, setting the exponent will interpolate between\n * the two values with an exponential curve.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n * The minimum output value. This number is output when\n * the value input value is 0.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = min;\n\t}\n});\n\n/**\n * The maximum output value. This number is output when\n * the value input value is 1.\n * @memberOf Tone.ScaleExp#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.ScaleExp.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._scale.max;\n\t},\n\tset : function(max){\n\t\tthis._scale.max = max;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.ScaleExp} this\n */\nTone.ScaleExp.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._exp.dispose();\n\tthis._exp = null;\n\treturn this;\n};\n\nexport default Tone.ScaleExp;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Param\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Compressor is a thin wrapper around the Web Audio\n *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n *         Compression reduces the volume of loud sounds or amplifies quiet sounds\n *         by narrowing or \"compressing\" an audio signal's dynamic range.\n *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n *  @param {Positive} [ratio] The gain reduction ratio.\n *  @example\n * var comp = new Tone.Compressor(-30, 3);\n */\nTone.Compressor = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\", \"ratio\"], Tone.Compressor);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the compressor node\n\t *  @type {DynamicsCompressorNode}\n\t *  @private\n\t */\n\tthis._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\n\t/**\n\t *  the threshold vaue\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.threshold = new Tone.Param({\n\t\t\"param\" : this._compressor.threshold,\n\t\t\"units\" : Tone.Type.Decibels,\n\t\t\"convert\" : false\n\t});\n\n\t/**\n\t *  The attack parameter\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\n\t/**\n\t *  The release parameter\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\n\t/**\n\t *  The knee parameter\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.knee = new Tone.Param({\n\t\t\"param\" : this._compressor.knee,\n\t\t\"units\" : Tone.Type.Decibels,\n\t\t\"convert\" : false\n\t});\n\n\t/**\n\t *  The ratio value\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.ratio = new Tone.Param({\n\t\t\"param\" : this._compressor.ratio,\n\t\t\"convert\" : false\n\t});\n\n\t//set the defaults\n\tthis._readOnly([\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n\tthis.set(options);\n};\n\nTone.extend(Tone.Compressor, Tone.AudioNode);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Compressor.defaults = {\n\t\"ratio\" : 12,\n\t\"threshold\" : -24,\n\t\"release\" : 0.25,\n\t\"attack\" : 0.003,\n\t\"knee\" : 30\n};\n\n/**\n *  clean up\n *  @returns {Tone.Compressor} this\n */\nTone.Compressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n\tthis._compressor.disconnect();\n\tthis._compressor = null;\n\tthis.attack.dispose();\n\tthis.attack = null;\n\tthis.release.dispose();\n\tthis.release = null;\n\tthis.threshold.dispose();\n\tthis.threshold = null;\n\tthis.ratio.dispose();\n\tthis.ratio = null;\n\tthis.knee.dispose();\n\tthis.knee = null;\n\treturn this;\n};\n\nexport default Tone.Compressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../shim/OfflineAudioContext\";\n\nif (Tone.supported){\n\tif (!Tone.global.hasOwnProperty(\"AudioContext\") && Tone.global.hasOwnProperty(\"webkitAudioContext\")){\n\t\tTone.global.AudioContext = Tone.global.webkitAudioContext;\n\t}\n\n\t//not functionally equivalent, but only an API placeholder\n\tif (!AudioContext.prototype.close){\n\t\tAudioContext.prototype.close = function(){\n\t\t\tif (Tone.isFunction(this.suspend)){\n\t\t\t\tthis.suspend();\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t};\n\t}\n\n\t//not functionally equivalent\n\tif (!AudioContext.prototype.resume){\n\t\tAudioContext.prototype.resume = function(){\n\t\t\t//play some silent audio to jumpstart the context\n\t\t\tvar buffer = this.createBuffer(1, 1, this.sampleRate);\n\t\t\tvar source = this.createBufferSource();\n\t\t\tsource.buffer = buffer;\n\t\t\tsource.connect(this.destination);\n\t\t\tsource.start(0);\n\t\t\treturn Promise.resolve();\n\t\t};\n\t}\n\n\t//createGain\n\tif (!AudioContext.prototype.createGain && AudioContext.prototype.createGainNode){\n\t\tAudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t}\n\n\t//createDelay\n\tif (!AudioContext.prototype.createDelay && AudioContext.prototype.createDelayNode){\n\t\tAudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t}\n\n\t//test decodeAudioData returns a promise\n\t// https://github.com/mohayonao/web-audio-api-shim/blob/master/src/AudioContext.js\n\t// MIT License (c) 2015 @mohayonao\n\tvar decodeAudioDataPromise = false;\n\tvar offlineContext = new OfflineAudioContext(1, 1, 44100);\n\tvar audioData = new Uint32Array([1179011410, 48, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 8, 0, 0, 0, 0]).buffer;\n\ttry {\n\t\tvar ret = offlineContext.decodeAudioData(audioData);\n\t\tif (ret && Tone.isFunction(ret.then)){\n\t\t\tdecodeAudioDataPromise = true;\n\t\t}\n\t} catch (e){\n\t\tdecodeAudioDataPromise = false;\n\t}\n\n\tif (!decodeAudioDataPromise){\n\t\tAudioContext.prototype._native_decodeAudioData = AudioContext.prototype.decodeAudioData;\n\t\tAudioContext.prototype.decodeAudioData = function(audioData){\n\t\t\treturn new Promise(function(success, error){\n\t\t\t\tthis._native_decodeAudioData(audioData, success, error);\n\t\t\t}.bind(this));\n\t\t};\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Time\";\n\n/**\n *  @class Tone.TransportTime is a the time along the Transport's\n *         timeline. It is similar to Tone.Time, but instead of evaluating\n *         against the AudioContext's clock, it is evaluated against\n *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n *  @constructor\n *  @param  {Time}  val    The time value as a number or string\n *  @param  {String=}  units  Unit values\n *  @extends {Tone.Time}\n */\nTone.TransportTime = function(val, units){\n\tif (this instanceof Tone.TransportTime){\n\n\t\tTone.Time.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.TransportTime(val, units);\n\t}\n};\n\nTone.extend(Tone.TransportTime, Tone.Time);\n\n/**\n * Return the current time in whichever context is relevant\n * @type {Number}\n * @private\n */\nTone.TransportTime.prototype._now = function(){\n\treturn Tone.Transport.seconds;\n};\n\nexport default Tone.TransportTime;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TimeBase\";\n\n/**\n *  @class Tone.Frequency is a primitive type for encoding Frequency values.\n *         Eventually all time values are evaluated to hertz\n *         using the `eval` method.\n *  @constructor\n *  @extends {Tone.TimeBase}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * Tone.Frequency(\"C3\") // 261\n * Tone.Frequency(38, \"midi\") //\n * Tone.Frequency(\"C3\").transpose(4);\n */\nTone.Frequency = function(val, units){\n\tif (this instanceof Tone.Frequency){\n\n\t\tTone.TimeBase.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Frequency(val, units);\n\t}\n};\n\nTone.extend(Tone.Frequency, Tone.TimeBase);\n\n///////////////////////////////////////////////////////////////////////////\n//\tAUGMENT BASE EXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\nTone.Frequency.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\"midi\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?midi)/,\n\t\tmethod : function(value){\n\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn Tone.Frequency.mtof(value);\n\t\t\t}\n\t\t}\n\t},\n\t\"note\" : {\n\t\tregexp : /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\tmethod : function(pitch, octave){\n\t\t\tvar index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t\tvar noteNumber = index + (parseInt(octave) + 1) * 12;\n\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\treturn noteNumber;\n\t\t\t} else {\n\t\t\t\treturn Tone.Frequency.mtof(noteNumber);\n\t\t\t}\n\t\t}\n\t},\n\t\"tr\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\tmethod : function(m, q, s){\n\t\t\tvar total = 1;\n\t\t\tif (m && m !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t}\n\t\t\tif (q && q !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(parseFloat(q));\n\t\t\t}\n\t\t\tif (s && s !== \"0\"){\n\t\t\t\ttotal *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t}\n});\n\n///////////////////////////////////////////////////////////////////////////\n//\tEXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Transposes the frequency by the given number of semitones.\n *  @param  {Interval}  interval\n *  @return  {Tone.Frequency} A new transposed frequency\n *  @example\n * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n */\nTone.Frequency.prototype.transpose = function(interval){\n\treturn new this.constructor(this.valueOf() * Tone.intervalToFrequencyRatio(interval));\n};\n\n/**\n *  Takes an array of semitone intervals and returns\n *  an array of frequencies transposed by those intervals.\n *  @param  {Array}  intervals\n *  @return  {Array<Tone.Frequency>} Returns an array of Frequencies\n *  @example\n * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n */\nTone.Frequency.prototype.harmonize = function(intervals){\n\treturn intervals.map(function(interval){\n\t\treturn this.transpose(interval);\n\t}.bind(this));\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Frequency(\"C4\").toMidi(); //60\n */\nTone.Frequency.prototype.toMidi = function(){\n\treturn Tone.Frequency.ftom(this.valueOf());\n};\n\n/**\n *  Return the value of the frequency in Scientific Pitch Notation\n *  @return  {Note}\n *  @example\n * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n */\nTone.Frequency.prototype.toNote = function(){\n\tvar freq = this.toFrequency();\n\tvar log = Math.log2(freq / Tone.Frequency.A4);\n\tvar noteNumber = Math.round(12 * log) + 57;\n\tvar octave = Math.floor(noteNumber/12);\n\tif (octave < 0){\n\t\tnoteNumber += -12 * octave;\n\t}\n\tvar noteName = scaleIndexToNote[noteNumber % 12];\n\treturn noteName + octave.toString();\n};\n\n/**\n *  Return the duration of one cycle in seconds.\n *  @return  {Seconds}\n */\nTone.Frequency.prototype.toSeconds = function(){\n\treturn 1 / Tone.TimeBase.prototype.toSeconds.call(this);\n};\n\n/**\n *  Return the value in Hertz\n *  @return  {Frequency}\n */\nTone.Frequency.prototype.toFrequency = function(){\n\treturn Tone.TimeBase.prototype.toFrequency.call(this);\n};\n\n/**\n *  Return the duration of one cycle in ticks\n *  @return  {Ticks}\n */\nTone.Frequency.prototype.toTicks = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\treturn Math.floor(quarters * Tone.Transport.PPQ);\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS HELPERS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  With no arguments, return 0\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._noArg = function(){\n\treturn 0;\n};\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._frequencyToUnits = function(freq){\n\treturn freq;\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._ticksToUnits = function(ticks){\n\treturn 1 / ((ticks * 60) / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._beatsToUnits = function(beats){\n\treturn 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Frequency.prototype._secondsToUnits = function(seconds){\n\treturn 1 / seconds;\n};\n\n/**\n *  The default units if none are given.\n *  @private\n */\nTone.Frequency.prototype._defaultUnits = \"hz\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tFREQUENCY CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Note to scale index\n *  @type  {Object}\n *  @private\n */\nvar noteToScaleIndex = {\n\t\"cbb\" : -2, \"cb\" : -1, \"c\" : 0, \"c#\" : 1, \"cx\" : 2,\n\t\"dbb\" : 0, \"db\" : 1, \"d\" : 2, \"d#\" : 3, \"dx\" : 4,\n\t\"ebb\" : 2, \"eb\" : 3, \"e\" : 4, \"e#\" : 5, \"ex\" : 6,\n\t\"fbb\" : 3, \"fb\" : 4, \"f\" : 5, \"f#\" : 6, \"fx\" : 7,\n\t\"gbb\" : 5, \"gb\" : 6, \"g\" : 7, \"g#\" : 8, \"gx\" : 9,\n\t\"abb\" : 7, \"ab\" : 8, \"a\" : 9, \"a#\" : 10, \"ax\" : 11,\n\t\"bbb\" : 9, \"bb\" : 10, \"b\" : 11, \"b#\" : 12, \"bx\" : 13,\n};\n\n/**\n *  scale index to note (sharps)\n *  @type  {Array}\n *  @private\n */\nvar scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n/**\n *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n *  A4's values in Hertz.\n *  @type {Frequency}\n *  @static\n */\nTone.Frequency.A4 = 440;\n\n/**\n *  Convert a MIDI note to frequency value.\n *  @param  {MIDI} midi The midi number to convert.\n *  @return {Frequency} the corresponding frequency value\n *  @static\n *  @example\n * Tone.Frequency.mtof(69); // returns 440\n */\nTone.Frequency.mtof = function(midi){\n\treturn Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n};\n\n/**\n *  Convert a frequency value to a MIDI note.\n *  @param {Frequency} frequency The value to frequency value to convert.\n *  @returns  {MIDI}\n *  @static\n *  @example\n * Tone.Frequency.ftom(440); // returns 69\n */\nTone.Frequency.ftom = function(frequency){\n\treturn 69 + Math.round(12 * Math.log2(frequency / Tone.Frequency.A4));\n};\n\nexport default Tone.Frequency;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Pow\";\nimport \"../type/Type\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n *          envelope generator. Tone.Envelope outputs a signal which\n *          can be connected to an AudioParam or Tone.Signal.\n *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Time} [attack] The amount of time it takes for the envelope to go from\n *                         0 to it's maximum value.\n *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n *                       \tto fall to the sustain value. Value must be greater than 0.\n *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n *                                \tthe release is triggered.\n *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n *                         \tValue must be greater than 0.\n *  @example\n * //an amplitude envelope\n * var gainNode = Tone.context.createGain();\n * var env = new Tone.Envelope({\n * \t\"attack\" : 0.1,\n * \t\"decay\" : 0.2,\n * \t\"sustain\" : 1,\n * \t\"release\" : 0.8,\n * });\n * env.connect(gainNode.gain);\n */\nTone.Envelope = function(){\n\n\t//get all of the defaults\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  When triggerAttack is called, the attack time is the amount of\n\t *  time it takes for the envelope to reach it's maximum value.\n\t *  @type {Time}\n\t */\n\tthis.attack = options.attack;\n\n\t/**\n\t *  After the attack portion of the envelope, the value will fall\n\t *  over the duration of the decay time to it's sustain value.\n\t *  @type {Time}\n\t */\n\tthis.decay = options.decay;\n\n\t/**\n\t * \tThe sustain value is the value\n\t * \twhich the envelope rests at after triggerAttack is\n\t * \tcalled, but before triggerRelease is invoked.\n\t *  @type {NormalRange}\n\t */\n\tthis.sustain = options.sustain;\n\n\t/**\n\t *  After triggerRelease is called, the envelope's\n\t *  value will fall to it's miminum value over the\n\t *  duration of the release time.\n\t *  @type {Time}\n\t */\n\tthis.release = options.release;\n\n\t/**\n\t *  the next time the envelope is at standby\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._attackCurve = \"linear\";\n\n\t/**\n\t *  the next time the envelope is at standby\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._releaseCurve = \"exponential\";\n\n\t/**\n\t *  the signal\n\t *  @type {Tone.Signal}\n\t *  @private\n\t */\n\tthis._sig = this.output = new Tone.Signal(0);\n\n\t//set the attackCurve initially\n\tthis.attackCurve = options.attackCurve;\n\tthis.releaseCurve = options.releaseCurve;\n\tthis.decayCurve = options.decayCurve;\n};\n\nTone.extend(Tone.Envelope, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n */\nTone.Envelope.defaults = {\n\t\"attack\" : 0.01,\n\t\"decay\" : 0.1,\n\t\"sustain\" : 0.5,\n\t\"release\" : 1,\n\t\"attackCurve\" : \"linear\",\n\t\"decayCurve\" : \"exponential\",\n\t\"releaseCurve\" : \"exponential\",\n};\n\n/**\n * Read the current value of the envelope. Useful for\n * syncronizing visual output to the envelope.\n * @memberOf Tone.Envelope#\n * @type {Number}\n * @name value\n * @readOnly\n */\nObject.defineProperty(Tone.Envelope.prototype, \"value\", {\n\tget : function(){\n\t\treturn this.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the curve\n *  @param  {Array|String}  curve\n *  @param  {String}  direction  In/Out\n *  @return  {String}  The curve name\n *  @private\n */\nTone.Envelope.prototype._getCurve = function(curve, direction){\n\tif (Tone.isString(curve)){\n\t\treturn curve;\n\t} else if (Tone.isArray(curve)){\n\t\t//look up the name in the curves array\n\t\tfor (var t in Tone.Envelope.Type){\n\t\t\tif (Tone.Envelope.Type[t][direction] === curve){\n\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n *  Assign a the curve to the given name using the direction\n *  @param  {String}  name\n *  @param  {String}  direction In/Out\n *  @param  {Array}  curve\n *  @private\n */\nTone.Envelope.prototype._setCurve = function(name, direction, curve){\n\t//check if it's a valid type\n\tif (Tone.Envelope.Type.hasOwnProperty(curve)){\n\t\tvar curveDef = Tone.Envelope.Type[curve];\n\t\tif (Tone.isObject(curveDef)){\n\t\t\tthis[name] = curveDef[direction];\n\t\t} else {\n\t\t\tthis[name] = curveDef;\n\t\t}\n\t} else if (Tone.isArray(curve)){\n\t\tthis[name] = curve;\n\t} else {\n\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t}\n};\n\n/**\n * The shape of the attack.\n * Can be any of these strings:\n * <ul>\n *   <li>linear</li>\n *   <li>exponential</li>\n *   <li>sine</li>\n *   <li>cosine</li>\n *   <li>bounce</li>\n *   <li>ripple</li>\n *   <li>step</li>\n * </ul>\n * Can also be an array which describes the curve. Values\n * in the array are evenly subdivided and linearly\n * interpolated over the duration of the attack.\n * @memberOf Tone.Envelope#\n * @type {String|Array}\n * @name attackCurve\n * @example\n * env.attackCurve = \"linear\";\n * @example\n * //can also be an array\n * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n */\nObject.defineProperty(Tone.Envelope.prototype, \"attackCurve\", {\n\tget : function(){\n\t\treturn this._getCurve(this._attackCurve, \"In\");\n\t},\n\tset : function(curve){\n\t\tthis._setCurve(\"_attackCurve\", \"In\", curve);\n\t}\n});\n\n/**\n * The shape of the release. See the attack curve types.\n * @memberOf Tone.Envelope#\n * @type {String|Array}\n * @name releaseCurve\n * @example\n * env.releaseCurve = \"linear\";\n */\nObject.defineProperty(Tone.Envelope.prototype, \"releaseCurve\", {\n\tget : function(){\n\t\treturn this._getCurve(this._releaseCurve, \"Out\");\n\t},\n\tset : function(curve){\n\t\tthis._setCurve(\"_releaseCurve\", \"Out\", curve);\n\t}\n});\n\n/**\n * The shape of the decay either \"linear\" or \"exponential\"\n * @memberOf Tone.Envelope#\n * @type {String}\n * @name decayCurve\n * @example\n * env.decayCurve = \"linear\";\n */\nObject.defineProperty(Tone.Envelope.prototype, \"decayCurve\", {\n\tget : function(){\n\t\treturn this._decayCurve;\n\t},\n\tset : function(curve){\n\t\tvar curves = [\"linear\", \"exponential\"];\n\t\tif (!curves.includes(curve)){\n\t\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t\t} else {\n\t\t\tthis._decayCurve = curve;\n\t\t}\n\t}\n});\n\n/**\n *  Trigger the attack/decay portion of the ADSR envelope.\n *  @param  {Time} [time=now] When the attack should start.\n *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n *                               number between 0-1\n *  @returns {Tone.Envelope} this\n *  @example\n *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n *  env.triggerAttack(\"+0.5\", 0.2);\n */\nTone.Envelope.prototype.triggerAttack = function(time, velocity){\n\tthis.log(\"triggerAttack\", time, velocity);\n\ttime = this.toSeconds(time);\n\tvar originalAttack = this.toSeconds(this.attack);\n\tvar attack = originalAttack;\n\tvar decay = this.toSeconds(this.decay);\n\tvelocity = Tone.defaultArg(velocity, 1);\n\t//check if it's not a complete attack\n\tvar currentValue = this.getValueAtTime(time);\n\tif (currentValue > 0){\n\t\t//subtract the current value from the attack time\n\t\tvar attackRate = 1 / attack;\n\t\tvar remainingDistance = 1 - currentValue;\n\t\t//the attack is now the remaining time\n\t\tattack = remainingDistance / attackRate;\n\t}\n\t//attack\n\tif (attack === 0){\n\t\t//case where the attack time is 0 should set instantly\n\t\tthis._sig.setValueAtTime(velocity, time);\n\t} else if (this._attackCurve === \"linear\"){\n\t\tthis._sig.linearRampTo(velocity, attack, time);\n\t} else if (this._attackCurve === \"exponential\"){\n\t\tthis._sig.targetRampTo(velocity, attack, time);\n\t} else if (attack > 0){\n\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\tvar curve = this._attackCurve;\n\t\t//find the starting position in the curve\n\t\tfor (var i = 1; i < curve.length; i++){\n\t\t\t//the starting index is between the two values\n\t\t\tif (curve[i-1] <= currentValue && currentValue <= curve[i]){\n\t\t\t\tcurve = this._attackCurve.slice(i);\n\t\t\t\t//the first index is the current value\n\t\t\t\tcurve[0] = currentValue;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t}\n\t//decay\n\tif (decay){\n\t\tvar decayValue = velocity * this.sustain;\n\t\tvar decayStart = time + attack;\n\t\tthis.log(\"decay\", decayStart);\n\t\tif (this._decayCurve === \"linear\"){\n\t\t\tthis._sig.linearRampTo(decayValue, decay, decayStart+this.sampleTime);\n\t\t} else if (this._decayCurve === \"exponential\"){\n\t\t\tthis._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Triggers the release of the envelope.\n *  @param  {Time} [time=now] When the release portion of the envelope should start.\n *  @returns {Tone.Envelope} this\n *  @example\n *  //trigger release immediately\n *  env.triggerRelease();\n */\nTone.Envelope.prototype.triggerRelease = function(time){\n\tthis.log(\"triggerRelease\", time);\n\ttime = this.toSeconds(time);\n\tvar currentValue = this.getValueAtTime(time);\n\tif (currentValue > 0){\n\t\tvar release = this.toSeconds(this.release);\n\t\tif (this._releaseCurve === \"linear\"){\n\t\t\tthis._sig.linearRampTo(0, release, time);\n\t\t} else if (this._releaseCurve === \"exponential\"){\n\t\t\tthis._sig.targetRampTo(0, release, time);\n\t\t} else {\n\t\t\tvar curve = this._releaseCurve;\n\t\t\tif (Tone.isArray(curve)){\n\t\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\t\tthis._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Get the scheduled value at the given time. This will\n *  return the unconverted (raw) value.\n *  @param  {Number}  time  The time in seconds.\n *  @return  {Number}  The scheduled value at the given time.\n */\nTone.Envelope.prototype.getValueAtTime = function(time){\n\treturn this._sig.getValueAtTime(time);\n};\n\n/**\n *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n *  some duration, then triggerRelease.\n *  @param {Time} duration The duration of the sustain.\n *  @param {Time} [time=now] When the attack should be triggered.\n *  @param {number} [velocity=1] The velocity of the envelope.\n *  @returns {Tone.Envelope} this\n *  @example\n * //trigger the attack and then the release after 0.6 seconds.\n * env.triggerAttackRelease(0.6);\n */\nTone.Envelope.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + this.toSeconds(duration));\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled envelope changes after the given time.\n *  @param  {Time} after\n *  @returns {Tone.Envelope} this\n */\nTone.Envelope.prototype.cancel = function(after){\n\tthis._sig.cancelScheduledValues(after);\n\treturn this;\n};\n\n/**\n *  Borrows the connect method from Tone.Signal.\n *  @function\n *  @private\n */\nTone.Envelope.prototype.connect = Tone.SignalBase.prototype.connect;\n\n/**\n \t *  Generate some complex envelope curves.\n \t */\n(function _createCurves(){\n\n\tvar curveLen = 128;\n\n\tvar i, k;\n\n\t//cosine curve\n\tvar cosineCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tcosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n\t}\n\n\t//ripple curve\n\tvar rippleCurve = [];\n\tvar rippleCurveFreq = 6.4;\n\tfor (i = 0; i < curveLen - 1; i++){\n\t\tk = (i / (curveLen - 1));\n\t\tvar sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\trippleCurve[i] = sineWave/10 + k * 0.83;\n\t}\n\trippleCurve[curveLen - 1] = 1;\n\n\t//stairs curve\n\tvar stairsCurve = [];\n\tvar steps = 5;\n\tfor (i = 0; i < curveLen; i++){\n\t\tstairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n\t}\n\n\t//in-out easing curve\n\tvar sineCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tk = i / (curveLen - 1);\n\t\tsineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t}\n\n\t//a bounce curve\n\tvar bounceCurve = [];\n\tfor (i = 0; i < curveLen; i++){\n\t\tk = i / (curveLen - 1);\n\t\tvar freq = Math.pow(k, 3) * 4 + 0.2;\n\t\tvar val = Math.cos(freq * Math.PI * 2 * k);\n\t\tbounceCurve[i] = Math.abs(val * (1 - k));\n\t}\n\n\t/**\n\t *  Invert a value curve to make it work for the release\n\t *  @private\n\t */\n\tfunction invertCurve(curve){\n\t\tvar out = new Array(curve.length);\n\t\tfor (var j = 0; j < curve.length; j++){\n\t\t\tout[j] = 1 - curve[j];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t *  reverse the curve\n\t *  @private\n\t */\n\tfunction reverseCurve(curve){\n\t\treturn curve.slice(0).reverse();\n\t}\n\n\t/**\n\t *  attack and release curve arrays\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tTone.Envelope.Type = {\n\t\t\"linear\" : \"linear\",\n\t\t\"exponential\" : \"exponential\",\n\t\t\"bounce\" : {\n\t\t\tIn : invertCurve(bounceCurve),\n\t\t\tOut : bounceCurve\n\t\t},\n\t\t\"cosine\" : {\n\t\t\tIn : cosineCurve,\n\t\t\tOut : reverseCurve(cosineCurve)\n\t\t},\n\t\t\"step\" : {\n\t\t\tIn : stairsCurve,\n\t\t\tOut : invertCurve(stairsCurve)\n\t\t},\n\t\t\"ripple\" : {\n\t\t\tIn : rippleCurve,\n\t\t\tOut : invertCurve(rippleCurve)\n\t\t},\n\t\t\"sine\" : {\n\t\t\tIn : sineCurve,\n\t\t\tOut : invertCurve(sineCurve)\n\t\t}\n\t};\n\n})();\n\n/**\n *  Disconnect and dispose.\n *  @returns {Tone.Envelope} this\n */\nTone.Envelope.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._sig.dispose();\n\tthis._sig = null;\n\tthis._attackCurve = null;\n\tthis._releaseCurve = null;\n\treturn this;\n};\n\nexport default Tone.Envelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../component/Merge\";\nimport \"../signal/Zero\";\nimport \"../component/Split\";\nimport \"../core/Gain\";\nimport \"../signal/Signal\";\nimport \"../core/Context\";\n\nif (Tone.supported && !Tone.global.AudioContext.prototype.createStereoPanner){\n\n\t/**\n\t * @class Shimmed StereoPannerNode\n\t * @param  {AudioContext} context\n\t * @private\n\t */\n\tvar StereoPannerNode = function(context){\n\n\t\t/**\n\t\t * The audio context\n\t\t * @type {AudioContext}\n\t\t */\n\t\tthis.context = context;\n\n\t\t/**\n\t\t * The left/right panning. [-1, 1]\n\t\t * @type {AudioRange}\n\t\t * @signal\n\t\t */\n\t\tthis.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\n\t\t/**\n\t\t * Equal power scaling of the right gain\n\t\t * @type {Tone.WaveShaper}\n\t\t */\n\t\tvar rightWaveShaper = new Tone.WaveShaper(function(val){\n\t\t\treturn Tone.equalPowerScale((val+1)/2);\n\t\t}, 4096);\n\n\t\t/**\n\t\t * Equal power scaling of the left gain\n\t\t * @type {Tone.WaveShaper}\n\t\t * @private\n\t\t */\n\t\tvar leftWaveShaper = new Tone.WaveShaper(function(val){\n\t\t\treturn Tone.equalPowerScale(1 - (val+1)/2);\n\t\t}, 4096);\n\n\t\t/**\n\t\t * The left gain value\n\t\t * @type {Tone.Gain}\n\t\t * @private\n\t\t */\n\t\tvar leftGain = new Tone.Gain();\n\n\t\t/**\n\t\t * The right gain value\n\t\t * @type {Tone.Gain}\n\t\t * @private\n\t\t */\n\t\tvar rightGain = new Tone.Gain();\n\n\t\t/**\n\t\t * Split the incoming signal\n\t\t * @type {Tone.Split}\n\t\t * @private\n\t\t */\n\t\tvar split = this.input = new Tone.Split();\n\t\t//fixes safari issue with splitting audio\n\t\tsplit._splitter.channelCountMode = \"explicit\";\n\n\t\t/**\n\t\t * Keeps the waveshapers from optimizing 0s\n\t\t * @type {Tone.Zero}\n\t\t * @private\n\t\t */\n\t\tvar zero = new Tone.Zero();\n\t\tzero.fan(rightWaveShaper, leftWaveShaper);\n\n\t\t/**\n\t\t * Merge the outgoing signal\n\t\t * @type {Tone.Merge}\n\t\t * @private\n\t\t */\n\t\tvar merge = this.output = new Tone.Merge();\n\n\t\t//connections\n\t\tsplit.left.chain(leftGain, merge.left);\n\t\tsplit.right.chain(rightGain, merge.right);\n\t\tthis.pan.chain(leftWaveShaper, leftGain.gain);\n\t\tthis.pan.chain(rightWaveShaper, rightGain.gain);\n\t};\n\n\tStereoPannerNode.prototype.disconnect = function(){\n\t\tthis.output.disconnect.apply(this.output, arguments);\n\t};\n\n\tStereoPannerNode.prototype.connect = function(){\n\t\tthis.output.connect.apply(this.output, arguments);\n\t};\n\n\t//add it to the AudioContext\n\tAudioContext.prototype.createStereoPanner = function(){\n\t\treturn new StereoPannerNode(this);\n\t};\n\tTone.Context.prototype.createStereoPanner = function(){\n\t\treturn new StereoPannerNode(this);\n\t};\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../shim/StereoPannerNode\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n *          support 3D. Panner uses the StereoPannerNode when available.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {NormalRange} [initialPan=0] The initail panner value (center).\n *  @example\n *  //pan the input signal hard right.\n *  var panner = new Tone.Panner(1);\n */\nTone.Panner = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pan\"], Tone.Panner);\n\tTone.AudioNode.call(this);\n\t/**\n\t*  the panner node\n\t*  @type {StereoPannerNode}\n\t*  @private\n\t*/\n\tthis._panner = this.input = this.output = this.context.createStereoPanner();\n\n\t/**\n\t*  The pan control. -1 = hard left, 1 = hard right.\n\t*  @type {AudioRange}\n\t*  @signal\n\t*/\n\tthis.pan = this._panner.pan;\n\n\t//initial value\n\tthis.pan.value = options.pan;\n\tthis._readOnly(\"pan\");\n};\n\nTone.extend(Tone.Panner, Tone.AudioNode);\n\n/**\n *  Defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Panner.defaults = {\n\t\"pan\" : 0\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Panner} this\n */\nTone.Panner.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable(\"pan\");\n\tthis._panner.disconnect();\n\tthis._panner = null;\n\tthis.pan = null;\n\treturn this;\n};\n\nexport default Tone.Panner;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.FMOscillator\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {String} type The type of the carrier oscillator.\n *  @param {String} modulationType The type of the modulator oscillator.\n *  @example\n * //a sine oscillator frequency-modulated by a square wave\n * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n */\nTone.FMOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.FMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The carrier oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._carrier.detune;\n\tthis.detune.value = options.detune;\n\n\t/**\n\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t *  modulating signal (ma) -- as in ma/mf.\n\t *\t@type {Positive}\n\t *\t@signal\n\t */\n\tthis.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\tthis.modulationIndex.units = Tone.Type.Positive;\n\n\t/**\n\t *  The modulating oscillator\n\t *  @type  {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t/**\n\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t *  Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch the modulator an octave below carrier\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//connections\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\tthis._modulator.connect(this._modulationNode.gain);\n\tthis._modulationNode.connect(this._carrier.frequency);\n\tthis._carrier.connect(this.output);\n\tthis.detune.connect(this._modulator.detune);\n\n\tthis.phase = options.phase;\n\n\tthis._readOnly([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n};\n\nTone.extend(Tone.FMOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.FMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"type\" : \"sine\",\n\t\"modulationIndex\" : 2,\n\t\"modulationType\" : \"square\",\n\t\"harmonicity\" : 1\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FMOscillator.prototype._start = function(time){\n\tthis._modulator.start(time);\n\tthis._carrier.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FMOscillator.prototype._stop = function(time){\n\tthis._modulator.stop(time);\n\tthis._carrier.stop(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._carrier.restart(time);\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.FMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._carrier.type;\n\t},\n\tset : function(type){\n\t\tthis._carrier.type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.FMOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._carrier.baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._carrier.baseType = baseType;\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.FMOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._carrier.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n});\n\n/**\n * The type of the modulator oscillator\n * @memberOf Tone.FMOscillator#\n * @type {String}\n * @name modulationType\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\treturn this._modulator.type;\n\t},\n\tset : function(type){\n\t\tthis._modulator.type = type;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.FMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._carrier.phase;\n\t},\n\tset : function(phase){\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.FMOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.FMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._carrier.partials;\n\t},\n\tset : function(partials){\n\t\tthis._carrier.partials = partials;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.FMOscillator} this\n */\nTone.FMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.modulationIndex.dispose();\n\tthis.modulationIndex = null;\n\treturn this;\n};\n\nexport default Tone.FMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Signal\";\nimport \"../signal/WaveShaper\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is\n *         a square and only odd-numbered harmonics are present. At all other widths\n *         even-numbered harmonics are present. Read more\n *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {Frequency} [frequency] The frequency of the oscillator\n *  @param {NormalRange} [width] The width of the pulse\n *  @example\n * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n */\nTone.PulseOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"width\"], Tone.Oscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The width of the pulse.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\n\t/**\n\t *  gate the width amount\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._widthGate = new Tone.Gain(0);\n\n\t/**\n\t *  the sawtooth oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._sawtooth = new Tone.Oscillator({\n\t\tfrequency : options.frequency,\n\t\tdetune : options.detune,\n\t\ttype : \"sawtooth\",\n\t\tphase : options.phase\n\t});\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._sawtooth.frequency;\n\n\t/**\n\t *  The detune in cents.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._sawtooth.detune;\n\n\t/**\n\t *  Threshold the signal to turn it into a square\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._thresh = new Tone.WaveShaper(function(val){\n\t\tif (val < 0){\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t});\n\n\t//connections\n\tthis._sawtooth.chain(this._thresh, this.output);\n\tthis.width.chain(this._widthGate, this._thresh);\n\tthis._readOnly([\"width\", \"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.PulseOscillator, Tone.Source);\n\n/**\n *  The default parameters.\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.PulseOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"width\" : 0.2,\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} time\n *  @private\n */\nTone.PulseOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._sawtooth.start(time);\n\tthis._widthGate.gain.setValueAtTime(1, time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time\n *  @private\n */\nTone.PulseOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._sawtooth.stop(time);\n\t//the width is still connected to the output.\n\t//that needs to be stopped also\n\tthis._widthGate.gain.setValueAtTime(0, time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PulseOscillator.prototype.restart = function(time){\n\tthis._sawtooth.restart(time);\n\tthis._widthGate.gain.cancelScheduledValues(time);\n\tthis._widthGate.gain.setValueAtTime(1, time);\n};\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.PulseOscillator#\n * @type {Degrees}\n * @name phase\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._sawtooth.phase;\n\t},\n\tset : function(phase){\n\t\tthis._sawtooth.phase = phase;\n\t}\n});\n\n/**\n * The type of the oscillator. Always returns \"pulse\".\n * @readOnly\n * @memberOf Tone.PulseOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn \"pulse\";\n\t}\n});\n\n/**\n * The baseType of the oscillator. Always returns \"pulse\".\n * @readOnly\n * @memberOf Tone.PulseOscillator#\n * @type {string}\n * @name baseType\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn \"pulse\";\n\t}\n});\n\n/**\n * The partials of the waveform. Cannot set partials for this waveform type\n * @memberOf Tone.PulseOscillator#\n * @type {Array}\n * @name partials\n * @private\n */\nObject.defineProperty(Tone.PulseOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn [];\n\t}\n});\n\n/**\n *  Clean up method.\n *  @return {Tone.PulseOscillator} this\n */\nTone.PulseOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._sawtooth.dispose();\n\tthis._sawtooth = null;\n\tthis._writable([\"width\", \"frequency\", \"detune\"]);\n\tthis.width.dispose();\n\tthis.width = null;\n\tthis._widthGate.dispose();\n\tthis._widthGate = null;\n\tthis._thresh.dispose();\n\tthis._thresh = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.PulseOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../type/Type\";\nimport \"../core/TimelineState\";\n\n/**\n *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n *          callback for a single or repeatable events along the timeline.\n *\n *  @extends {Tone}\n *  @param {function} callback The callback to invoke at the time.\n *  @param {*} value The value or values which should be passed to\n *                      the callback function on invocation.\n *  @example\n * var chord = new Tone.Event(function(time, chord){\n * \t//the chord as well as the exact time of the event\n * \t//are passed in as arguments to the callback function\n * }, [\"D4\", \"E4\", \"F4\"]);\n * //start the chord at the beginning of the transport timeline\n * chord.start();\n * //loop it every measure for 8 measures\n * chord.loop = 8;\n * chord.loopEnd = \"1m\";\n */\nTone.Event = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"value\"], Tone.Event);\n\tTone.call(this);\n\n\t/**\n\t *  Loop value\n\t *  @type  {Boolean|Positive}\n\t *  @private\n\t */\n\tthis._loop = options.loop;\n\n\t/**\n\t *  The callback to invoke.\n\t *  @type  {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t *  The value which is passed to the\n\t *  callback function.\n\t *  @type  {*}\n\t *  @private\n\t */\n\tthis.value = options.value;\n\n\t/**\n\t *  When the note is scheduled to start.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopStart = this.toTicks(options.loopStart);\n\n\t/**\n\t *  When the note is scheduled to start.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopEnd = this.toTicks(options.loopEnd);\n\n\t/**\n\t *  Tracks the scheduled events\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\n\t/**\n\t *  The playback speed of the note. A speed of 1\n\t *  is no change.\n\t *  @private\n\t *  @type {Positive}\n\t */\n\tthis._playbackRate = 1;\n\n\t/**\n\t *  A delay time from when the event is scheduled to start\n\t *  @type {Ticks}\n\t *  @private\n\t */\n\tthis._startOffset = 0;\n\n\t/**\n\t *  private holder of probability value\n\t *  @type {NormalRange}\n\t *  @private\n\t */\n\tthis._probability = options.probability;\n\n\t/**\n\t *  the amount of variation from the\n\t *  given time.\n\t *  @type {Boolean|Time}\n\t *  @private\n\t */\n\tthis._humanize = options.humanize;\n\n\t/**\n\t *  If mute is true, the callback won't be\n\t *  invoked.\n\t *  @type {Boolean}\n\t */\n\tthis.mute = options.mute;\n\n\t//set the initial values\n\tthis.playbackRate = options.playbackRate;\n};\n\nTone.extend(Tone.Event);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @const\n */\nTone.Event.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopEnd\" : \"1m\",\n\t\"loopStart\" : 0,\n\t\"playbackRate\" : 1,\n\t\"value\" : null,\n\t\"probability\" : 1,\n\t\"mute\" : false,\n\t\"humanize\" : false,\n};\n\n/**\n *  Reschedule all of the events along the timeline\n *  with the updated values.\n *  @param {Time} after Only reschedules events after the given time.\n *  @return  {Tone.Event}  this\n *  @private\n */\nTone.Event.prototype._rescheduleEvents = function(after){\n\t//if no argument is given, schedules all of the events\n\tafter = Tone.defaultArg(after, -1);\n\tthis._state.forEachFrom(after, function(event){\n\t\tvar duration;\n\t\tif (event.state === Tone.State.Started){\n\t\t\tif (Tone.isDefined(event.id)){\n\t\t\t\tTone.Transport.clear(event.id);\n\t\t\t}\n\t\t\tvar startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t\t\tif (this._loop === true || Tone.isNumber(this._loop) && this._loop > 1){\n\t\t\t\tduration = Infinity;\n\t\t\t\tif (Tone.isNumber(this._loop)){\n\t\t\t\t\tduration = (this._loop) * this._getLoopDuration();\n\t\t\t\t}\n\t\t\t\tvar nextEvent = this._state.getAfter(startTick);\n\t\t\t\tif (nextEvent !== null){\n\t\t\t\t\tduration = Math.min(duration, nextEvent.time - startTick);\n\t\t\t\t}\n\t\t\t\tif (duration !== Infinity){\n\t\t\t\t\t//schedule a stop since it's finite duration\n\t\t\t\t\tthis._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t\t\t\t\tduration = Tone.Ticks(duration);\n\t\t\t\t}\n\t\t\t\tvar interval = Tone.Ticks(this._getLoopDuration());\n\t\t\t\tevent.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.Ticks(startTick), duration);\n\t\t\t} else {\n\t\t\t\tevent.id = Tone.Transport.schedule(this._tick.bind(this), Tone.Ticks(startTick));\n\t\t\t}\n\t\t}\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Returns the playback state of the note, either \"started\" or \"stopped\".\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.Event#\n *  @name state\n */\nObject.defineProperty(Tone.Event.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(Tone.Transport.ticks);\n\t}\n});\n\n/**\n *  The start from the scheduled start time\n *  @type {Ticks}\n *  @memberOf Tone.Event#\n *  @name startOffset\n *  @private\n */\nObject.defineProperty(Tone.Event.prototype, \"startOffset\", {\n\tget : function(){\n\t\treturn this._startOffset;\n\t},\n\tset : function(offset){\n\t\tthis._startOffset = offset;\n\t}\n});\n\n/**\n *  The probability of the notes being triggered.\n *  @memberOf Tone.Event#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Event.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._probability;\n\t},\n\tset : function(prob){\n\t\tthis._probability = prob;\n\t}\n});\n\n/**\n *  If set to true, will apply small random variation\n *  to the callback time. If the value is given as a time, it will randomize\n *  by that amount.\n *  @type {Boolean|Time}\n *  @name humanize\n *  @memberof Tone.Event#\n *  @example\n * event.humanize = true;\n */\nObject.defineProperty(Tone.Event.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._humanize;\n\t},\n\tset : function(variation){\n\t\tthis._humanize = variation;\n\t}\n});\n\n/**\n *  Start the note at the given time.\n *  @param  {TimelinePosition}  time  When the note should start.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.start = function(time){\n\ttime = this.toTicks(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Stopped){\n\t\tthis._state.add({\n\t\t\t\"state\" : Tone.State.Started,\n\t\t\t\"time\" : time,\n\t\t\t\"id\" : undefined,\n\t\t});\n\t\tthis._rescheduleEvents(time);\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the Event at the given time.\n *  @param  {TimelinePosition}  time  When the note should stop.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.stop = function(time){\n\tthis.cancel(time);\n\ttime = this.toTicks(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\t\tvar previousEvent = this._state.getBefore(time);\n\t\tvar reschedulTime = time;\n\t\tif (previousEvent !== null){\n\t\t\treschedulTime = previousEvent.time;\n\t\t}\n\t\tthis._rescheduleEvents(reschedulTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel all scheduled events greater than or equal to the given time\n *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.cancel = function(time){\n\ttime = Tone.defaultArg(time, -Infinity);\n\ttime = this.toTicks(time);\n\tthis._state.forEachFrom(time, function(event){\n\t\tTone.Transport.clear(event.id);\n\t});\n\tthis._state.cancel(time);\n\treturn this;\n};\n\n/**\n *  The callback function invoker. Also\n *  checks if the Event is done playing\n *  @param  {Number}  time  The time of the event in seconds\n *  @private\n */\nTone.Event.prototype._tick = function(time){\n\tvar ticks = Tone.Transport.getTicksAtTime(time);\n\tif (!this.mute && this._state.getValueAtTime(ticks) === Tone.State.Started){\n\t\tif (this.probability < 1 && Math.random() > this.probability){\n\t\t\treturn;\n\t\t}\n\t\tif (this.humanize){\n\t\t\tvar variation = 0.02;\n\t\t\tif (!Tone.isBoolean(this.humanize)){\n\t\t\t\tvariation = this.toSeconds(this.humanize);\n\t\t\t}\n\t\t\ttime += (Math.random() * 2 - 1) * variation;\n\t\t}\n\t\tthis.callback(time, this.value);\n\t}\n};\n\n/**\n *  Get the duration of the loop.\n *  @return  {Ticks}\n *  @private\n */\nTone.Event.prototype._getLoopDuration = function(){\n\treturn Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n};\n\n/**\n *  If the note should loop or not\n *  between Tone.Event.loopStart and\n *  Tone.Event.loopEnd. If set to true,\n *  the event will loop indefinitely,\n *  if set to a number greater than 1\n *  it will play a specific number of\n *  times, if set to false, 0 or 1, the\n *  part will only play once.\n *  @memberOf Tone.Event#\n *  @type {Boolean|Positive}\n *  @name loop\n */\nObject.defineProperty(Tone.Event.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\tthis._loop = loop;\n\t\tthis._rescheduleEvents();\n\t}\n});\n\n/**\n * \tThe playback rate of the note. Defaults to 1.\n *  @memberOf Tone.Event#\n *  @type {Positive}\n *  @name playbackRate\n *  @example\n * note.loop = true;\n * //repeat the note twice as fast\n * note.playbackRate = 2;\n */\nObject.defineProperty(Tone.Event.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis._rescheduleEvents();\n\t}\n});\n\n/**\n *  The loopEnd point is the time the event will loop\n *  if Tone.Event.loop is true.\n *  @memberOf Tone.Event#\n *  @type {Time}\n *  @name loopEnd\n */\nObject.defineProperty(Tone.Event.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop){\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n});\n\n/**\n *  The time when the loop should start.\n *  @memberOf Tone.Event#\n *  @type {Time}\n *  @name loopStart\n */\nObject.defineProperty(Tone.Event.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop){\n\t\t\tthis._rescheduleEvents();\n\t\t}\n\t}\n});\n\n/**\n *  The current progress of the loop interval.\n *  Returns 0 if the event is not started yet or\n *  it is not set to loop.\n *  @memberOf Tone.Event#\n *  @type {NormalRange}\n *  @name progress\n *  @readOnly\n */\nObject.defineProperty(Tone.Event.prototype, \"progress\", {\n\tget : function(){\n\t\tif (this._loop){\n\t\t\tvar ticks = Tone.Transport.ticks;\n\t\t\tvar lastEvent = this._state.get(ticks);\n\t\t\tif (lastEvent !== null && lastEvent.state === Tone.State.Started){\n\t\t\t\tvar loopDuration = this._getLoopDuration();\n\t\t\t\tvar progress = (ticks - lastEvent.time) % loopDuration;\n\t\t\t\treturn progress / loopDuration;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Event}  this\n */\nTone.Event.prototype.dispose = function(){\n\tthis.cancel();\n\tthis._state.dispose();\n\tthis._state = null;\n\tthis.callback = null;\n\tthis.value = null;\n};\n\nexport default Tone.Event;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Subtract\";\nimport \"../signal/Add\";\nimport \"../component/Merge\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels).\n *         MidSideMerge merges the mid and side signal after they've been seperated\n *         by Tone.MidSideSplit.<br><br>\n *         <code>\n *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n *         </code>\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.MidSideMerge = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  The mid signal input. Alias for\n\t *  <code>input[0]</code>\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.mid = this.input[0] = new Tone.Gain();\n\n\t/**\n\t *  recombine the mid/side into Left\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._left = new Tone.Add();\n\n\t/**\n\t * Multiply the left by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis._timesTwoLeft = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  The side signal input. Alias for\n\t *  <code>input[1]</code>\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.side = this.input[1] = new Tone.Gain();\n\n\t/**\n\t *  recombine the mid/side into Right\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._right = new Tone.Subtract(/*\"($0 - $1) * $2\"*/);\n\n\t/**\n\t * Multiply the right by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis._timesTwoRight = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  Merge the left/right signal back into a stereo signal.\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = this.output = new Tone.Merge();\n\n\tthis.mid.connect(this._left, 0, 0);\n\tthis.side.connect(this._left, 0, 1);\n\tthis.mid.connect(this._right, 0, 0);\n\tthis.side.connect(this._right, 0, 1);\n\tthis._left.connect(this._timesTwoLeft);\n\tthis._right.connect(this._timesTwoRight);\n\tthis._timesTwoLeft.connect(this._merge, 0, 0);\n\tthis._timesTwoRight.connect(this._merge, 0, 1);\n};\n\nTone.extend(Tone.MidSideMerge, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.MidSideMerge} this\n */\nTone.MidSideMerge.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._left.dispose();\n\tthis._left = null;\n\tthis._timesTwoLeft.dispose();\n\tthis._timesTwoLeft = null;\n\tthis._right.dispose();\n\tthis._right = null;\n\tthis._timesTwoRight.dispose();\n\tthis._timesTwoRight = null;\n\tthis._merge.dispose();\n\tthis._merge = null;\n\treturn this;\n};\n\nexport default Tone.MidSideMerge;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\nimport \"../component/Split\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels). <br><br>\n *         <code>\n *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n *         </code>\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.MidSideSplit = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(0, 2);\n\n\t/**\n\t *  split the incoming signal into left and right channels\n\t *  @type  {Tone.Split}\n\t *  @private\n\t */\n\tthis._split = this.input = new Tone.Split();\n\n\t/**\n\t *  The mid send. Connect to mid processing. Alias for\n\t *  <code>output[0]</code>\n\t *  @type {Tone.Add}\n\t */\n\tthis._midAdd = new Tone.Add();\n\n\t/**\n\t * Multiply the _midAdd by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis.mid = this.output[0] = new Tone.Multiply(Math.SQRT1_2);\n\n\t/**\n\t *  The side output. Connect to side processing. Also Output 1\n\t *  @type {Tone.Subtract}\n\t */\n\tthis._sideSubtract = new Tone.Subtract();\n\n\t/**\n\t * Multiply the _midAdd by sqrt(1/2)\n\t * @type {Tone.Multiply}\n\t */\n\tthis.side = this.output[1] = new Tone.Multiply(Math.SQRT1_2);\n\n\tthis._split.connect(this._midAdd, 0, 0);\n\tthis._split.connect(this._midAdd, 1, 1);\n\tthis._split.connect(this._sideSubtract, 0, 0);\n\tthis._split.connect(this._sideSubtract, 1, 1);\n\tthis._midAdd.connect(this.mid);\n\tthis._sideSubtract.connect(this.side);\n};\n\nTone.extend(Tone.MidSideSplit, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.MidSideSplit} this\n */\nTone.MidSideSplit.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._midAdd.dispose();\n\tthis._midAdd = null;\n\tthis._sideSubtract.dispose();\n\tthis._sideSubtract = null;\n\tthis._split.dispose();\n\tthis._split = null;\n\treturn this;\n};\n\nexport default Tone.MidSideSplit;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../core/AudioNode\";\nimport \"../component/FeedbackCombFilter\";\n\n/**\n *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to\n *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Time|Object} [delayTime] The delay time of the comb filter\n *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n *                                signal as it is fedback.\n */\nTone.LowpassCombFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"resonance\", \"dampening\"], Tone.LowpassCombFilter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._combFilter = this.output = new Tone.FeedbackCombFilter(options.delayTime, options.resonance);\n\n\t/**\n\t *  The delayTime of the comb filter.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._combFilter.delayTime;\n\n\t/**\n\t *  the lowpass filter\n\t *  @type  {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._lowpass = this.input = new Tone.Filter({\n\t\t\"frequency\" : options.dampening,\n\t\t\"type\" : \"lowpass\",\n\t\t\"Q\" : 0,\n\t\t\"rolloff\" : -12\n\t});\n\n\t/**\n\t *  The dampening control of the feedback\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = this._lowpass.frequency;\n\t\n\t/**\n\t *  The amount of feedback of the delayed signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._combFilter.resonance;\n\n\t//connections\n\tthis._lowpass.connect(this._combFilter);\n\tthis._readOnly([\"dampening\", \"resonance\", \"delayTime\"]);\n};\n\nTone.extend(Tone.LowpassCombFilter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.LowpassCombFilter.defaults = {\n\t\"delayTime\" : 0.1,\n\t\"resonance\" : 0.5,\n\t\"dampening\" : 3000\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.LowpassCombFilter} this\n */\nTone.LowpassCombFilter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"dampening\", \"resonance\", \"delayTime\"]);\n\tthis._combFilter.dispose();\n\tthis._combFilter = null;\n\tthis.resonance = null;\n\tthis.delayTime = null;\n\tthis._lowpass.dispose();\n\tthis._lowpass = null;\n\tthis.dampening = null;\n\treturn this;\n};\n\nexport default Tone.LowpassCombFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TransportTime\";\n\n/**\n *  @class Tone.Ticks is a primitive type for encoding Time values.\n *         Tone.Ticks can be constructed with or without the `new` keyword. Tone.Ticks can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.TransportTime}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Ticks(\"4n\");//a quarter note\n */\nTone.Ticks = function(val, units){\n\tif (this instanceof Tone.Ticks){\n\n\t\tTone.TransportTime.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Ticks(val, units);\n\t}\n};\n\nTone.extend(Tone.Ticks, Tone.TransportTime);\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.Ticks.prototype._defaultUnits = \"i\";\n\n/**\n * Get the current time in the given units\n * @return {Ticks}\n * @private\n */\nTone.Ticks.prototype._now = function(){\n\treturn Tone.Transport.ticks;\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._beatsToUnits = function(beats){\n\treturn this._getPPQ() * beats;\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._secondsToUnits = function(seconds){\n\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Ticks.prototype._ticksToUnits = function(ticks){\n\treturn ticks;\n};\n\n/**\n *  Return the time in ticks\n *  @return  {Ticks}\n */\nTone.Ticks.prototype.toTicks = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the time in ticks\n *  @return  {Ticks}\n */\nTone.Ticks.prototype.toSeconds = function(){\n\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n};\n\nexport default Tone.Ticks;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Ticks\";\n\n/**\n *  @class Tone.TransportEvent is an internal class used by (Tone.Transport)[Transport]\n *         to schedule events. Do no invoke this class directly, it is\n *         handled from within Tone.Transport.\n *  @extends {Tone}\n *  @param {Object} options\n */\nTone.TransportEvent = function(Transport, options){\n\n\toptions = Tone.defaultArg(options, Tone.TransportEvent.defaults);\n\tTone.call(this);\n\n\t/**\n\t * Reference to the Transport that created it\n\t * @type {Tone.Transport}\n\t */\n\tthis.Transport = Transport;\n\n\t/**\n\t * The unique id of the event\n\t * @type {Number}\n\t */\n\tthis.id = Tone.TransportEvent._eventId++;\n\n\t/**\n\t * The time the event starts\n\t * @type {Ticks}\n\t */\n\tthis.time = Tone.Ticks(options.time);\n\n\t/**\n\t * The callback to invoke\n\t * @type {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t * If the event should be removed after being created.\n\t * @type {Boolean}\n\t * @private\n\t */\n\tthis._once = options.once;\n};\n\nTone.extend(Tone.TransportEvent);\n\n/**\n * The defaults\n * @static\n * @type {Object}\n */\nTone.TransportEvent.defaults = {\n\t\"once\" : false,\n\t\"callback\" : Tone.noOp,\n};\n\n/**\n * Current ID counter\n * @private\n * @static\n * @type {Number}\n */\nTone.TransportEvent._eventId = 0;\n\n/**\n * Invoke the event callback.\n * @param  {Time} time  The AudioContext time in seconds of the event\n */\nTone.TransportEvent.prototype.invoke = function(time){\n\tif (this.callback){\n\t\tthis.callback(time);\n\t\tif (this._once && this.Transport){\n\t\t\tthis.Transport.clear(this.id);\n\t\t}\n\t}\n};\n\n/**\n * Clean up\n * @return {Tone.TransportEvent} this\n */\nTone.TransportEvent.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tthis.Transport = null;\n\tthis.callback = null;\n\tthis.time = null;\n\treturn this;\n};\n\nexport default Tone.TransportEvent;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/TickSignal\";\nimport \"../core/TimelineState\";\nimport \"../core/Timeline\";\nimport \"../core/Param\";\n\n/**\n *  @class  Uses [Tone.TickSignal](TickSignal) to track elapsed ticks with\n *  \t\tcomplex automation curves.\n *\n * \t@constructor\n *  @extends {Tone}\n *  @param {Frequency} frequency The initial frequency that the signal ticks at\n *  @param {Tone.Param=} param A parameter to control (such as playbackRate)\n */\nTone.TickSource = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\"], Tone.TickSource);\n\n\t/**\n\t *  The frequency the callback function should be invoked.\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.TickSignal(options.frequency);\n\tthis._readOnly(\"frequency\");\n\n\t/**\n\t *  The state timeline\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t/**\n\t * The offset values of the ticks\n\t * @type {Tone.Timeline}\n\t * @private\n\t */\n\tthis._tickOffset = new Tone.Timeline();\n\t//add the first event\n\tthis.setTicksAtTime(0, 0);\n};\n\nTone.extend(Tone.TickSource);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.TickSource.defaults = {\n\t\"frequency\" : 1,\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.TickSource#\n *  @name state\n */\nObject.defineProperty(Tone.TickSource.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the clock at the given time. Optionally pass in an offset\n *  of where to start the tick counter from.\n *  @param  {Time=}  time    The time the clock should start\n *  @param {Ticks} [offset=0] The number of ticks to start the source at\n *  @return  {Tone.TickSource}  this\n */\nTone.TickSource.prototype.start = function(time, offset){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tif (Tone.isDefined(offset)){\n\t\t\tthis.setTicksAtTime(offset, time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the clock. Stopping the clock resets the tick counter to 0.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.TickSource} this\n *  @example\n * clock.stop();\n */\nTone.TickSource.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\t//cancel the previous stop\n\tif (this._state.getValueAtTime(time) === Tone.State.Stopped){\n\t\tvar event = this._state.get(time);\n\t\tif (event.time > 0){\n\t\t\tthis._tickOffset.cancel(event.time);\n\t\t\tthis._state.cancel(event.time);\n\t\t}\n\t}\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\tthis.setTicksAtTime(0, time);\n\treturn this;\n};\n\n/**\n *  Pause the clock. Pausing does not reset the tick counter.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.pause = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n *  @param {Time} [time=now] When to clear the events after\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.cancel = function(time){\n\ttime = this.toSeconds(time);\n\tthis._state.cancel(time);\n\tthis._tickOffset.cancel(time);\n\treturn this;\n};\n\n/**\n * Get the elapsed ticks at the given time\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}     The number of ticks\n */\nTone.TickSource.prototype.getTicksAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t//this event allows forEachBetween to iterate until the current time\n\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\tthis._state.add(tmpEvent);\n\n\t//keep track of the previous offset event\n\tvar lastState = stopEvent;\n\tvar elapsedTicks = 0;\n\n\t//iterate through all the events since the last stop\n\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\tvar periodStartTime = lastState.time;\n\t\t//if there is an offset event in this period use that\n\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\tif (offsetEvent.time >= lastState.time){\n\t\t\telapsedTicks = offsetEvent.ticks;\n\t\t\tperiodStartTime = offsetEvent.time;\n\t\t}\n\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\telapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n\t\t} \n\t\tlastState = e;\n\t}.bind(this));\n\n\t//remove the temporary event\n\tthis._state.remove(tmpEvent);\n\n\t//return the ticks\n\treturn elapsedTicks;\n};\n\n/**\n *  The number of times the callback was invoked. Starts counting at 0\n *  and increments after the callback was invoked. Returns -1 when stopped.\n *  @memberOf Tone.TickSource#\n *  @name ticks\n *  @type {Ticks}\n */\nObject.defineProperty(Tone.TickSource.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn this.getTicksAtTime(this.now());\n\t},\n\tset : function(t){\n\t\tthis.setTicksAtTime(t, this.now());\n\t}\n});\n\n/**\n *  The time since ticks=0 that the TickSource has been running. Accounts\n *  for tempo curves\n *  @memberOf Tone.TickSource#\n *  @name seconds\n *  @type {Seconds}\n */\nObject.defineProperty(Tone.TickSource.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this.getSecondsAtTime(this.now());\n\t},\n\tset : function(s){\n\t\tvar now = this.now();\n\t\tvar ticks = this.frequency.timeToTicks(s, now);\n\t\tthis.setTicksAtTime(ticks, now);\n\t}\n});\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.TickSource.prototype.getSecondsAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t//this event allows forEachBetween to iterate until the current time\n\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\tthis._state.add(tmpEvent);\n\n\t//keep track of the previous offset event\n\tvar lastState = stopEvent;\n\tvar elapsedSeconds = 0;\n\n\t//iterate through all the events since the last stop\n\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\tvar periodStartTime = lastState.time;\n\t\t//if there is an offset event in this period use that\n\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\tif (offsetEvent.time >= lastState.time){\n\t\t\telapsedSeconds = offsetEvent.seconds;\n\t\t\tperiodStartTime = offsetEvent.time;\n\t\t}\n\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\telapsedSeconds += e.time - periodStartTime;\n\t\t} \n\t\tlastState = e;\n\t}.bind(this));\n\n\t//remove the temporary event\n\tthis._state.remove(tmpEvent);\n\n\t//return the ticks\n\treturn elapsedSeconds;\n};\n\n/**\n * Set the clock's ticks at the given time.\n * @param  {Ticks} ticks The tick value to set\n * @param  {Time} time  When to set the tick value\n * @return {Tone.TickSource}       this\n */\nTone.TickSource.prototype.setTicksAtTime = function(ticks, time){\n\ttime = this.toSeconds(time);\n\tthis._tickOffset.cancel(time);\n\tthis._tickOffset.add({\n\t\t\"time\" : time,\n\t\t\"ticks\" : ticks,\n\t\t\"seconds\" : this.frequency.getDurationOfTicks(ticks, time)\n\t});\n\treturn this;\n};\n\n/**\n *  Returns the scheduled state at the given time.\n *  @param  {Time}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n *  @example\n * source.start(\"+0.1\");\n * source.getStateAtTime(\"+0.1\"); //returns \"started\"\n */\nTone.TickSource.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this._state.getValueAtTime(time);\n};\n\n/**\n * Get the time of the given tick. The second argument\n * is when to test before. Since ticks can be set (with setTicksAtTime)\n * there may be multiple times for a given tick value. \n * @param  {Ticks} ticks The tick number.\n * @param  {Time=} before When to measure the tick value from. \n * @return {Time}       The time of the tick\n */\nTone.TickSource.prototype.getTimeOfTick = function(tick, before){\n\tbefore = Tone.defaultArg(before, this.now());\n\tvar offset = this._tickOffset.get(before);\n\tvar event = this._state.get(before);\n\tvar startTime = Math.max(offset.time, event.time);\n\tvar absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n\treturn this.frequency.getTimeOfTick(absoluteTicks);\n};\n\n/**\n * @callback forEachTickBetween\n * @param {Time} when\n * @param {Ticks} when\n */\n\n/**\n *  Invoke the callback event at all scheduled ticks between the \n *  start time and the end time\n *  @param  {Time}    startTime  The beginning of the search range\n *  @param  {Time}    endTime    The end of the search range\n *  @param  {ForEachCallback}  callback   The callback to invoke with each tick\n *  @return  {Tone.TickSource}    this\n */\nTone.TickSource.prototype.forEachTickBetween = function(startTime, endTime, callback){\n\n\t//only iterate through the sections where it is \"started\"\n\tvar lastStateEvent = this._state.get(startTime);\n\tthis._state.forEachBetween(startTime, endTime, function(event){\n\t\tif (lastStateEvent.state === Tone.State.Started && event.state !== Tone.State.Started){\n\t\t\tthis.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n\t\t}\n\t\tlastStateEvent = event;\n\t}.bind(this));\n\n\tstartTime = Math.max(lastStateEvent.time, startTime);\n\n\tif (lastStateEvent.state === Tone.State.Started && this._state){\n\t\t//figure out the difference between the frequency ticks and the \n\t\tvar startTicks = this.frequency.getTicksAtTime(startTime);\n\t\tvar ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n\t\tvar diff = startTicks - ticksAtStart;\n\t\tvar offset = diff % 1;\n\t\tif (offset !== 0){\n\t\t\toffset = 1 - offset;\n\t\t}\n\t\tvar nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\t\tvar error = null;\n\t\twhile (nextTickTime < endTime && this._state){\n\t\t\ttry {\n\t\t\t\tcallback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n\t\t\t} catch (e){\n\t\t\t\terror = e;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this._state){\n\t\t\t\tnextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n\t\t\t} \n\t\t}\n\t}\n\n\tif (error){\n\t\tthrow error;\n\t}\n\t\n\treturn this;\n};\n\n/**\n *  Clean up\n *  @returns {Tone.TickSource} this\n */\nTone.TickSource.prototype.dispose = function(){\n\tTone.Param.prototype.dispose.call(this);\n\tthis._state.dispose();\n\tthis._state = null;\n\tthis._tickOffset.dispose();\n\tthis._tickOffset = null;\n\tthis._writable(\"frequency\");\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.TickSource;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Abs\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\nimport \"../type/Type\";\nimport \"../core/Delay\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Follower is a  crude envelope follower which will follow\n *          the amplitude of an incoming signal. Read more about envelope followers (also known\n *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Time} [smoothing=0.05] The rate of change of the follower.\n *  @example\n * var follower = new Tone.Follower(0.3);\n */\nTone.Follower = function(){\n\n\tvar options = Tone.defaults(arguments, [\"smoothing\"], Tone.Follower);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  @type {Tone.Abs}\n\t *  @private\n\t */\n\tthis._abs = new Tone.Abs();\n\n\t/**\n\t *  the lowpass filter which smooths the input\n\t *  @type {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._filter = this.context.createBiquadFilter();\n\tthis._filter.type = \"lowpass\";\n\tthis._filter.frequency.value = 0;\n\tthis._filter.Q.value = 0;\n\n\t/**\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._sub = new Tone.Subtract();\n\n\t/**\n\t *  delay node to compare change over time\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delay = new Tone.Delay(this.blockTime);\n\n\t/**\n\t *  the smoothing value\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._smoothing = options.smoothing;\n\n\tTone.connect(this.input, this._delay);\n\tTone.connect(this.input, this._sub, 0, 1);\n\tthis._sub.chain(this._abs, this._filter, this.output);\n\n\t//set the smoothing initially\n\tthis.smoothing = options.smoothing;\n};\n\nTone.extend(Tone.Follower, Tone.AudioNode);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Follower.defaults = {\n\t\"smoothing\" : 0.05,\n};\n\n/**\n * The attack time.\n * @memberOf Tone.Follower#\n * @type {Time}\n * @name smoothing\n */\nObject.defineProperty(Tone.Follower.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._smoothing;\n\t},\n\tset : function(smoothing){\n\t\tthis._smoothing = smoothing;\n\t\tthis._filter.frequency.value = Tone.Time(smoothing).toFrequency() * 0.5;\n\t}\n});\n\n/**\n *  Borrows the connect method from Signal so that the output can be used\n *  as a Tone.Signal control signal.\n *  @function\n */\nTone.Follower.prototype.connect = Tone.SignalBase.prototype.connect;\n\n/**\n *  dispose\n *  @returns {Tone.Follower} this\n */\nTone.Follower.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._filter.disconnect();\n\tthis._filter = null;\n\tthis._delay.dispose();\n\tthis._delay = null;\n\tthis._sub.disconnect();\n\tthis._sub = null;\n\tthis._abs.dispose();\n\tthis._abs = null;\n\treturn this;\n};\n\nexport default Tone.Follower;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/ScaleExp\";\nimport \"../signal/Signal\";\nimport \"../core/Param\";\nimport \"../core/Delay\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Comb filters are basic building blocks for physical modeling. Read more\n *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Time|Object} [delayTime] The delay time of the filter.\n *  @param {NormalRange=} resonance The amount of feedback the filter has.\n */\nTone.FeedbackCombFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"resonance\"], Tone.FeedbackCombFilter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the delay node\n\t *  @type {DelayNode}\n\t *  @private\n\t */\n\tthis._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\n\t/**\n\t *  The amount of delay of the comb filter.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._delay.delayTime;\n\n\t/**\n\t *  the feedback node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of feedback of the delayed signal.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._feedback.gain;\n\n\tthis._delay.chain(this._feedback, this._delay);\n\tthis._readOnly([\"resonance\", \"delayTime\"]);\n};\n\nTone.extend(Tone.FeedbackCombFilter, Tone.AudioNode);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.FeedbackCombFilter.defaults = {\n\t\"delayTime\" : 0.1,\n\t\"resonance\" : 0.5\n};\n\n/**\n *  clean up\n *  @returns {Tone.FeedbackCombFilter} this\n */\nTone.FeedbackCombFilter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"resonance\", \"delayTime\"]);\n\tthis._delay.dispose();\n\tthis._delay = null;\n\tthis.delayTime = null;\n\tthis._feedback.dispose();\n\tthis._feedback = null;\n\tthis.resonance = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackCombFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Filter\";\nimport \"../signal/Signal\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Split the incoming signal into three bands (low, mid, high)\n *         with two crossover frequency controls.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n */\nTone.MultibandSplit = function(){\n\n\tvar options = Tone.defaults(arguments, [\"lowFrequency\", \"highFrequency\"], Tone.MultibandSplit);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the input\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.input = new Tone.Gain();\n\n\t/**\n\t *  the outputs\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis.output = new Array(3);\n\n\t/**\n\t *  The low band. Alias for <code>output[0]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.low = this.output[0] = new Tone.Filter(0, \"lowpass\");\n\n\t/**\n\t *  the lower filter of the mid band\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._lowMidFilter = new Tone.Filter(0, \"highpass\");\n\n\t/**\n\t *  The mid band output. Alias for <code>output[1]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.mid = this.output[1] = new Tone.Filter(0, \"lowpass\");\n\n\t/**\n\t *  The high band output. Alias for <code>output[2]</code>\n\t *  @type {Tone.Filter}\n\t */\n\tthis.high = this.output[2] = new Tone.Filter(0, \"highpass\");\n\n\t/**\n\t *  The low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The quality of all the filters\n\t *  @type {Number}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q);\n\n\tthis.input.fan(this.low, this.high);\n\tthis.input.chain(this._lowMidFilter, this.mid);\n\t//the frequency control signal\n\tthis.lowFrequency.connect(this.low.frequency);\n\tthis.lowFrequency.connect(this._lowMidFilter.frequency);\n\tthis.highFrequency.connect(this.mid.frequency);\n\tthis.highFrequency.connect(this.high.frequency);\n\t//the Q value\n\tthis.Q.connect(this.low.Q);\n\tthis.Q.connect(this._lowMidFilter.Q);\n\tthis.Q.connect(this.mid.Q);\n\tthis.Q.connect(this.high.Q);\n\n\tthis._readOnly([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n};\n\nTone.extend(Tone.MultibandSplit, Tone.AudioNode);\n\n/**\n *  @private\n *  @static\n *  @type {Object}\n */\nTone.MultibandSplit.defaults = {\n\t\"lowFrequency\" : 400,\n\t\"highFrequency\" : 2500,\n\t\"Q\" : 1,\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MultibandSplit} this\n */\nTone.MultibandSplit.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\tthis.low.dispose();\n\tthis.low = null;\n\tthis._lowMidFilter.dispose();\n\tthis._lowMidFilter = null;\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.high.dispose();\n\tthis.high = null;\n\tthis.lowFrequency.dispose();\n\tthis.lowFrequency = null;\n\tthis.highFrequency.dispose();\n\tthis.highFrequency = null;\n\tthis.Q.dispose();\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.MultibandSplit;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Pow applies an exponent to the incoming signal. The incoming signal\n *         must be AudioRange.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n *  @example\n * var pow = new Tone.Pow(2);\n * var sig = new Tone.Signal(0.5).connect(pow);\n * //output of pow is 0.25. \n */\nTone.Pow = function(exp){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t * the exponent\n\t * @private\n\t * @type {number}\n\t */\n\tthis._exp = Tone.defaultArg(exp, 1);\n\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n};\n\nTone.extend(Tone.Pow, Tone.SignalBase);\n\n/**\n * The value of the exponent.\n * @memberOf Tone.Pow#\n * @type {number}\n * @name value\n */\nObject.defineProperty(Tone.Pow.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._exp;\n\t},\n\tset : function(exp){\n\t\tthis._exp = exp;\n\t\tthis._expScaler.setMap(this._expFunc(this._exp));\n\t}\n});\n\n/**\n *  the function which maps the waveshaper\n *  @param   {number} exp\n *  @return {function}\n *  @private\n */\nTone.Pow.prototype._expFunc = function(exp){\n\treturn function(val){\n\t\treturn Math.pow(Math.abs(val), exp);\n\t};\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Pow} this\n */\nTone.Pow.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._expScaler.dispose();\n\tthis._expScaler = null;\n\treturn this;\n};\n\nexport default Tone.Pow;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.TimeBase is a flexible encoding of time\n *         which can be evaluated to and from a string.\n *  @extends {Tone}\n *  @param  {Time}  val    The time value as a number, string or object\n *  @param  {String=}  units  Unit values\n *  @example\n * Tone.TimeBase(4, \"n\")\n * Tone.TimeBase(2, \"t\")\n * Tone.TimeBase(\"2t\")\n * Tone.TimeBase({\"2t\" : 2})\n * Tone.TimeBase(\"2t\") + Tone.TimeBase(\"4n\");\n */\nTone.TimeBase = function(val, units){\n\n\t//allows it to be constructed with or without 'new'\n\tif (this instanceof Tone.TimeBase){\n\n\t\t/**\n\t\t *  The value\n\t\t *  @type  {Number|String|Tone.TimeBase}\n\t\t *  @private\n\t\t */\n\t\tthis._val = val;\n\n\t\t/**\n\t\t * The units\n\t\t * @type {String?}\n\t\t * @private\n\t\t */\n\t\tthis._units = units;\n\n\t\t//test if the value is a string representation of a number\n\t\tif (Tone.isUndef(this._units) && Tone.isString(this._val) &&\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tparseFloat(this._val) == this._val && this._val.charAt(0) !== \"+\"){\n\t\t\tthis._val = parseFloat(this._val);\n\t\t\tthis._units = this._defaultUnits;\n\t\t} else if (val && val.constructor === this.constructor){\n\t\t\t//if they're the same type, just copy values over\n\t\t\tthis._val = val._val;\n\t\t\tthis._units = val._units;\n\t\t} else if (val instanceof Tone.TimeBase){\n\t\t\tswitch (this._defaultUnits){\n\t\t\t\tcase \"s\" :\n\t\t\t\t\tthis._val = val.toSeconds();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"i\" :\n\t\t\t\t\tthis._val = val.toTicks();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hz\" :\n\t\t\t\t\tthis._val = val.toFrequency();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"midi\" :\n\t\t\t\t\tthis._val = val.toMidi();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tthrow new Error(\"Unrecognized default units \"+this._defaultUnits);\n\t\t\t}\n\t\t}\n\n\t} else {\n\n\t\treturn new Tone.TimeBase(val, units);\n\t}\n};\n\nTone.extend(Tone.TimeBase);\n\n///////////////////////////////////////////////////////////////////////////\n//\tABSTRACT SYNTAX TREE PARSER\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  All the primary expressions.\n *  @private\n *  @type  {Object}\n */\nTone.TimeBase.prototype._expressions = {\n\t\"n\" : {\n\t\tregexp : /^(\\d+)n(\\.?)$/i,\n\t\tmethod : function(value, dot){\n\t\t\tvalue = parseInt(value);\n\t\t\tvar scalar = dot === \".\" ? 1.5 : 1;\n\t\t\tif (value === 1){\n\t\t\t\treturn this._beatsToUnits(this._getTimeSignature())*scalar;\n\t\t\t} else {\n\t\t\t\treturn this._beatsToUnits(4 / value)*scalar;\n\t\t\t}\n\t\t}\n\t},\n\t\"t\" : {\n\t\tregexp : /^(\\d+)t$/i,\n\t\tmethod : function(value){\n\t\t\tvalue = parseInt(value);\n\t\t\treturn this._beatsToUnits(8 / (parseInt(value) * 3));\n\t\t}\n\t},\n\t\"m\" : {\n\t\tregexp : /^(\\d+)m$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._beatsToUnits(parseInt(value) * this._getTimeSignature());\n\t\t}\n\t},\n\t\"i\" : {\n\t\tregexp : /^(\\d+)i$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._ticksToUnits(parseInt(value));\n\t\t}\n\t},\n\t\"hz\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)hz$/i,\n\t\tmethod : function(value){\n\t\t\treturn this._frequencyToUnits(parseFloat(value));\n\t\t}\n\t},\n\t\"tr\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n\t\tmethod : function(m, q, s){\n\t\t\tvar total = 0;\n\t\t\tif (m && m !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t}\n\t\t\tif (q && q !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(parseFloat(q));\n\t\t\t}\n\t\t\tif (s && s !== \"0\"){\n\t\t\t\ttotal += this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t},\n\t\"s\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)s$/,\n\t\tmethod : function(value){\n\t\t\treturn this._secondsToUnits(parseFloat(value));\n\t\t}\n\t},\n\t\"samples\" : {\n\t\tregexp : /^(\\d+)samples$/,\n\t\tmethod : function(value){\n\t\t\treturn parseInt(value) / this.context.sampleRate;\n\t\t}\n\t},\n\t\"default\" : {\n\t\tregexp : /^(\\d+(?:\\.\\d+)?)$/,\n\t\tmethod : function(value){\n\t\t\treturn this._expressions[this._defaultUnits].method.call(this, value);\n\t\t}\n\t}\n};\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.TimeBase.prototype._defaultUnits = \"s\";\n\n///////////////////////////////////////////////////////////////////////////\n//\tTRANSPORT FALLBACKS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * Return the bpm, or 120 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getBpm = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.bpm.value;\n\t} else {\n\t\treturn 120;\n\t}\n};\n\n/**\n * Return the timeSignature or 4 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getTimeSignature = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.timeSignature;\n\t} else {\n\t\treturn 4;\n\t}\n};\n\n/**\n * Return the PPQ or 192 if Transport is not available\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._getPPQ = function(){\n\tif (Tone.Transport){\n\t\treturn Tone.Transport.PPQ;\n\t} else {\n\t\treturn 192;\n\t}\n};\n\n/**\n * Return the current time in whichever context is relevant\n * @type {Number}\n * @private\n */\nTone.TimeBase.prototype._now = function(){\n\treturn this.now();\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tUNIT CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._frequencyToUnits = function(freq){\n\treturn 1/freq;\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._beatsToUnits = function(beats){\n\treturn (60 / this._getBpm()) * beats;\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._secondsToUnits = function(seconds){\n\treturn seconds;\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._ticksToUnits = function(ticks){\n\treturn ticks * (this._beatsToUnits(1) / this._getPPQ());\n};\n\n/**\n * With no arguments, return 'now'\n *  @return  {Number}\n *  @private\n */\nTone.TimeBase.prototype._noArg = function(){\n\treturn this._now();\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tEXPRESSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Evaluate the time value. Returns the time\n *  in seconds.\n *  @return  {Seconds}\n */\nTone.TimeBase.prototype.valueOf = function(){\n\tif (Tone.isUndef(this._val)){\n\t\treturn this._noArg();\n\t} else if (Tone.isString(this._val) && Tone.isUndef(this._units)){\n\t\tfor (var units in this._expressions){\n\t\t\tif (this._expressions[units].regexp.test(this._val.trim())){\n\t\t\t\tthis._units = units;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} else if (Tone.isObject(this._val)){\n\t\tvar total = 0;\n\t\tfor (var typeName in this._val){\n\t\t\tvar quantity = this._val[typeName];\n\t\t\tvar time = (new this.constructor(typeName)).valueOf() * quantity;\n\t\t\ttotal += time;\n\t\t}\n\t\treturn total;\n\t}\n\tif (Tone.isDefined(this._units)){\n\t\tvar expr = this._expressions[this._units];\n\t\tvar matching = this._val.toString().trim().match(expr.regexp);\n\t\tif (matching){\n\t\t\treturn expr.method.apply(this, matching.slice(1));\n\t\t} else {\n\t\t\treturn expr.method.call(this, parseFloat(this._val));\n\t\t}\n\t} else {\n\t\treturn this._val;\n\t}\n};\n\n/**\n *  Return the value in seconds\n *  @return {Seconds}\n */\nTone.TimeBase.prototype.toSeconds = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value in hertz\n *  @return {Frequency}\n */\nTone.TimeBase.prototype.toFrequency = function(){\n\treturn 1 / this.toSeconds();\n};\n\n/**\n *  Return the time in samples\n *  @return  {Samples}\n */\nTone.TimeBase.prototype.toSamples = function(){\n\treturn this.toSeconds() * this.context.sampleRate;\n};\n\n/**\n *  Return the time in milliseconds.\n *  @return  {Milliseconds}\n */\nTone.TimeBase.prototype.toMilliseconds = function(){\n\treturn this.toSeconds() * 1000;\n};\n\n/**\n *  Clean up\n *  @return {Tone.TimeBase} this\n */\nTone.TimeBase.prototype.dispose = function(){\n\tthis._val = null;\n\tthis._units = null;\n};\n\nexport default Tone.TimeBase;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/TimeBase\";\nimport \"../type/Frequency\";\n\n/**\n *  @class Tone.Time is a primitive type for encoding Time values.\n *         Tone.Time can be constructed with or without the `new` keyword. Tone.Time can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.TimeBase}\n *  @param  {String|Number|Object}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Time(\"4n\");//a quarter note\n */\nTone.Time = function(val, units){\n\tif (this instanceof Tone.Time){\n\n\t\tTone.TimeBase.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Time(val, units);\n\t}\n};\n\nTone.extend(Tone.Time, Tone.TimeBase);\n\n/**\n * Extend the base expressions\n */\nTone.Time.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\"quantize\" : {\n\t\tregexp : /^@(.+)/,\n\t\tmethod : function(capture){\n\t\t\tif (Tone.Transport){\n\t\t\t\tvar quantTo = new this.constructor(capture);\n\t\t\t\treturn this._secondsToUnits(Tone.Transport.nextSubdivision(quantTo));\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t},\n\t\"now\" : {\n\t\tregexp : /^\\+(.+)/,\n\t\tmethod : function(capture){\n\t\t\treturn this._now() + (new this.constructor(capture));\n\t\t}\n\t}\n});\n\n/**\n *  Quantize the time by the given subdivision. Optionally add a\n *  percentage which will move the time value towards the ideal\n *  quantized value by that percentage.\n *  @param  {Number|Time}  val    The subdivision to quantize to\n *  @param  {NormalRange}  [percent=1]  Move the time value\n *                                   towards the quantized value by\n *                                   a percentage.\n *  @return  {Number}  this\n *  @example\n * Tone.Time(21).quantize(2) //returns 22\n * Tone.Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n */\nTone.Time.prototype.quantize = function(subdiv, percent){\n\tpercent = Tone.defaultArg(percent, 1);\n\tvar subdivision = new this.constructor(subdiv);\n\tvar value = this.valueOf();\n\tvar multiple = Math.round(value / subdivision);\n\tvar ideal = multiple * subdivision;\n\tvar diff = ideal - value;\n\treturn value + diff * percent;\n};\n\n///////////////////////////////////////////////////////////////////////////\n// CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Convert a Time to Notation. The notation values are will be the\n *  closest representation between 1m to 128th note.\n *  @return {Notation}\n *  @example\n * //if the Transport is at 120bpm:\n * Tone.Time(2).toNotation();//returns \"1m\"\n */\nTone.Time.prototype.toNotation = function(){\n\tvar time = this.toSeconds();\n\tvar testNotations = [\"1m\"];\n\tfor (var power = 1; power < 8; power++){\n\t\tvar subdiv = Math.pow(2, power);\n\t\ttestNotations.push(subdiv + \"n.\");\n\t\ttestNotations.push(subdiv + \"n\");\n\t\ttestNotations.push(subdiv + \"t\");\n\t}\n\ttestNotations.push(\"0\");\n\t//find the closets notation representation\n\tvar closest = testNotations[0];\n\tvar closestSeconds = Tone.Time(testNotations[0]).toSeconds();\n\ttestNotations.forEach(function(notation){\n\t\tvar notationSeconds = Tone.Time(notation).toSeconds();\n\t\tif (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)){\n\t\t\tclosest = notation;\n\t\t\tclosestSeconds = notationSeconds;\n\t\t}\n\t});\n\treturn closest;\n};\n\n/**\n *  Return the time encoded as Bars:Beats:Sixteenths.\n *  @return  {BarsBeatsSixteenths}\n */\nTone.Time.prototype.toBarsBeatsSixteenths = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\tquarters = parseFloat(quarters.toFixed(4));\n\tvar measures = Math.floor(quarters / this._getTimeSignature());\n\tvar sixteenths = (quarters % 1) * 4;\n\tquarters = Math.floor(quarters) % this._getTimeSignature();\n\tsixteenths = sixteenths.toString();\n\tif (sixteenths.length > 3){\n\t\t// the additional parseFloat removes insignificant trailing zeroes\n\t\tsixteenths = parseFloat(parseFloat(sixteenths).toFixed(3));\n\t}\n\tvar progress = [measures, quarters, sixteenths];\n\treturn progress.join(\":\");\n};\n\n/**\n *  Return the time in ticks.\n *  @return  {Ticks}\n */\nTone.Time.prototype.toTicks = function(){\n\tvar quarterTime = this._beatsToUnits(1);\n\tvar quarters = this.valueOf() / quarterTime;\n\treturn Math.round(quarters * this._getPPQ());\n};\n\n/**\n *  Return the time in seconds.\n *  @return  {Seconds}\n */\nTone.Time.prototype.toSeconds = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value as a midi note.\n *  @return  {Midi}\n */\nTone.Time.prototype.toMidi = function(){\n\treturn Tone.Frequency.ftom(this.toFrequency());\n};\n\nexport default Tone.Time;\n\n","import Tone from \"../core/Tone\";\n\nif (Tone.supported){\n\tif (!OscillatorNode.prototype.setPeriodicWave){\n\t\tOscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t}\n\tif (!AudioContext.prototype.createPeriodicWave){\n\t\tAudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t}\n}\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\nimport \"../shim/OscillatorNode\";\n\n/**\n *  @class Wrapper around the native fire-and-forget OscillatorNode. Adds the\n *     ability to reschedule the stop method. ***[Tone.Oscillator](Oscillator) is better \n *     for most use-cases***\n *  @extends {Tone.AudioNode}\n *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n *  @param  {Function}  onload  The callback to invoke when the\n *                               buffer is done playing.\n */\nTone.OscillatorNode = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OscillatorNode);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The callback to invoke after the\n\t *  buffer source is done playing.\n\t *  @type  {Function}\n\t */\n\tthis.onended = options.onended;\n\n\t/**\n\t *  The oscillator start time\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._startTime = -1;\n\n\t/**\n\t *  The oscillator stop time\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._stopTime = -1;\n\n\t/**\n\t *  The gain node which envelopes the OscillatorNode\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._gainNode = this.output = new Tone.Gain(0);\n\n\t/**\n\t *  The oscillator\n\t *  @type  {OscillatorNode}\n\t *  @private\n\t */\n\tthis._oscillator = this.context.createOscillator();\n\tTone.connect(this._oscillator, this._gainNode);\n\tthis.type = options.type;\n\n\t/**\n\t *  The frequency of the oscillator\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Param({\n\t\tparam : this._oscillator.frequency, \n\t\tunits : Tone.Type.Frequency,\n\t\tvalue : options.frequency\n\t});\n\n\t/**\n\t *  The detune of the oscillator\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Param({\n\t\tparam : this._oscillator.detune,\n\t\tunits : Tone.Type.Cents,\n\t\tvalue : options.detune\n\t});\n\n\t/**\n\t *  The value that the buffer ramps to\n\t *  @type {Gain}\n\t *  @private\n\t */\n\tthis._gain = 1;\n};\n\nTone.extend(Tone.OscillatorNode, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.OscillatorNode.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"type\" : \"sine\",\n\t\"onended\" : Tone.noOp\n};\n\n/**\n *  Returns the playback state of the oscillator, either \"started\" or \"stopped\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.OscillatorNode#\n *  @name state\n */\nObject.defineProperty(Tone.OscillatorNode.prototype, \"state\", {\n\tget : function(){\n\t\treturn this.getStateAtTime(this.now());\n\t}\n});\n\n/**\n *  Get the playback state at the given time\n *  @param  {Time}  time  The time to test the state at\n *  @return  {Tone.State}  The playback state. \n */\nTone.OscillatorNode.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._startTime !== -1 && time >= this._startTime && (this._stopTime === -1 || time <= this._stopTime)){\n\t\treturn Tone.State.Started;\n\t} else {\n\t\treturn Tone.State.Stopped;\n\t}\n};\n\n/**\n     * Start the oscillator node at the given time\n     * @param  {Time=} time When to start the oscillator\n     * @return {OscillatorNode}      this\n     */\nTone.OscillatorNode.prototype.start = function(time){\n\tthis.log(\"start\", time);\n\tif (this._startTime === -1){\n\t\tthis._startTime = this.toSeconds(time);\n\t\tthis._startTime = Math.max(this._startTime, this.context.currentTime);\n\t\tthis._oscillator.start(this._startTime);\n\t\tthis._gainNode.gain.setValueAtTime(1, this._startTime);\n\t} else {\n\t\tthrow new Error(\"cannot call OscillatorNode.start more than once\");\n\t}\n\treturn this;\n};\n\n/**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  {PeriodicWave} periodicWave PeriodicWave should be created with context.createPeriodicWave\n     * @return {OscillatorNode} this\n     */\nTone.OscillatorNode.prototype.setPeriodicWave = function(periodicWave){\n\tthis._oscillator.setPeriodicWave(periodicWave);\n\treturn this;\n};\n\n/**\n     * Stop the oscillator node at the given time\n     * @param  {Time=} time When to stop the oscillator\n     * @return {OscillatorNode}      this\n     */\nTone.OscillatorNode.prototype.stop = function(time){\n\tthis.log(\"stop\", time);\n\tthis.assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n\t//cancel the previous stop\n\tthis.cancelStop();\n\t//reschedule it\n\tthis._stopTime = this.toSeconds(time);\n\tthis._stopTime = Math.max(this._stopTime, this.context.currentTime);\n\tif (this._stopTime > this._startTime){\n\t\tthis._gainNode.gain.setValueAtTime(0, this._stopTime);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._timeout = this.context.setTimeout(function(){\n\t\t\tthis._oscillator.stop(this.now());\n\t\t\tthis.onended();\n\t\t\t//disconnect the object when it's ended\n\t\t\tsetTimeout(function(){\n\t\t\t\tif (this._oscillator){\n\t\t\t\t\tthis._oscillator.disconnect();\n\t\t\t\t\tthis._gainNode.disconnect();\n\t\t\t\t}\n\t\t\t}.bind(this), 100);\n\t\t}.bind(this), this._stopTime - this.context.currentTime);\n\t} else {\n\t\t//cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel a scheduled stop event\n *  @return  {Tone.OscillatorNode}  this\n */\nTone.OscillatorNode.prototype.cancelStop = function(){\n\tif (this._startTime !== -1){\n\t\t//cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._stopTime = -1;\n\t}\n\treturn this;\n};\n\n/**\n * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n * @memberOf Tone.OscillatorNode#\n * @type {Time}\n * @name type\n */\nObject.defineProperty(Tone.OscillatorNode.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._oscillator.type;\n\t},\n\tset : function(type){\n\t\tthis._oscillator.type = type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.OscillatorNode}  this\n */\nTone.OscillatorNode.prototype.dispose = function(){\n\tif (!this._wasDisposed){\n\t\tthis._wasDisposed = true;\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.onended = null;\n\t\tthis._oscillator.disconnect();\n\t\tthis._oscillator = null;\n\t\tthis._gainNode.dispose();\n\t\tthis._gainNode = null;\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t}\n\treturn this;\n};\n\nexport default Tone.OscillatorNode;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../source/Source\";\nimport \"../source/TickSource\";\nimport \"../source/BufferSource\";\n\n/**\n *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n *\n *  @constructor\n *  @extends {Tone.Source}\n *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n *                                  which to load the AudioBuffer\n *  @param {Function=} onload The function to invoke when the buffer is loaded.\n *                            Recommended to use Tone.Buffer.on('load') instead.\n *  @example\n * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n * //play as soon as the buffer is loaded\n * player.autostart = true;\n */\nTone.Player = function(url){\n\n\tvar options;\n\tif (url instanceof Tone.Buffer && url.loaded){\n\t\turl = url.get();\n\t\toptions = Tone.Player.defaults;\n\t} else {\n\t\toptions = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.Player);\n\t}\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  If the file should play as soon\n\t *  as the buffer is loaded.\n\t *  @type {Boolean}\n\t *  @example\n\t * //will play as soon as it's loaded\n\t * var player = new Tone.Player({\n\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t * \t\"autostart\" : true,\n\t * }).toMaster();\n\t */\n\tthis.autostart = options.autostart;\n\n\t/**\n\t *  the buffer\n\t *  @private\n\t *  @type {Tone.Buffer}\n\t */\n\tthis._buffer = new Tone.Buffer({\n\t\t\"url\" : options.url,\n\t\t\"onload\" : this._onload.bind(this, options.onload),\n\t\t\"reverse\" : options.reverse\n\t});\n\tif (url instanceof AudioBuffer){\n\t\tthis._buffer.set(url);\n\t}\n\n\t/**\n\t *  if the buffer should loop once it's over\n\t *  @type {Boolean}\n\t *  @private\n\t */\n\tthis._loop = options.loop;\n\n\t/**\n\t *  if 'loop' is true, the loop will start at this position\n\t *  @type {Time}\n\t *  @private\n\t */\n\tthis._loopStart = options.loopStart;\n\n\t/**\n\t *  if 'loop' is true, the loop will end at this position\n\t *  @type {Time}\n\t *  @private\n\t */\n\tthis._loopEnd = options.loopEnd;\n\n\t/**\n\t *  the playback rate\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._playbackRate = options.playbackRate;\n\n\t/**\n\t *  All of the active buffer source nodes\n\t *  @type {Array<Tone.BufferSource>}\n\t *  @private\n\t */\n\tthis._activeSources = [];\n\n\t/**\n\t *  The fadeIn time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeIn = options.fadeIn;\n\n\t/**\n\t *  The fadeOut time of the amplitude envelope.\n\t *  @type {Time}\n\t */\n\tthis.fadeOut = options.fadeOut;\n};\n\nTone.extend(Tone.Player, Tone.Source);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Player.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"playbackRate\" : 1,\n\t\"loop\" : false,\n\t\"autostart\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"reverse\" : false,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0\n};\n\n/**\n *  Load the audio file as an audio buffer.\n *  Decodes the audio asynchronously and invokes\n *  the callback once the audio buffer loads.\n *  Note: this does not need to be called if a url\n *  was passed in to the constructor. Only use this\n *  if you want to manually load a new url.\n * @param {string} url The url of the buffer to load.\n *                     Filetype support depends on the\n *                     browser.\n *  @param  {Function=} callback The function to invoke once\n *                               the sample is loaded.\n *  @returns {Promise}\n */\nTone.Player.prototype.load = function(url, callback){\n\treturn this._buffer.load(url, this._onload.bind(this, callback));\n};\n\n/**\n * Internal callback when the buffer is loaded.\n * @private\n */\nTone.Player.prototype._onload = function(callback){\n\tcallback = Tone.defaultArg(callback, Tone.noOp);\n\tcallback(this);\n\tif (this.autostart){\n\t\tthis.start();\n\t}\n};\n\n/**\n * Internal callback when the buffer is done playing.\n * @private\n */\nTone.Player.prototype._onSourceEnd = function(source){\n\tvar index = this._activeSources.indexOf(source);\n\tthis._activeSources.splice(index, 1);\n\tif (this._activeSources.length === 0 && !this._synced){\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, Tone.now());\n\t}\n};\n\n/**\n *  Play the buffer at the given startTime. Optionally add an offset\n *  and/or duration which will play the buffer from a position\n *  within the buffer for the given duration.\n *\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.Player} this\n *  @memberOf Tone.Player#\n *  @method start\n *  @name start\n */\n\n/**\n *  Internal start method\n *  @private\n */\nTone.Player.prototype._start = function(startTime, offset, duration){\n\t//if it's a loop the default offset is the loopstart point\n\tif (this._loop){\n\t\toffset = Tone.defaultArg(offset, this._loopStart);\n\t} else {\n\t\t//otherwise the default offset is 0\n\t\toffset = Tone.defaultArg(offset, 0);\n\t}\n\n\t//compute the values in seconds\n\toffset = this.toSeconds(offset);\n\t\n\t//if it's synced, it should factor in the playback rate for computing the offset\n\tif (this._synced){\n\t\toffset *= this._playbackRate;\n\t}\n\n\t//compute the duration which is either the passed in duration of the buffer.duration - offset\n\tvar computedDuration = Tone.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\tcomputedDuration = this.toSeconds(computedDuration);\n\n\t//scale it by the playback rate\n\tcomputedDuration = computedDuration / this._playbackRate;\n\n\t//get the start time\n\tstartTime = this.toSeconds(startTime);\n\n\t//make the source\n\tvar source = new Tone.BufferSource({\n\t\t\"buffer\" : this._buffer,\n\t\t\"loop\" : this._loop,\n\t\t\"loopStart\" : this._loopStart,\n\t\t\"loopEnd\" : this._loopEnd,\n\t\t\"onended\" : this._onSourceEnd.bind(this),\n\t\t\"playbackRate\" : this._playbackRate,\n\t\t\"fadeIn\" : this.fadeIn,\n\t\t\"fadeOut\" : this.fadeOut,\n\t}).connect(this.output);\n\n\t//set the looping properties\n\tif (!this._loop && !this._synced){\n\t\t//if it's not looping, set the state change at the end of the sample\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, startTime + computedDuration);\n\t}\n\n\t//add it to the array of active sources\n\tthis._activeSources.push(source);\n\n\t//start it\n\tif (this._loop && Tone.isUndef(duration)){\n\t\tsource.start(startTime, offset);\n\t} else {\n\t\t//subtract the fade out time\n\t\tsource.start(startTime, offset, computedDuration - this.toSeconds(this.fadeOut));\n\t}\n\treturn this;\n};\n\n/**\n *  Stop playback.\n *  @private\n *  @param  {Time} [time=now]\n *  @returns {Tone.Player} this\n */\nTone.Player.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._activeSources.forEach(function(source){\n\t\tsource.stop(time);\n\t});\n\treturn this;\n};\n\n/**\n * Stop and then restart the player from the beginning (or offset)\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.Player} this\n */\nTone.Player.prototype.restart = function(time, offset, duration){\n\tthis._stop(time);\n\tthis._start(time, offset, duration);\n\treturn this;\n};\n\n/**\n *  Seek to a specific time in the player's buffer. If the\n *  source is no longer playing at that time, it will stop.\n *  If you seek to a time that\n *  @param {Time} offset The time to seek to.\n *  @param {Time=} time The time for the seek event to occur.\n *  @return {Tone.Player} this\n *  @example\n * source.start(0.2);\n * source.stop(0.4);\n */\nTone.Player.prototype.seek = function(offset, time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\toffset = this.toSeconds(offset);\n\t\t// if it's currently playing, stop it\n\t\tthis._stop(time);\n\t\t//restart it at the given time\n\t\tthis._start(time, offset);\n\t}\n\treturn this;\n};\n\n/**\n *  Set the loop start and end. Will only loop if loop is\n *  set to true.\n *  @param {Time} loopStart The loop end time\n *  @param {Time} loopEnd The loop end time\n *  @returns {Tone.Player} this\n *  @example\n * //loop 0.1 seconds of the file.\n * player.setLoopPoints(0.2, 0.3);\n * player.loop = true;\n */\nTone.Player.prototype.setLoopPoints = function(loopStart, loopEnd){\n\tthis.loopStart = loopStart;\n\tthis.loopEnd = loopEnd;\n\treturn this;\n};\n\n/**\n * If loop is true, the loop will start at this position.\n * @memberOf Tone.Player#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.Player.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._loopStart;\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = loopStart;\n\t\t//get the current source\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loopStart = loopStart;\n\t\t});\n\t}\n});\n\n/**\n * If loop is true, the loop will end at this position.\n * @memberOf Tone.Player#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.Player.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._loopEnd;\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = loopEnd;\n\t\t//get the current source\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loopEnd = loopEnd;\n\t\t});\n\t}\n});\n\n/**\n * The audio buffer belonging to the player.\n * @memberOf Tone.Player#\n * @type {Tone.Buffer}\n * @name buffer\n */\nObject.defineProperty(Tone.Player.prototype, \"buffer\", {\n\tget : function(){\n\t\treturn this._buffer;\n\t},\n\tset : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t}\n});\n\n/**\n * If the buffer should loop once it's over.\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name loop\n */\nObject.defineProperty(Tone.Player.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\t//if no change, do nothing\n\t\tif (this._loop === loop){\n\t\t\treturn;\n\t\t}\n\t\tthis._loop = loop;\n\t\t//set the loop of all of the sources\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.loop = loop;\n\t\t});\n\t\tif (loop){\n\t\t\t//remove the next stopEvent\n\t\t\tvar stopEvent = this._state.getNextState(Tone.State.Stopped, this.now());\n\t\t\tif (stopEvent){\n\t\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * The playback speed. 1 is normal speed. This is not a signal because\n * Safari and iOS currently don't support playbackRate as a signal.\n * @memberOf Tone.Player#\n * @type {Number}\n * @name playbackRate\n */\nObject.defineProperty(Tone.Player.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tvar now = this.now();\n\n\t\t//cancel the stop event since it's at a different time now\n\t\tvar stopEvent = this._state.getNextState(Tone.State.Stopped, now);\n\t\tif (stopEvent){\n\t\t\tthis._state.cancel(stopEvent.time);\n\t\t}\n\n\t\t//set all the sources\n\t\tthis._activeSources.forEach(function(source){\n\t\t\tsource.cancelStop();\n\t\t\tsource.playbackRate.setValueAtTime(rate, now);\n\t\t});\n\t}\n});\n\n/**\n * The direction the buffer should play in\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.Player.prototype, \"reverse\", {\n\tget : function(){\n\t\treturn this._buffer.reverse;\n\t},\n\tset : function(rev){\n\t\tthis._buffer.reverse = rev;\n\t}\n});\n\n/**\n * If all the buffer is loaded\n * @memberOf Tone.Player#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Player.prototype, \"loaded\", {\n\tget : function(){\n\t\treturn this._buffer.loaded;\n\t}\n});\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Player} this\n */\nTone.Player.prototype.dispose = function(){\n\t//disconnect all of the players\n\tthis._activeSources.forEach(function(source){\n\t\tsource.dispose();\n\t});\n\tthis._activeSources = null;\n\tTone.Source.prototype.dispose.call(this);\n\tthis._buffer.dispose();\n\tthis._buffer = null;\n\treturn this;\n};\n\nexport default Tone.Player;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../source/OmniOscillator\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n *          The amplitude of the Tone.Oscillator and the cutoff frequency of the\n *          Tone.Filter are controlled by Tone.Envelopes.\n *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.MonoSynth({\n * \t\"oscillator\" : {\n * \t\t\"type\" : \"square\"\n *  },\n *  \"envelope\" : {\n *  \t\"attack\" : 0.1\n *  }\n * }).toMaster();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nTone.MonoSynth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.MonoSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this.oscillator.frequency;\n\n\t/**\n\t *  The detune control.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this.oscillator.detune;\n\n\t/**\n\t *  The filter.\n\t *  @type {Tone.Filter}\n\t */\n\tthis.filter = new Tone.Filter(options.filter);\n\tthis.filter.frequency.value = 5000;\n\n\t/**\n\t *  The filter envelope.\n\t *  @type {Tone.FrequencyEnvelope}\n\t */\n\tthis.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the oscillators to the output\n\tthis.oscillator.chain(this.filter, this.envelope, this.output);\n\t//connect the filter envelope\n\tthis.filterEnvelope.connect(this.filter.frequency);\n\tthis._readOnly([\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n};\n\nTone.extend(Tone.MonoSynth, Tone.Monophonic);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MonoSynth.defaults = {\n\t\"frequency\" : \"C4\",\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"filter\" : {\n\t\t\"Q\" : 6,\n\t\t\"type\" : \"lowpass\",\n\t\t\"rolloff\" : -24\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.9,\n\t\t\"release\" : 1\n\t},\n\t\"filterEnvelope\" : {\n\t\t\"attack\" : 0.06,\n\t\t\"decay\" : 0.2,\n\t\t\"sustain\" : 0.5,\n\t\t\"release\" : 2,\n\t\t\"baseFrequency\" : 200,\n\t\t\"octaves\" : 7,\n\t\t\"exponent\" : 2\n\t}\n};\n\n/**\n *  start the attack portion of the envelope\n *  @param {Time} [time=now] the time the attack should start\n *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.MonoSynth} this\n *  @private\n */\nTone.MonoSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.filterEnvelope.triggerAttack(time);\n\tthis.oscillator.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelope\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.MonoSynth} this\n *  @private\n */\nTone.MonoSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis.envelope.triggerRelease(time);\n\tthis.filterEnvelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.MonoSynth} this\n */\nTone.MonoSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis.filterEnvelope.dispose();\n\tthis.filterEnvelope = null;\n\tthis.filter.dispose();\n\tthis.filter = null;\n\tthis.frequency = null;\n\tthis.detune = null;\n\treturn this;\n};\n\nexport default Tone.MonoSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\n\n/**\n *  @class Tone.FatOscillator is an array of oscillators with detune spread between the oscillators\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The oscillator's frequency.\n *  @param {String} type The type of the oscillator.\n *  @param {Cents} spread The detune spread between the oscillators.\n *  @example\n * var fatOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", 40).toMaster().start();\n */\nTone.FatOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"spread\"], Tone.FatOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  The array of oscillators\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._oscillators = [];\n\n\t/**\n\t *  The total spread of the oscillators\n\t *  @type  {Cents}\n\t *  @private\n\t */\n\tthis._spread = options.spread;\n\n\t/**\n\t *  The type of the oscillator\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._type = options.type;\n\n\t/**\n\t *  The phase of the oscillators\n\t *  @type {Degrees}\n\t *  @private\n\t */\n\tthis._phase = options.phase;\n\n\t/**\n\t *  The partials array\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._partials = options.partials;\n\n\t/**\n\t *  The number of partials to use\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._partialCount = options.partialCount;\n\n\t//set the count initially\n\tthis.count = options.count;\n\tthis._readOnly([\"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.FatOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.FatOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"spread\" : 20,\n\t\"count\" : 3,\n\t\"type\" : \"sawtooth\",\n\t\"partials\" : [],\n\t\"partialCount\" : 0\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FatOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.start(time);\n\t});\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.FatOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.stop(time);\n\t});\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.FatOscillator.prototype.restart = function(time){\n\ttime = this.toSeconds(time);\n\tthis._forEach(function(osc){\n\t\tosc.restart(time);\n\t});\n};\n\n/**\n *  Iterate over all of the oscillators\n *  @param  {Function}  iterator  The iterator function\n *  @private\n */\nTone.FatOscillator.prototype._forEach = function(iterator){\n\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\titerator.call(this, this._oscillators[i], i);\n\t}\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.FatOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tthis._type = type;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.type = type;\n\t\t});\n\t}\n});\n\n/**\n * The detune spread between the oscillators. If \"count\" is\n * set to 3 oscillators and the \"spread\" is set to 40,\n * the three oscillators would be detuned like this: [-20, 0, 20]\n * for a total detune spread of 40 cents.\n * @memberOf Tone.FatOscillator#\n * @type {Cents}\n * @name spread\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._spread;\n\t},\n\tset : function(spread){\n\t\tthis._spread = spread;\n\t\tif (this._oscillators.length > 1){\n\t\t\tvar start = -spread/2;\n\t\t\tvar step = spread / (this._oscillators.length - 1);\n\t\t\tthis._forEach(function(osc, i){\n\t\t\t\tosc.detune.value = start + step * i;\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n * The number of detuned oscillators\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name count\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"count\", {\n\tget : function(){\n\t\treturn this._oscillators.length;\n\t},\n\tset : function(count){\n\t\tcount = Math.max(count, 1);\n\t\tif (this._oscillators.length !== count){\n\t\t\t//dispose the previous oscillators\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.dispose();\n\t\t\t});\n\t\t\tthis._oscillators = [];\n\t\t\tfor (var i = 0; i < count; i++){\n\t\t\t\tvar osc = new Tone.Oscillator();\n\t\t\t\tif (this.type === Tone.Oscillator.Type.Custom){\n\t\t\t\t\tosc.partials = this._partials;\n\t\t\t\t} else {\n\t\t\t\t\tosc.type = this._type;\n\t\t\t\t}\n\t\t\t\tosc.partialCount = this._partialCount;\n\t\t\t\tosc.phase = this._phase + (i / count) * 360;\n\t\t\t\tosc.volume.value = -6 - count*1.1;\n\t\t\t\tthis.frequency.connect(osc.frequency);\n\t\t\t\tthis.detune.connect(osc.detune);\n\t\t\t\tosc.connect(this.output);\n\t\t\t\tthis._oscillators[i] = osc;\n\t\t\t}\n\t\t\t//set the spread\n\t\t\tthis.spread = this._spread;\n\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\tthis._forEach(function(osc){\n\t\t\t\t\tosc.start();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name phase\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._phase;\n\t},\n\tset : function(phase){\n\t\tthis._phase = phase;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.phase = phase;\n\t\t});\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.FatOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._oscillators[0].baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._forEach(function(osc){\n\t\t\tosc.baseType = baseType;\n\t\t});\n\t\tthis._type = this._oscillators[0].type;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.FatOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._oscillators[0].partials;\n\t},\n\tset : function(partials){\n\t\tthis._partials = partials;\n\t\tthis._type = Tone.Oscillator.Type.Custom;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.partials = partials;\n\t\t});\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.FatOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.FatOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._oscillators[0].partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._partialCount = partialCount;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.partialCount = partialCount;\n\t\t});\n\t\tthis._type = this._oscillators[0].type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.FatOscillator} this\n */\nTone.FatOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\"]);\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis._forEach(function(osc){\n\t\tosc.dispose();\n\t});\n\tthis._oscillators = null;\n\tthis._partials = null;\n\treturn this;\n};\n\nexport default Tone.FatOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\nimport \"../core/Gain\";\nimport \"../signal/AudioToGain\";\n\n/**\n *  @class Tone.AMOscillator\n *\n *  @extends {Tone.Oscillator}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {String} type The type of the carrier oscillator.\n *  @param {String} modulationType The type of the modulator oscillator.\n *  @example\n * //a sine oscillator frequency-modulated by a square wave\n * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n */\nTone.AMOscillator = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.AMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The carrier oscillator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t/**\n\t *  The oscillator's frequency\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._carrier.frequency;\n\n\t/**\n\t *  The detune control signal.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._carrier.detune;\n\tthis.detune.value = options.detune;\n\n\t/**\n\t *  The modulating oscillator\n\t *  @type  {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t/**\n\t *  convert the -1,1 output to 0,1\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._modulationScale = new Tone.AudioToGain();\n\n\t/**\n\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t *  Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch the modulator an octave below carrier\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//connections\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.detune.connect(this._modulator.detune);\n\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\tthis._carrier.chain(this._modulationNode, this.output);\n\n\tthis.phase = options.phase;\n\n\tthis._readOnly([\"frequency\", \"detune\", \"harmonicity\"]);\n};\n\nTone.extend(Tone.AMOscillator, Tone.Oscillator);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.AMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"type\" : \"sine\",\n\t\"modulationType\" : \"square\",\n\t\"harmonicity\" : 1\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.AMOscillator.prototype._start = function(time){\n\tthis._modulator.start(time);\n\tthis._carrier.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.AMOscillator.prototype._stop = function(time){\n\tthis._modulator.stop(time);\n\tthis._carrier.stop(time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.AMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._carrier.restart(time);\n};\n\n/**\n * The type of the carrier oscillator\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._carrier.type;\n\t},\n\tset : function(type){\n\t\tthis._carrier.type = type;\n\t}\n});\n\n/**\n * The oscillator type without the partialsCount appended to the end\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name baseType\n * @example\n * osc.type = 'sine2'\n * osc.baseType //'sine'\n * osc.partialCount = 2\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn this._carrier.baseType;\n\t},\n\tset : function(baseType){\n\t\tthis._carrier.baseType = baseType;\n\t}\n});\n\n/**\n * 'partialCount' offers an alternative way to set the number of used partials. \n * When partialCount is 0, the maximum number of partials are used when representing\n * the waveform using the periodicWave. When 'partials' is set, this value is \n * not settable, but equals the length of the partials array.\n * @memberOf Tone.AMOscillator#\n * @type {Number}\n * @name partialCount\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"partialCount\", {\n\tget : function(){\n\t\treturn this._carrier.partialCount;\n\t},\n\tset : function(partialCount){\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n});\n\n/**\n * The type of the modulator oscillator\n * @memberOf Tone.AMOscillator#\n * @type {string}\n * @name modulationType\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"modulationType\", {\n\tget : function(){\n\t\treturn this._modulator.type;\n\t},\n\tset : function(type){\n\t\tthis._modulator.type = type;\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.AMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._carrier.phase;\n\t},\n\tset : function(phase){\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n * The partials of the carrier waveform. A partial represents\n * the amplitude at a harmonic. The first harmonic is the\n * fundamental frequency, the second is the octave and so on\n * following the harmonic series.\n * Setting this value will automatically set the type to \"custom\".\n * The value is an empty array when the type is not \"custom\".\n * @memberOf Tone.AMOscillator#\n * @type {Array}\n * @name partials\n * @example\n * osc.partials = [1, 0.2, 0.01];\n */\nObject.defineProperty(Tone.AMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn this._carrier.partials;\n\t},\n\tset : function(partials){\n\t\tthis._carrier.partials = partials;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.AMOscillator} this\n */\nTone.AMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"detune\", \"harmonicity\"]);\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis._modulationScale.dispose();\n\tthis._modulationScale = null;\n\treturn this;\n};\n\nexport default Tone.AMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../source/PulseOscillator\";\nimport \"../source/Oscillator\";\nimport \"../signal/Multiply\";\n\n/**\n *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator\n *         at the modulationFrequency. This has the effect of continuously\n *         changing the timbre of the oscillator by altering the harmonics\n *         generated.\n *\n *  @extends {Tone.Source}\n *  @constructor\n *  @param {Frequency} frequency The starting frequency of the oscillator.\n *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.\n *  @example\n *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n */\nTone.PWMOscillator = function(){\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"modulationFrequency\"], Tone.PWMOscillator);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  the pulse oscillator\n\t *  @type {Tone.PulseOscillator}\n\t *  @private\n\t */\n\tthis._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t//change the pulse oscillator type\n\tthis._pulse._sawtooth.type = \"sine\";\n\n\t/**\n\t *  the modulator\n\t *  @type {Tone.Oscillator}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Oscillator({\n\t\t\"frequency\" : options.frequency,\n\t\t\"detune\" : options.detune,\n\t\t\"phase\" : options.phase\n\t});\n\n\t/**\n\t *  Scale the oscillator so it doesn't go silent\n\t *  at the extreme values.\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = new Tone.Multiply(2);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._modulator.frequency;\n\n\t/**\n\t *  The detune of the oscillator.\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = this._modulator.detune;\n\n\t/**\n\t *  The modulation rate of the oscillator.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.modulationFrequency = this._pulse.frequency;\n\n\t//connections\n\tthis._modulator.chain(this._scale, this._pulse.width);\n\tthis._pulse.connect(this.output);\n\tthis._readOnly([\"modulationFrequency\", \"frequency\", \"detune\"]);\n};\n\nTone.extend(Tone.PWMOscillator, Tone.Source);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.PWMOscillator.defaults = {\n\t\"frequency\" : 440,\n\t\"detune\" : 0,\n\t\"phase\" : 0,\n\t\"modulationFrequency\" : 0.4,\n};\n\n/**\n *  start the oscillator\n *  @param  {Time} [time=now]\n *  @private\n */\nTone.PWMOscillator.prototype._start = function(time){\n\ttime = this.toSeconds(time);\n\tthis._modulator.start(time);\n\tthis._pulse.start(time);\n};\n\n/**\n *  stop the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PWMOscillator.prototype._stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._modulator.stop(time);\n\tthis._pulse.stop(time);\n};\n\n/**\n *  restart the oscillator\n *  @param  {Time} time (optional) timing parameter\n *  @private\n */\nTone.PWMOscillator.prototype.restart = function(time){\n\tthis._modulator.restart(time);\n\tthis._pulse.restart(time);\n};\n\n/**\n * The type of the oscillator. Always returns \"pwm\".\n * @readOnly\n * @memberOf Tone.PWMOscillator#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"type\", {\n\tget : function(){\n\t\treturn \"pwm\";\n\t}\n});\n\n/**\n * The baseType of the oscillator. Always returns \"pwm\".\n * @readOnly\n * @memberOf Tone.PWMOscillator#\n * @type {string}\n * @name baseType\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"baseType\", {\n\tget : function(){\n\t\treturn \"pwm\";\n\t}\n});\n\n/**\n * The partials of the waveform. Cannot set partials for this waveform type\n * @memberOf Tone.PWMOscillator#\n * @type {Array}\n * @name partials\n * @private\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"partials\", {\n\tget : function(){\n\t\treturn [];\n\t}\n});\n\n/**\n * The phase of the oscillator in degrees.\n * @memberOf Tone.PWMOscillator#\n * @type {number}\n * @name phase\n */\nObject.defineProperty(Tone.PWMOscillator.prototype, \"phase\", {\n\tget : function(){\n\t\treturn this._modulator.phase;\n\t},\n\tset : function(phase){\n\t\tthis._modulator.phase = phase;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return {Tone.PWMOscillator} this\n */\nTone.PWMOscillator.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis._pulse.dispose();\n\tthis._pulse = null;\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis._writable([\"modulationFrequency\", \"frequency\", \"detune\"]);\n\tthis.frequency = null;\n\tthis.detune = null;\n\tthis.modulationFrequency = null;\n\treturn this;\n};\n\nexport default Tone.PWMOscillator;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Event\";\nimport \"../type/Type\";\nimport \"../core/Transport\";\n\n/**\n *  @class Tone.Part is a collection Tone.Events which can be\n *         started/stopped and looped as a single unit.\n *\n *  @extends {Tone.Event}\n *  @param {Function} callback The callback to invoke on each event\n *  @param {Array} events the array of events\n *  @example\n * var part = new Tone.Part(function(time, note){\n * \t//the notes given as the second element in the array\n * \t//will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n *  @example\n * //use an array of objects as long as the object has a \"time\" attribute\n * var part = new Tone.Part(function(time, value){\n * \t//the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9},\n * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n * ]).start(0);\n */\nTone.Part = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"events\"], Tone.Part);\n\tTone.Event.call(this, options);\n\n\t/**\n\t *  An array of Objects.\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._events = [];\n\n\t//add the events\n\tfor (var i = 0; i < options.events.length; i++){\n\t\tif (Array.isArray(options.events[i])){\n\t\t\tthis.add(options.events[i][0], options.events[i][1]);\n\t\t} else {\n\t\t\tthis.add(options.events[i]);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.Part, Tone.Event);\n\n/**\n *  The default values\n *  @type  {Object}\n *  @const\n */\nTone.Part.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"loop\" : false,\n\t\"loopEnd\" : \"1m\",\n\t\"loopStart\" : 0,\n\t\"playbackRate\" : 1,\n\t\"probability\" : 1,\n\t\"humanize\" : false,\n\t\"mute\" : false,\n\t\"events\" : []\n};\n\n/**\n *  Start the part at the given time.\n *  @param  {TransportTime}  time    When to start the part.\n *  @param  {Time=}  offset  The offset from the start of the part\n *                           to begin playing at.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.start = function(time, offset){\n\tvar ticks = this.toTicks(time);\n\tif (this._state.getValueAtTime(ticks) !== Tone.State.Started){\n\t\tif (this._loop){\n\t\t\toffset = Tone.defaultArg(offset, this._loopStart);\n\t\t} else {\n\t\t\toffset = Tone.defaultArg(offset, 0);\n\t\t}\n\t\toffset = this.toTicks(offset);\n\t\tthis._state.add({\n\t\t\t\"state\" : Tone.State.Started,\n\t\t\t\"time\" : ticks,\n\t\t\t\"offset\" : offset\n\t\t});\n\t\tthis._forEach(function(event){\n\t\t\tthis._startNote(event, ticks, offset);\n\t\t});\n\t}\n\treturn this;\n};\n\n/**\n *  Start the event in the given event at the correct time given\n *  the ticks and offset and looping.\n *  @param  {Tone.Event}  event\n *  @param  {Ticks}  ticks\n *  @param  {Ticks}  offset\n *  @private\n */\nTone.Part.prototype._startNote = function(event, ticks, offset){\n\tticks -= offset;\n\tif (this._loop){\n\t\tif (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd){\n\t\t\tif (event.startOffset < offset){\n\t\t\t\t//start it on the next loop\n\t\t\t\tticks += this._getLoopDuration();\n\t\t\t}\n\t\t\tevent.start(Tone.Ticks(ticks));\n\t\t} else if (event.startOffset < this._loopStart && event.startOffset >= offset){\n\t\t\tevent.loop = false;\n\t\t\tevent.start(Tone.Ticks(ticks));\n\t\t}\n\t} else if (event.startOffset >= offset){\n\t\tevent.start(Tone.Ticks(ticks));\n\t}\n};\n\n/**\n *  The start from the scheduled start time\n *  @type {Ticks}\n *  @memberOf Tone.Part#\n *  @name startOffset\n *  @private\n */\nObject.defineProperty(Tone.Part.prototype, \"startOffset\", {\n\tget : function(){\n\t\treturn this._startOffset;\n\t},\n\tset : function(offset){\n\t\tthis._startOffset = offset;\n\t\tthis._forEach(function(event){\n\t\t\tevent.startOffset += this._startOffset;\n\t\t});\n\t}\n});\n\n/**\n *  Stop the part at the given time.\n *  @param  {TimelinePosition}  time  When to stop the part.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.stop = function(time){\n\tvar ticks = this.toTicks(time);\n\tthis._state.cancel(ticks);\n\tthis._state.setStateAtTime(Tone.State.Stopped, ticks);\n\tthis._forEach(function(event){\n\t\tevent.stop(time);\n\t});\n\treturn this;\n};\n\n/**\n *  Get/Set an Event's value at the given time.\n *  If a value is passed in and no event exists at\n *  the given time, one will be created with that value.\n *  If two events are at the same time, the first one will\n *  be returned.\n *  @example\n * part.at(\"1m\"); //returns the part at the first measure\n *\n * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2.\n * //if an event didn't exist at that time, it will be created.\n *  @param {TransportTime} time The time of the event to get or set.\n *  @param {*=} value If a value is passed in, the value of the\n *                    event at the given time will be set to it.\n *  @return {Tone.Event} the event at the time\n */\nTone.Part.prototype.at = function(time, value){\n\ttime = Tone.TransportTime(time);\n\tvar tickTime = Tone.Ticks(1).toSeconds();\n\tfor (var i = 0; i < this._events.length; i++){\n\t\tvar event = this._events[i];\n\t\tif (Math.abs(time.toTicks() - event.startOffset) < tickTime){\n\t\t\tif (Tone.isDefined(value)){\n\t\t\t\tevent.value = value;\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t}\n\t//if there was no event at that time, create one\n\tif (Tone.isDefined(value)){\n\t\tthis.add(time, value);\n\t\t//return the new event\n\t\treturn this._events[this._events.length - 1];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n *  Add a an event to the part.\n *  @param {Time} time The time the note should start.\n *                            If an object is passed in, it should\n *                            have a 'time' attribute and the rest\n *                            of the object will be used as the 'value'.\n *  @param  {Tone.Event|*}  value\n *  @returns {Tone.Part} this\n *  @example\n * part.add(\"1m\", \"C#+11\");\n */\nTone.Part.prototype.add = function(time, value){\n\t//extract the parameters\n\tif (time.hasOwnProperty(\"time\")){\n\t\tvalue = time;\n\t\ttime = value.time;\n\t}\n\ttime = this.toTicks(time);\n\tvar event;\n\tif (value instanceof Tone.Event){\n\t\tevent = value;\n\t\tevent.callback = this._tick.bind(this);\n\t} else {\n\t\tevent = new Tone.Event({\n\t\t\t\"callback\" : this._tick.bind(this),\n\t\t\t\"value\" : value,\n\t\t});\n\t}\n\t//the start offset\n\tevent.startOffset = time;\n\n\t//initialize the values\n\tevent.set({\n\t\t\"loopEnd\" : this.loopEnd,\n\t\t\"loopStart\" : this.loopStart,\n\t\t\"loop\" : this.loop,\n\t\t\"humanize\" : this.humanize,\n\t\t\"playbackRate\" : this.playbackRate,\n\t\t\"probability\" : this.probability\n\t});\n\n\tthis._events.push(event);\n\n\t//start the note if it should be played right now\n\tthis._restartEvent(event);\n\treturn this;\n};\n\n/**\n *  Restart the given event\n *  @param  {Tone.Event}  event\n *  @private\n */\nTone.Part.prototype._restartEvent = function(event){\n\tthis._state.forEach(function(stateEvent){\n\t\tif (stateEvent.state === Tone.State.Started){\n\t\t\tthis._startNote(event, stateEvent.time, stateEvent.offset);\n\t\t} else {\n\t\t\t//stop the note\n\t\t\tevent.stop(Tone.Ticks(stateEvent.time));\n\t\t}\n\t}.bind(this));\n};\n\n/**\n *  Remove an event from the part. If the event at that time is a Tone.Part,\n *  it will remove the entire part.\n *  @param {Time} time The time of the event\n *  @param {*} value Optionally select only a specific event value\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.remove = function(time, value){\n\t//extract the parameters\n\tif (time.hasOwnProperty(\"time\")){\n\t\tvalue = time;\n\t\ttime = value.time;\n\t}\n\ttime = this.toTicks(time);\n\tfor (var i = this._events.length - 1; i >= 0; i--){\n\t\tvar event = this._events[i];\n\t\tif (event.startOffset === time){\n\t\t\tif (Tone.isUndef(value) || (Tone.isDefined(value) && event.value === value)){\n\t\t\t\tthis._events.splice(i, 1);\n\t\t\t\tevent.dispose();\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Remove all of the notes from the group.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.removeAll = function(){\n\tthis._forEach(function(event){\n\t\tevent.dispose();\n\t});\n\tthis._events = [];\n\treturn this;\n};\n\n/**\n *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.cancel = function(after){\n\tthis._forEach(function(event){\n\t\tevent.cancel(after);\n\t});\n\tthis._state.cancel(this.toTicks(after));\n\treturn this;\n};\n\n/**\n *  Iterate over all of the events\n *  @param {Function} callback\n *  @param {Object} ctx The context\n *  @private\n */\nTone.Part.prototype._forEach = function(callback, ctx){\n\tif (this._events){\n\t\tctx = Tone.defaultArg(ctx, this);\n\t\tfor (var i = this._events.length - 1; i >= 0; i--){\n\t\t\tvar e = this._events[i];\n\t\t\tif (e instanceof Tone.Part){\n\t\t\t\te._forEach(callback, ctx);\n\t\t\t} else {\n\t\t\t\tcallback.call(ctx, e);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Set the attribute of all of the events\n *  @param  {String}  attr  the attribute to set\n *  @param  {*}  value      The value to set it to\n *  @private\n */\nTone.Part.prototype._setAll = function(attr, value){\n\tthis._forEach(function(event){\n\t\tevent[attr] = value;\n\t});\n};\n\n/**\n *  Internal tick method\n *  @param  {Number}  time  The time of the event in seconds\n *  @private\n */\nTone.Part.prototype._tick = function(time, value){\n\tif (!this.mute){\n\t\tthis.callback(time, value);\n\t}\n};\n\n/**\n *  Determine if the event should be currently looping\n *  given the loop boundries of this Part.\n *  @param  {Tone.Event}  event  The event to test\n *  @private\n */\nTone.Part.prototype._testLoopBoundries = function(event){\n\tif (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)){\n\t\tevent.cancel(0);\n\t} else if (event.state === Tone.State.Stopped){\n\t\t//reschedule it if it's stopped\n\t\tthis._restartEvent(event);\n\t}\n};\n\n/**\n *  The probability of the notes being triggered.\n *  @memberOf Tone.Part#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Part.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._probability;\n\t},\n\tset : function(prob){\n\t\tthis._probability = prob;\n\t\tthis._setAll(\"probability\", prob);\n\t}\n});\n\n/**\n *  If set to true, will apply small random variation\n *  to the callback time. If the value is given as a time, it will randomize\n *  by that amount.\n *  @example\n * event.humanize = true;\n *  @type {Boolean|Time}\n *  @name humanize\n *  @memberof Tone.Part#\n */\nObject.defineProperty(Tone.Part.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._humanize;\n\t},\n\tset : function(variation){\n\t\tthis._humanize = variation;\n\t\tthis._setAll(\"humanize\", variation);\n\t}\n});\n\n/**\n *  If the part should loop or not\n *  between Tone.Part.loopStart and\n *  Tone.Part.loopEnd. If set to true,\n *  the part will loop indefinitely,\n *  if set to a number greater than 1\n *  it will play a specific number of\n *  times, if set to false, 0 or 1, the\n *  part will only play once.\n *  @memberOf Tone.Part#\n *  @type {Boolean|Positive}\n *  @name loop\n *  @example\n * //loop the part 8 times\n * part.loop = 8;\n */\nObject.defineProperty(Tone.Part.prototype, \"loop\", {\n\tget : function(){\n\t\treturn this._loop;\n\t},\n\tset : function(loop){\n\t\tthis._loop = loop;\n\t\tthis._forEach(function(event){\n\t\t\tevent._loopStart = this._loopStart;\n\t\t\tevent._loopEnd = this._loopEnd;\n\t\t\tevent.loop = loop;\n\t\t\tthis._testLoopBoundries(event);\n\t\t});\n\t}\n});\n\n/**\n *  The loopEnd point determines when it will\n *  loop if Tone.Part.loop is true.\n *  @memberOf Tone.Part#\n *  @type {Time}\n *  @name loopEnd\n */\nObject.defineProperty(Tone.Part.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t},\n\tset : function(loopEnd){\n\t\tthis._loopEnd = this.toTicks(loopEnd);\n\t\tif (this._loop){\n\t\t\tthis._forEach(function(event){\n\t\t\t\tevent.loopEnd = loopEnd;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n *  The loopStart point determines when it will\n *  loop if Tone.Part.loop is true.\n *  @memberOf Tone.Part#\n *  @type {Time}\n *  @name loopStart\n */\nObject.defineProperty(Tone.Part.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t},\n\tset : function(loopStart){\n\t\tthis._loopStart = this.toTicks(loopStart);\n\t\tif (this._loop){\n\t\t\tthis._forEach(function(event){\n\t\t\t\tevent.loopStart = this.loopStart;\n\t\t\t\tthis._testLoopBoundries(event);\n\t\t\t});\n\t\t}\n\t}\n});\n\n/**\n * \tThe playback rate of the part\n *  @memberOf Tone.Part#\n *  @type {Positive}\n *  @name playbackRate\n */\nObject.defineProperty(Tone.Part.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis._setAll(\"playbackRate\", rate);\n\t}\n});\n\n/**\n * \tThe number of scheduled notes in the part.\n *  @memberOf Tone.Part#\n *  @type {Positive}\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.Part.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._events.length;\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Part}  this\n */\nTone.Part.prototype.dispose = function(){\n\tTone.Event.prototype.dispose.call(this);\n\tthis.removeAll();\n\tthis.callback = null;\n\tthis._events = null;\n\treturn this;\n};\n\nexport default Tone.Part;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Event\";\n\n/**\n *  @class Tone.Loop creates a looped callback at the \n *         specified interval. The callback can be \n *         started, stopped and scheduled along\n *         the Transport's timeline. \n *  @example\n * var loop = new Tone.Loop(function(time){\n * \t//triggered every eighth note. \n * \tconsole.log(time);\n * }, \"8n\").start(0);\n * Tone.Transport.start();\n *  @extends {Tone}\n *  @param {Function} callback The callback to invoke with the event.\n *  @param {Time} interval The time between successive callback calls. \n */\nTone.Loop = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"interval\"], Tone.Loop);\n\tTone.call(this);\n\n\t/**\n\t *  The event which produces the callbacks\n\t */\n\tthis._event = new Tone.Event({\n\t\t\"callback\" : this._tick.bind(this),\n\t\t\"loop\" : true,\n\t\t\"loopEnd\" : options.interval,\n\t\t\"playbackRate\" : options.playbackRate,\n\t\t\"probability\" : options.probability\n\t});\n\n\t/**\n\t *  The callback to invoke with the next event in the pattern\n\t *  @type {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t//set the iterations\n\tthis.iterations = options.iterations;\n};\n\nTone.extend(Tone.Loop);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Loop.defaults = {\n\t\"interval\" : \"4n\",\n\t\"callback\" : Tone.noOp,\n\t\"playbackRate\" : 1,\n\t\"iterations\" : Infinity,\n\t\"probability\" : true,\n\t\"mute\" : false\n};\n\n/**\n *  Start the loop at the specified time along the Transport's\n *  timeline.\n *  @param  {TimelinePosition=}  time  When to start the Loop.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.start = function(time){\n\tthis._event.start(time);\n\treturn this;\n};\n\n/**\n *  Stop the loop at the given time.\n *  @param  {TimelinePosition=}  time  When to stop the Loop.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.stop = function(time){\n\tthis._event.stop(time);\n\treturn this;\n};\n\n/**\n *  Cancel all scheduled events greater than or equal to the given time\n *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.cancel = function(time){\n\tthis._event.cancel(time);\n\treturn this;\n};\n\n/**\n *  Internal function called when the notes should be called\n *  @param  {Number}  time  The time the event occurs\n *  @private\n */\nTone.Loop.prototype._tick = function(time){\n\tthis.callback(time);\n};\n\n/**\n *  The state of the Loop, either started or stopped.\n *  @memberOf Tone.Loop#\n *  @type {String}\n *  @name state\n *  @readOnly\n */\nObject.defineProperty(Tone.Loop.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._event.state;\n\t}\n});\n\n/**\n *  The progress of the loop as a value between 0-1. 0, when\n *  the loop is stopped or done iterating. \n *  @memberOf Tone.Loop#\n *  @type {NormalRange}\n *  @name progress\n *  @readOnly\n */\nObject.defineProperty(Tone.Loop.prototype, \"progress\", {\n\tget : function(){\n\t\treturn this._event.progress;\n\t}\n});\n\n/**\n *  The time between successive callbacks. \n *  @example\n * loop.interval = \"8n\"; //loop every 8n\n *  @memberOf Tone.Loop#\n *  @type {Time}\n *  @name interval\n */\nObject.defineProperty(Tone.Loop.prototype, \"interval\", {\n\tget : function(){\n\t\treturn this._event.loopEnd;\n\t},\n\tset : function(interval){\n\t\tthis._event.loopEnd = interval;\n\t}\n});\n\n/**\n *  The playback rate of the loop. The normal playback rate is 1 (no change). \n *  A `playbackRate` of 2 would be twice as fast. \n *  @memberOf Tone.Loop#\n *  @type {Time}\n *  @name playbackRate\n */\nObject.defineProperty(Tone.Loop.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._event.playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._event.playbackRate = rate;\n\t}\n});\n\n/**\n *  Random variation +/-0.01s to the scheduled time. \n *  Or give it a time value which it will randomize by.\n *  @type {Boolean|Time}\n *  @memberOf Tone.Loop#\n *  @name humanize\n */\nObject.defineProperty(Tone.Loop.prototype, \"humanize\", {\n\tget : function(){\n\t\treturn this._event.humanize;\n\t},\n\tset : function(variation){\n\t\tthis._event.humanize = variation;\n\t}\n});\n\n/**\n *  The probably of the callback being invoked.\n *  @memberOf Tone.Loop#\n *  @type {NormalRange}\n *  @name probability\n */\nObject.defineProperty(Tone.Loop.prototype, \"probability\", {\n\tget : function(){\n\t\treturn this._event.probability;\n\t},\n\tset : function(prob){\n\t\tthis._event.probability = prob;\n\t}\n});\n\n/**\n *  Muting the Loop means that no callbacks are invoked.\n *  @memberOf Tone.Loop#\n *  @type {Boolean}\n *  @name mute\n */\nObject.defineProperty(Tone.Loop.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._event.mute;\n\t},\n\tset : function(mute){\n\t\tthis._event.mute = mute;\n\t}\n});\n\n/**\n *  The number of iterations of the loop. The default\n *  value is Infinity (loop forever).\n *  @memberOf Tone.Loop#\n *  @type {Positive}\n *  @name iterations\n */\nObject.defineProperty(Tone.Loop.prototype, \"iterations\", {\n\tget : function(){\n\t\tif (this._event.loop === true){\n\t\t\treturn Infinity;\n\t\t} else {\n\t\t\treturn this._event.loop;\n\t\t}\n\t},\n\tset : function(iters){\n\t\tif (iters === Infinity){\n\t\t\tthis._event.loop = true;\n\t\t} else {\n\t\t\tthis._event.loop = iters;\n\t\t}\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Loop}  this\n */\nTone.Loop.prototype.dispose = function(){\n\tthis._event.dispose();\n\tthis._event = null;\n\tthis.callback = null;\n};\n\nexport default Tone.Loop;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoEffect\";\nimport \"../effect/FeedbackEffect\";\n\n/**\n *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n *         and right to left instead of on the same channel.\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n */\nTone.StereoXFeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The amount of feedback from the output\n\t *  back into the input of the effect (routed\n\t *  across left and right channels).\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  the left side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackLR = new Tone.Gain();\n\n\t/**\n\t *  the right side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackRL = new Tone.Gain();\n\n\t//connect it up\n\tthis.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\tthis.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\tthis.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.StereoXFeedbackEffect, Tone.StereoEffect);\n\n/**\n *  clean up\n *  @returns {Tone.StereoXFeedbackEffect} this\n */\nTone.StereoXFeedbackEffect.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis.feedback.dispose();\n\tthis.feedback = null;\n\tthis._feedbackLR.dispose();\n\tthis._feedbackLR = null;\n\tthis._feedbackRL.dispose();\n\tthis._feedbackRL = null;\n\treturn this;\n};\n\nexport default Tone.StereoXFeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/MidSideSplit\";\nimport \"../component/MidSideMerge\";\n\n/**\n *  @class Mid/Side processing separates the the 'mid' signal\n *         (which comes out of both the left and the right channel)\n *         and the 'side' (which only comes out of the the side channels)\n *         and effects them separately before being recombined.\n *         Applies a Mid/Side seperation and recombination.\n *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n *         <br><br>\n *         This is a base-class for Mid/Side Effects.\n *\n *  @extends {Tone.Effect}\n *  @constructor\n */\nTone.MidSideEffect = function(){\n\n\tTone.Effect.apply(this, arguments);\n\n\t/**\n\t *  The mid/side split\n\t *  @type  {Tone.MidSideSplit}\n\t *  @private\n\t */\n\tthis._midSideSplit = new Tone.MidSideSplit();\n\n\t/**\n\t *  The mid/side merge\n\t *  @type  {Tone.MidSideMerge}\n\t *  @private\n\t */\n\tthis._midSideMerge = new Tone.MidSideMerge();\n\n\t/**\n\t *  The mid send. Connect to mid processing\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis.midSend = this._midSideSplit.mid;\n\n\t/**\n\t *  The side send. Connect to side processing\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis.sideSend = this._midSideSplit.side;\n\n\t/**\n\t *  The mid return connection\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.midReturn = this._midSideMerge.mid;\n\n\t/**\n\t *  The side return connection\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.sideReturn = this._midSideMerge.side;\n\n\t//the connections\n\tthis.effectSend.connect(this._midSideSplit);\n\tthis._midSideMerge.connect(this.effectReturn);\n};\n\nTone.extend(Tone.MidSideEffect, Tone.Effect);\n\n/**\n *  Clean up.\n *  @returns {Tone.MidSideEffect} this\n */\nTone.MidSideEffect.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._midSideSplit.dispose();\n\tthis._midSideSplit = null;\n\tthis._midSideMerge.dispose();\n\tthis._midSideMerge = null;\n\tthis.midSend = null;\n\tthis.sideSend = null;\n\tthis.midReturn = null;\n\tthis.sideReturn = null;\n\treturn this;\n};\n\nexport default Tone.MidSideEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\nimport \"../effect/Effect\";\n\n/**\n *  @class  Tone.Convolver is a wrapper around the Native Web Audio\n *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n *                                           contianing the impulse response.\n *  @param {Function=} onload The callback to invoke when the url is loaded.\n *  @example\n * //initializing the convolver with an impulse response\n * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n */\nTone.Convolver = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.Convolver);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  convolver node\n\t *  @type {ConvolverNode}\n\t *  @private\n\t */\n\tthis._convolver = this.context.createConvolver();\n\n\t/**\n\t *  the convolution buffer\n\t *  @type {Tone.Buffer}\n\t *  @private\n\t */\n\tthis._buffer = new Tone.Buffer(options.url, function(buffer){\n\t\tthis.buffer = buffer.get();\n\t\toptions.onload();\n\t}.bind(this));\n\n\t//set if it's already loaded\n\tif (this._buffer.loaded){\n\t\tthis.buffer = this._buffer;\n\t}\n\n\t//initially set normalization\n\tthis.normalize = options.normalize;\n\n\tthis.connectEffect(this._convolver);\n};\n\nTone.extend(Tone.Convolver, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type  {Object}\n */\nTone.Convolver.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"normalize\" : true\n};\n\n/**\n *  The convolver's buffer\n *  @memberOf Tone.Convolver#\n *  @type {AudioBuffer}\n *  @name buffer\n */\nObject.defineProperty(Tone.Convolver.prototype, \"buffer\", {\n\t\"get\" : function(){\n\t\tif (this._buffer.length){\n\t\t\treturn this._buffer;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t},\n\t\"set\" : function(buffer){\n\t\tthis._buffer.set(buffer);\n\t\t//if it's already got a buffer, create a new one\n\t\tif (this._convolver.buffer){\n\t\t\t//disconnect the old one\n\t\t\tthis.effectSend.disconnect();\n\t\t\tthis._convolver.disconnect();\n\t\t\t//create and connect a new one\n\t\t\tthis._convolver = this.context.createConvolver();\n\t\t\tthis.connectEffect(this._convolver);\n\t\t}\n\t\tthis._convolver.buffer = this._buffer.get();\n\t}\n});\n\n/**\n *  The normalize property of the ConvolverNode interface is a boolean that controls whether the impulse response from the buffer will be scaled by an equal-power normalization when the buffer attribute is set, or not.\n *  @memberOf Tone.Convolver#\n *  @type {Boolean}\n *  @name normalize\n */\nObject.defineProperty(Tone.Convolver.prototype, \"normalize\", {\n\t\"get\" : function(){\n\t\treturn this._convolver.normalize;\n\t},\n\t\"set\" : function(norm){\n\t\tthis._convolver.normalize = norm;\n\t}\n});\n\n/**\n *  Load an impulse response url as an audio buffer.\n *  Decodes the audio asynchronously and invokes\n *  the callback once the audio buffer loads.\n *  @param {string} url The url of the buffer to load.\n *                      filetype support depends on the\n *                      browser.\n *  @param  {function=} callback\n *  @returns {Promise}\n */\nTone.Convolver.prototype.load = function(url, callback){\n\treturn this._buffer.load(url, function(buff){\n\t\tthis.buffer = buff;\n\t\tif (callback){\n\t\t\tcallback();\n\t\t}\n\t}.bind(this));\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Convolver} this\n */\nTone.Convolver.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._buffer.dispose();\n\tthis._buffer = null;\n\tthis._convolver.disconnect();\n\tthis._convolver = null;\n\treturn this;\n};\n\nexport default Tone.Convolver;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Multiply\";\nimport \"../signal/Subtract\";\n\n/**\n *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n *         values in the NormalRange.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @param {NormalRange} modulus The modulus to apply.\n *  @example\n * var mod = new Tone.Modulo(0.2)\n * var sig = new Tone.Signal(0.5).connect(mod);\n * //mod outputs 0.1\n */\nTone.Modulo = function(modulus){\n\n\tTone.SignalBase.call(this);\n\tthis.createInsOuts(1, 0);\n\n\t/**\n\t *  A waveshaper gets the integer multiple of\n\t *  the input signal and the modulus.\n\t *  @private\n\t *  @type {Tone.WaveShaper}\n\t */\n\tthis._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\n\t/**\n\t *  the integer multiple is multiplied by the modulus\n\t *  @type  {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._multiply = new Tone.Multiply();\n\n\t/**\n\t *  and subtracted from the input signal\n\t *  @type  {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._subtract = this.output = new Tone.Subtract();\n\n\t/**\n\t *  the modulus signal\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._modSignal = new Tone.Signal(modulus);\n\n\t//connections\n\tTone.connect(this.input, this._shaper);\n\tTone.connect(this.input, this._subtract);\n\tthis._modSignal.connect(this._multiply, 0, 0);\n\tthis._shaper.connect(this._multiply, 0, 1);\n\tthis._multiply.connect(this._subtract, 0, 1);\n\tthis._setWaveShaper(modulus);\n};\n\nTone.extend(Tone.Modulo, Tone.SignalBase);\n\n/**\n *  @param  {number}  mod  the modulus to apply\n *  @private\n */\nTone.Modulo.prototype._setWaveShaper = function(mod){\n\tthis._shaper.setMap(function(val){\n\t\tvar multiple = Math.floor((val + 0.0001) / mod);\n\t\treturn multiple;\n\t});\n};\n\n/**\n * The modulus value.\n * @memberOf Tone.Modulo#\n * @type {NormalRange}\n * @name value\n */\nObject.defineProperty(Tone.Modulo.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._modSignal.value;\n\t},\n\tset : function(mod){\n\t\tthis._modSignal.value = mod;\n\t\tthis._setWaveShaper(mod);\n\t}\n});\n\n/**\n * clean up\n *  @returns {Tone.Modulo} this\n */\nTone.Modulo.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\tthis._multiply.dispose();\n\tthis._multiply = null;\n\tthis._subtract.dispose();\n\tthis._subtract = null;\n\tthis._modSignal.dispose();\n\tthis._modSignal = null;\n\treturn this;\n};\n\nexport default Tone.Modulo;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Context\";\nimport \"../shim/OfflineAudioContext\";\n\n/**\n *  @class Wrapper around the OfflineAudioContext\n *  @extends {Tone.Context}\n *  @param  {Number}  channels  The number of channels to render\n *  @param  {Number}  duration  The duration to render in samples\n *  @param {Number} sampleRate the sample rate to render at\n */\nTone.OfflineContext = function(channels, duration, sampleRate){\n\n\t/**\n\t *  The offline context\n\t *  @private\n\t *  @type  {OfflineAudioContext}\n\t */\n\tvar offlineContext = new OfflineAudioContext(channels, duration * sampleRate, sampleRate);\n\n\t//wrap the methods/members\n\tTone.Context.call(this, {\n\t\t\"context\" : offlineContext,\n\t\t\"clockSource\" : \"offline\",\n\t\t\"lookAhead\" : 0,\n\t\t\"updateInterval\" : 128 / sampleRate\n\t});\n\n\t/**\n\t *  A private reference to the duration\n\t *  @private\n\t *  @type  {Number}\n\t */\n\tthis._duration = duration;\n\n\t/**\n\t *  An artificial clock source\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._currentTime = 0;\n};\n\nTone.extend(Tone.OfflineContext, Tone.Context);\n\n/**\n *  Override the now method to point to the internal clock time\n *  @return  {Number}\n */\nTone.OfflineContext.prototype.now = function(){\n\treturn this._currentTime;\n};\n\n/**\n *  Overwrite resume, should not do anything in the OfflineAudioContext.\n *  @return {Promise}\n */\nTone.OfflineContext.prototype.resume = function(){\n\treturn Promise.resolve();\n};\n\n/**\n *  Render the output of the OfflineContext\n *  @return  {Promise}\n */\nTone.OfflineContext.prototype.render = function(){\n\twhile (this._duration - this._currentTime >= 0){\n\t\t//invoke all the callbacks on that time\n\t\tthis.emit(\"tick\");\n\t\t//increment the clock in 5ms chunks\n\t\tthis._currentTime += 0.005;\n\t}\n\n\treturn this._context.startRendering();\n};\n\n/**\n *  Close the context\n *  @return  {Promise}\n */\nTone.OfflineContext.prototype.close = function(){\n\tthis._context = null;\n\treturn Promise.resolve();\n};\n\nexport default Tone.OfflineContext;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../core/Buffer\";\nimport \"../core/OfflineContext\";\nimport \"../core/Master\";\n\n/**\n *  Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.\n *  The OfflineAudioContext is capable of rendering much faster than real time in many cases.\n *  The callback function also passes in an offline instance of Tone.Transport which can be used\n *  to schedule events along the Transport. **NOTE** OfflineAudioContext has the same restrictions\n *  as the AudioContext in that on certain platforms (like iOS) it must be invoked by an explicit\n *  user action like a click or tap. \n *  @param  {Function}  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n *  @param  {Time}  duration     the amount of time to record for.\n *  @return  {Promise}  The promise which is invoked with the Tone.Buffer of the recorded output.\n *  @example\n * //render 2 seconds of the oscillator\n * Tone.Offline(function(){\n * \t//only nodes created in this callback will be recorded\n * \tvar oscillator = new Tone.Oscillator().toMaster().start(0)\n * \t//schedule their events\n * }, 2).then(function(buffer){\n * \t//do something with the output buffer\n * })\n * @example\n * //can also schedule events along the Transport\n * //using the passed in Offline Transport\n * Tone.Offline(function(Transport){\n * \tvar osc = new Tone.Oscillator().toMaster()\n * \tTransport.schedule(function(time){\n * \t\tosc.start(time).stop(time + 0.1)\n * \t}, 1)\n * \tTransport.start(0.2)\n * }, 4).then(function(buffer){\n * \t//do something with the output buffer\n * })\n */\nTone.Offline = function(callback, duration){\n\t//set the OfflineAudioContext\n\tvar sampleRate = Tone.context.sampleRate;\n\tvar originalContext = Tone.context;\n\n\tvar context = new Tone.OfflineContext(2, duration, sampleRate);\n\tTone.context = context;\n\n\t//invoke the callback/scheduling\n\tvar response = callback(Tone.Transport);\n\n\t//the return value\n\tvar ret = null;\n\n\tif (response && Tone.isFunction(response.then)){\n\t\t//wait for the promise to resolve\n\t\tret = response.then(function(){\n\t\t\t//then render the audio\n\t\t\treturn context.render();\n\t\t});\n\t} else {\n\t\t//process the audio\n\t\tret = context.render();\n\t}\n\n\t//return the original AudioContext\n\tTone.context = originalContext;\n\n\t//return the audio\n\treturn ret.then(function(buffer){\n\t\t//wrap it in a Tone.Buffer\n\t\treturn new Tone.Buffer(buffer);\n\t});\n};\n\nexport default Tone.Offline;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Buffer\";\n\n/**\n *  @class A data structure for holding multiple buffers.\n *  \n *  @param  {Object|Array}    urls      An object literal or array\n *                                      of urls to load.\n *  @param  {Function=}  callback  The callback to invoke when\n *                                 the buffers are loaded. \n *  @extends {Tone}\n *  @example\n * //load a whole bank of piano samples\n * var pianoSamples = new Tone.Buffers({\n * \t\"C4\" : \"path/to/C4.mp3\"\n * \t\"C#4\" : \"path/to/C#4.mp3\"\n * \t\"D4\" : \"path/to/D4.mp3\"\n * \t\"D#4\" : \"path/to/D#4.mp3\"\n * \t...\n * }, function(){\n * \t//play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"C4\");\n * \tplayer.start();\n * });\n * \t@example\n * //To pass in additional parameters in the second parameter\n * var buffers = new Tone.Buffers(urls, {\n * \t\"onload\" : callback,\n * \t\"baseUrl\" : \"../path/to/audio/\"\n * })\n */\nTone.Buffers = function(urls){\n\n\t//remove the urls from the options\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\", \"baseUrl\"], Tone.Buffers);\n\tTone.call(this);\n\n\t/**\n\t *  All of the buffers\n\t *  @type  {Object}\n\t *  @private\n\t */\n\tthis._buffers = {};\n\n\t/**\n\t *  A path which is prefixed before every url.\n\t *  @type  {String}\n\t */\n\tthis.baseUrl = options.baseUrl;\n\n\tthis._loadingCount = 0;\n\t//add each one\n\tfor (var key in urls){\n\t\tthis._loadingCount++;\n\t\tthis.add(key, urls[key], this._bufferLoaded.bind(this, options.onload));\n\t}\n};\n\nTone.extend(Tone.Buffers);\n\n/**\n *  Defaults\n *  @type  {Object}\n */\nTone.Buffers.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"baseUrl\" : \"\"\n};\n\n/**\n *  True if the buffers object has a buffer by that name.\n *  @param  {String|Number}  name  The key or index of the \n *                                 buffer.\n *  @return  {Boolean}\n */\nTone.Buffers.prototype.has = function(name){\n\treturn this._buffers.hasOwnProperty(name);\n};\n\n/**\n *  Get a buffer by name. If an array was loaded, \n *  then use the array index.\n *  @param  {String|Number}  name  The key or index of the \n *                                 buffer.\n *  @return  {Tone.Buffer}\n */\nTone.Buffers.prototype.get = function(name){\n\tif (this.has(name)){\n\t\treturn this._buffers[name];\n\t} else {\n\t\tthrow new Error(\"Tone.Buffers: no buffer named \"+name);\n\t}\n};\n\n/**\n *  A buffer was loaded. decrement the counter.\n *  @param  {Function}  callback \n *  @private\n */\nTone.Buffers.prototype._bufferLoaded = function(callback){\n\tthis._loadingCount--;\n\tif (this._loadingCount === 0 && callback){\n\t\tcallback(this);\n\t}\n};\n\n/**\n * If the buffers are loaded or not\n * @memberOf Tone.Buffers#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Buffers.prototype, \"loaded\", {\n\tget : function(){\n\t\tvar isLoaded = true;\n\t\tfor (var buffName in this._buffers){\n\t\t\tvar buff = this.get(buffName);\n\t\t\tisLoaded = isLoaded && buff.loaded;\n\t\t}\n\t\treturn isLoaded;\n\t}\n});\n\n/**\n *  Add a buffer by name and url to the Buffers\n *  @param  {String}    name      A unique name to give\n *                                the buffer\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke \n *                                 when the url is loaded.\n */\nTone.Buffers.prototype.add = function(name, url, callback){\n\tcallback = Tone.defaultArg(callback, Tone.noOp);\n\tif (url instanceof Tone.Buffer){\n\t\tthis._buffers[name] = url;\n\t\tcallback(this);\n\t} else if (url instanceof AudioBuffer){\n\t\tthis._buffers[name] = new Tone.Buffer(url);\n\t\tcallback(this);\n\t} else if (Tone.isString(url)){\n\t\tthis._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Buffers} this\n */\nTone.Buffers.prototype.dispose = function(){\n\tTone.prototype.dispose.call(this);\n\tfor (var name in this._buffers){\n\t\tthis._buffers[name].dispose();\n\t}\n\tthis._buffers = null;\n\treturn this;\n};\n\nexport default Tone.Buffers;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Generate patterns from an array of values.\n *         Has a number of arpeggiation and randomized\n *         selection patterns. \n *           <ul>\n *  \t        <li>\"up\" - cycles upward</li>\n *  \t\t\t<li>\"down\" - cycles downward</li>\n *  \t\t\t<li>\"upDown\" - up then and down</li>\n *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n *  \t\t\t<li>\"random\" - randomly select an index</li>\n *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n *     \t\t</ul>\n *  @param  {Array}  values   An array of options to choose from.\n *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n *  @extends {Tone}\n */\nTone.CtrlPattern = function(){\n\n\tvar options = Tone.defaults(arguments, [\"values\", \"type\"], Tone.CtrlPattern);\n\tTone.call(this);\n\n\t/**\n\t *  The array of values to arpeggiate over\n\t *  @type {Array}\n\t */\n\tthis.values = options.values;\n\t\n\t/**\n\t *  The current position in the values array\n\t *  @type  {Number}\n\t */\n\tthis.index = 0;\n\n\t/**\n\t *  The type placeholder\n\t *  @type {Tone.CtrlPattern.Type}\n\t *  @private\n\t */\n\tthis._type = null;\n\n\t/**\n\t *  Shuffled values for the RandomOnce type\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._shuffled = null;\n\n\t/**\n\t *  The direction of the movement\n\t *  @type {String}\n\t *  @private\n\t */\n\tthis._direction = null;\n\n\tthis.type = options.type;\n};\n\nTone.extend(Tone.CtrlPattern);\n\n/**\n *  The Control Patterns\n *  @type  {Object}\n *  @static\n */\nTone.CtrlPattern.Type = {\n\tUp : \"up\",\n\tDown : \"down\",\n\tUpDown : \"upDown\",\n\tDownUp : \"downUp\",\n\tAlternateUp : \"alternateUp\",\n\tAlternateDown : \"alternateDown\",\n\tRandom : \"random\",\n\tRandomWalk : \"randomWalk\",\n\tRandomOnce : \"randomOnce\",\n};\n\n/**\n *  The default values. \n *  @type  {Object}\n */\nTone.CtrlPattern.defaults = {\n\t\"type\" : Tone.CtrlPattern.Type.Up,\n\t\"values\" : []\n};\n\n/**\n *  The value at the current index of the pattern.\n *  @readOnly\n *  @memberOf Tone.CtrlPattern#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlPattern.prototype, \"value\", {\n\tget : function(){\n\t\t//some safeguards\n\t\tif (this.values.length === 0){\n\t\t\treturn undefined;\n\t\t} else if (this.values.length === 1){\n\t\t\treturn this.values[0];\n\t\t} \n\t\tthis.index = Math.min(this.index, this.values.length - 1);\n\t\tvar val = this.values[this.index];\n\t\tif (this.type === Tone.CtrlPattern.Type.RandomOnce){\n\t\t\tif (this.values.length !== this._shuffled.length){\n\t\t\t\tthis._shuffleValues();\n\t\t\t}\n\t\t\tval = this.values[this._shuffled[this.index]];\n\t\t}\n\t\treturn val;\n\t}\n});\n\n/**\n *  The pattern used to select the next\n *  item from the values array\n *  @memberOf Tone.CtrlPattern#\n *  @type {Tone.CtrlPattern.Type}\n *  @name type\n */\nObject.defineProperty(Tone.CtrlPattern.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._type;\n\t},\n\tset : function(type){\n\t\tthis._type = type;\n\t\tthis._shuffled = null;\n\n\t\t//the first index\n\t\tif (this._type === Tone.CtrlPattern.Type.Up ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.UpDown || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.RandomOnce ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateUp){\n\t\t\tthis.index = 0;\n\t\t} else if (this._type === Tone.CtrlPattern.Type.Down ||\n\t\t\t\tthis._type === Tone.CtrlPattern.Type.DownUp || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateDown){\n\t\t\tthis.index = this.values.length - 1;\n\t\t}\n\n\t\t//the direction\n\t\tif (this._type === Tone.CtrlPattern.Type.UpDown || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateUp){\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t} else if (this._type === Tone.CtrlPattern.Type.DownUp || \n\t\t\t\tthis._type === Tone.CtrlPattern.Type.AlternateDown){\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\n\t\t//randoms\n\t\tif (this._type === Tone.CtrlPattern.Type.RandomOnce){\n\t\t\tthis._shuffleValues();\n\t\t} else if (this._type === Tone.CtrlPattern.Type.Random){\n\t\t\tthis.index = Math.floor(Math.random() * this.values.length);\n\t\t}\n\t}\n});\n\n/**\n *  Return the next value given the current position\n *  and pattern.\n *  @return {*} The next value\n */\nTone.CtrlPattern.prototype.next = function(){\n\t\n\tvar type = this.type;\n\n\t//choose the next index\n\tif (type === Tone.CtrlPattern.Type.Up){\n\t\tthis.index++;\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.Down){\n\t\tthis.index--;\n\t\tif (this.index < 0){\n\t\t\tthis.index = this.values.length - 1;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.UpDown ||\n\t\t\t\ttype === Tone.CtrlPattern.Type.DownUp){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index++;\n\t\t} else {\n\t\t\tthis.index--;\n\t\t}\n\t\tif (this.index < 0){\n\t\t\tthis.index = 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t} else if (this.index >= this.values.length){\n\t\t\tthis.index = this.values.length - 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.Random){\n\t\tthis.index = Math.floor(Math.random() * this.values.length);\n\t} else if (type === Tone.CtrlPattern.Type.RandomWalk){\n\t\tif (Math.random() < 0.5){\n\t\t\tthis.index--;\n\t\t\tthis.index = Math.max(this.index, 0);\n\t\t} else {\n\t\t\tthis.index++;\n\t\t\tthis.index = Math.min(this.index, this.values.length - 1);\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.RandomOnce){\n\t\tthis.index++;\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t\t//reshuffle the values for next time\n\t\t\tthis._shuffleValues();\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.AlternateUp){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index += 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t} else {\n\t\t\tthis.index -= 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t\tif (this.index >= this.values.length){\n\t\t\tthis.index = 0;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t} else if (type === Tone.CtrlPattern.Type.AlternateDown){\n\t\tif (this._direction === Tone.CtrlPattern.Type.Up){\n\t\t\tthis.index += 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t} else {\n\t\t\tthis.index -= 2;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Up;\n\t\t}\n\t\tif (this.index < 0){\n\t\t\tthis.index = this.values.length - 1;\n\t\t\tthis._direction = Tone.CtrlPattern.Type.Down;\n\t\t}\n\t}\n\treturn this.value;\n};\n\n/**\n *  Shuffles the values and places the results into the _shuffled\n *  @private\n */\nTone.CtrlPattern.prototype._shuffleValues = function(){\n\tvar copy = [];\n\tthis._shuffled = [];\n\tfor (var i = 0; i < this.values.length; i++){\n\t\tcopy[i] = i;\n\t}\n\twhile (copy.length > 0){\n\t\tvar randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t\tthis._shuffled.push(randVal[0]);\n\t}\n};\n\n/**\n *  Clean up\n *  @returns {Tone.CtrlPattern} this\n */\nTone.CtrlPattern.prototype.dispose = function(){\n\tthis._shuffled = null;\n\tthis.values = null;\n};\n\nexport default Tone.CtrlPattern;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/TransportEvent\";\nimport \"../type/Ticks\";\n\n/**\n *  @class Tone.TransportRepeatEvent is an internal class used by Tone.Transport\n *         to schedule repeat events. This class should not be instantiated directly.\n *  @extends {Tone.TransportEvent}\n *  @param {Object} options\n */\nTone.TransportRepeatEvent = function(Transport, options){\n\n\tTone.TransportEvent.call(this, Transport, options);\n\toptions = Tone.defaultArg(options, Tone.TransportRepeatEvent.defaults);\n\n\t/**\n\t * When the event should stop repeating\n\t * @type {Ticks}\n\t * @private\n\t */\n\tthis.duration = Tone.Ticks(options.duration);\n\n\t/**\n\t * The interval of the repeated event\n\t * @type {Ticks}\n\t * @private\n\t */\n\tthis._interval = Tone.Ticks(options.interval);\n\n\t/**\n\t * The ID of the current timeline event\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._currentId = -1;\n\n\t/**\n\t * The ID of the next timeline event\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._nextId = -1;\n\n\t/**\n\t  * The time of the next event\n\t  * @type {Ticks}\n\t  * @private\n\t  */\n\tthis._nextTick = this.time;\n\n\t/**\n\t * a reference to the bound start method\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._boundRestart = this._restart.bind(this);\n\tthis.Transport.on(\"start loopStart\", this._boundRestart);\n\tthis._restart();\n};\n\nTone.extend(Tone.TransportRepeatEvent, Tone.TransportEvent);\n\n/**\n * The defaults\n * @static\n * @type {Object}\n */\nTone.TransportRepeatEvent.defaults = {\n\t\"duration\" : Infinity,\n\t\"interval\" : 1\n};\n\n/**\n * Invoke the callback. Returns the tick time which\n * the next event should be scheduled at.\n * @param  {Number} time  The AudioContext time in seconds of the event\n */\nTone.TransportRepeatEvent.prototype.invoke = function(time){\n\t//create more events if necessary\n\tthis._createEvents(time);\n\t//call the super class\n\tTone.TransportEvent.prototype.invoke.call(this, time);\n};\n\n/**\n * Push more events onto the timeline to keep up with the position of the timeline\n * @private\n */\nTone.TransportRepeatEvent.prototype._createEvents = function(time){\n\t// schedule the next event\n\tvar ticks = this.Transport.getTicksAtTime(time);\n\tif (ticks >= this.time && ticks >= this._nextTick &&\n\tthis._nextTick + this._interval < this.time + this.duration){\n\t\tthis._nextTick += this._interval;\n\t\tthis._currentId = this._nextId;\n\t\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\t}\n};\n\n/**\n * Push more events onto the timeline to keep up with the position of the timeline\n * @private\n */\nTone.TransportRepeatEvent.prototype._restart = function(time){\n\tthis.Transport.clear(this._currentId);\n\tthis.Transport.clear(this._nextId);\n\tthis._nextTick = this.time;\n\tvar ticks = this.Transport.getTicksAtTime(time);\n\tif (ticks > this.time){\n\t\tthis._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n\t}\n\tthis._currentId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\tthis._nextTick += this._interval;\n\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n};\n\n/**\n * Clean up\n * @return {Tone.TransportRepeatEvent} this\n */\nTone.TransportRepeatEvent.prototype.dispose = function(){\n\tthis.Transport.clear(this._currentId);\n\tthis.Transport.clear(this._nextId);\n\tthis.Transport.off(\"start loopStart\", this._boundRestart);\n\tthis._boundCreateEvents = null;\n\tTone.TransportEvent.prototype.dispose.call(this);\n\tthis.duration = null;\n\tthis._interval = null;\n\treturn this;\n};\n\nexport default Tone.TransportRepeatEvent;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class Similar to Tone.Timeline, but all events represent\n *         intervals with both \"time\" and \"duration\" times. The\n *         events are placed in a tree structure optimized\n *         for querying an intersection point with the timeline\n *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n *         to represent the data.\n *  @extends {Tone}\n */\nTone.IntervalTimeline = function(){\n\n\tTone.call(this);\n\n\t/**\n\t *  The root node of the inteval tree\n\t *  @type  {IntervalNode}\n\t *  @private\n\t */\n\tthis._root = null;\n\n\t/**\n\t *  Keep track of the length of the timeline.\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._length = 0;\n};\n\nTone.extend(Tone.IntervalTimeline);\n\n/**\n *  The event to add to the timeline. All events must\n *  have a time and duration value\n *  @param  {Object}  event  The event to add to the timeline\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.add = function(event){\n\tif (Tone.isUndef(event.time) || Tone.isUndef(event.duration)){\n\t\tthrow new Error(\"Tone.IntervalTimeline: events must have time and duration parameters\");\n\t}\n\tevent.time = event.time.valueOf();\n\tvar node = new IntervalNode(event.time, event.time + event.duration, event);\n\tif (this._root === null){\n\t\tthis._root = node;\n\t} else {\n\t\tthis._root.insert(node);\n\t}\n\tthis._length++;\n\t// Restructure tree to be balanced\n\twhile (node !== null){\n\t\tnode.updateHeight();\n\t\tnode.updateMax();\n\t\tthis._rebalance(node);\n\t\tnode = node.parent;\n\t}\n\treturn this;\n};\n\n/**\n *  Remove an event from the timeline.\n *  @param  {Object}  event  The event to remove from the timeline\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.remove = function(event){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(event.time, results);\n\t\tfor (var i = 0; i < results.length; i++){\n\t\t\tvar node = results[i];\n\t\t\tif (node.event === event){\n\t\t\t\tthis._removeNode(node);\n\t\t\t\tthis._length--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  The number of items in the timeline.\n *  @type {Number}\n *  @memberOf Tone.IntervalTimeline#\n *  @name length\n *  @readOnly\n */\nObject.defineProperty(Tone.IntervalTimeline.prototype, \"length\", {\n\tget : function(){\n\t\treturn this._length;\n\t}\n});\n\n/**\n *  Remove events whose time time is after the given time\n *  @param  {Number}  time  The time to query.\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.cancel = function(after){\n\tthis.forEachFrom(after, function(event){\n\t\tthis.remove(event);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Set the root node as the given node\n *  @param {IntervalNode} node\n *  @private\n */\nTone.IntervalTimeline.prototype._setRoot = function(node){\n\tthis._root = node;\n\tif (this._root !== null){\n\t\tthis._root.parent = null;\n\t}\n};\n\n/**\n *  Replace the references to the node in the node's parent\n *  with the replacement node.\n *  @param  {IntervalNode}  node\n *  @param  {IntervalNode}  replacement\n *  @private\n */\nTone.IntervalTimeline.prototype._replaceNodeInParent = function(node, replacement){\n\tif (node.parent !== null){\n\t\tif (node.isLeftChild()){\n\t\t\tnode.parent.left = replacement;\n\t\t} else {\n\t\t\tnode.parent.right = replacement;\n\t\t}\n\t\tthis._rebalance(node.parent);\n\t} else {\n\t\tthis._setRoot(replacement);\n\t}\n};\n\n/**\n *  Remove the node from the tree and replace it with\n *  a successor which follows the schema.\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._removeNode = function(node){\n\tif (node.left === null && node.right === null){\n\t\tthis._replaceNodeInParent(node, null);\n\t} else if (node.right === null){\n\t\tthis._replaceNodeInParent(node, node.left);\n\t} else if (node.left === null){\n\t\tthis._replaceNodeInParent(node, node.right);\n\t} else {\n\t\tvar balance = node.getBalance();\n\t\tvar replacement, temp;\n\t\tif (balance > 0){\n\t\t\tif (node.left.right === null){\n\t\t\t\treplacement = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t\ttemp = replacement;\n\t\t\t} else {\n\t\t\t\treplacement = node.left.right;\n\t\t\t\twhile (replacement.right !== null){\n\t\t\t\t\treplacement = replacement.right;\n\t\t\t\t}\n\t\t\t\treplacement.parent.right = replacement.left;\n\t\t\t\ttemp = replacement.parent;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t}\n\t\t} else if (node.right.left === null){\n\t\t\treplacement = node.right;\n\t\t\treplacement.left = node.left;\n\t\t\ttemp = replacement;\n\t\t} else {\n\t\t\treplacement = node.right.left;\n\t\t\twhile (replacement.left !== null){\n\t\t\t\treplacement = replacement.left;\n\t\t\t}\n\t\t\treplacement.parent.left = replacement.right;\n\t\t\ttemp = replacement.parent;\n\t\t\treplacement.left = node.left;\n\t\t\treplacement.right = node.right;\n\t\t}\n\t\tif (node.parent !== null){\n\t\t\tif (node.isLeftChild()){\n\t\t\t\tnode.parent.left = replacement;\n\t\t\t} else {\n\t\t\t\tnode.parent.right = replacement;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(replacement);\n\t\t}\n\t\t// this._replaceNodeInParent(node, replacement);\n\t\tthis._rebalance(temp);\n\t}\n\tnode.dispose();\n};\n\n/**\n *  Rotate the tree to the left\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rotateLeft = function(node){\n\tvar parent = node.parent;\n\tvar isLeftChild = node.isLeftChild();\n\n\t// Make node.right the new root of this sub tree (instead of node)\n\tvar pivotNode = node.right;\n\tnode.right = pivotNode.left;\n\tpivotNode.left = node;\n\n\tif (parent !== null){\n\t\tif (isLeftChild){\n\t\t\tparent.left = pivotNode;\n\t\t} else {\n\t\t\tparent.right = pivotNode;\n\t\t}\n\t} else {\n\t\tthis._setRoot(pivotNode);\n\t}\n};\n\n/**\n *  Rotate the tree to the right\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rotateRight = function(node){\n\tvar parent = node.parent;\n\tvar isLeftChild = node.isLeftChild();\n\n\t// Make node.left the new root of this sub tree (instead of node)\n\tvar pivotNode = node.left;\n\tnode.left = pivotNode.right;\n\tpivotNode.right = node;\n\n\tif (parent !== null){\n\t\tif (isLeftChild){\n\t\t\tparent.left = pivotNode;\n\t\t} else {\n\t\t\tparent.right = pivotNode;\n\t\t}\n\t} else {\n\t\tthis._setRoot(pivotNode);\n\t}\n};\n\n/**\n *  Balance the BST\n *  @param  {IntervalNode}  node\n *  @private\n */\nTone.IntervalTimeline.prototype._rebalance = function(node){\n\tvar balance = node.getBalance();\n\tif (balance > 1){\n\t\tif (node.left.getBalance() < 0){\n\t\t\tthis._rotateLeft(node.left);\n\t\t} else {\n\t\t\tthis._rotateRight(node);\n\t\t}\n\t} else if (balance < -1){\n\t\tif (node.right.getBalance() > 0){\n\t\t\tthis._rotateRight(node.right);\n\t\t} else {\n\t\t\tthis._rotateLeft(node);\n\t\t}\n\t}\n};\n\n/**\n *  Get an event whose time and duration span the give time. Will\n *  return the match whose \"time\" value is closest to the given time.\n *  @param  {Object}  event  The event to add to the timeline\n *  @return  {Object}  The event which spans the desired time\n */\nTone.IntervalTimeline.prototype.get = function(time){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(time, results);\n\t\tif (results.length > 0){\n\t\t\tvar max = results[0];\n\t\t\tfor (var i = 1; i < results.length; i++){\n\t\t\t\tif (results[i].low > max.low){\n\t\t\t\t\tmax = results[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn max.event;\n\t\t}\n\t}\n\treturn null;\n};\n\n/**\n *  Iterate over everything in the timeline.\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEach = function(callback){\n\tif (this._root !== null){\n\t\tvar allNodes = [];\n\t\tthis._root.traverse(function(node){\n\t\t\tallNodes.push(node);\n\t\t});\n\t\tfor (var i = 0; i < allNodes.length; i++){\n\t\t\tvar ev = allNodes[i].event;\n\t\t\tif (ev){\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array in which the given time\n *  overlaps with the time and duration time of the event.\n *  @param  {Number}  time The time to check if items are overlapping\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEachAtTime = function(time, callback){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.search(time, results);\n\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\tvar ev = results[i].event;\n\t\t\tif (ev){\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Iterate over everything in the array in which the time is greater\n *  than or equal to the given time.\n *  @param  {Number}  time The time to check if items are before\n *  @param  {Function}  callback The callback to invoke with every item\n *  @returns {Tone.IntervalTimeline} this\n */\nTone.IntervalTimeline.prototype.forEachFrom = function(time, callback){\n\tif (this._root !== null){\n\t\tvar results = [];\n\t\tthis._root.searchAfter(time, results);\n\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\tvar ev = results[i].event;\n\t\t\tcallback(ev);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.IntervalTimeline}  this\n */\nTone.IntervalTimeline.prototype.dispose = function(){\n\tvar allNodes = [];\n\tif (this._root !== null){\n\t\tthis._root.traverse(function(node){\n\t\t\tallNodes.push(node);\n\t\t});\n\t}\n\tfor (var i = 0; i < allNodes.length; i++){\n\t\tallNodes[i].dispose();\n\t}\n\tallNodes = null;\n\tthis._root = null;\n\treturn this;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tINTERVAL NODE HELPER\n///////////////////////////////////////////////////////////////////////////\n\n/**\n *  Represents a node in the binary search tree, with the addition\n *  of a \"high\" value which keeps track of the highest value of\n *  its children.\n *  References:\n *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n *  @param {Number} low\n *  @param {Number} high\n *  @private\n */\nvar IntervalNode = function(low, high, event){\n\t//the event container\n\tthis.event = event;\n\t//the low value\n\tthis.low = low;\n\t//the high value\n\tthis.high = high;\n\t//the high value for this and all child nodes\n\tthis.max = this.high;\n\t//the nodes to the left\n\tthis._left = null;\n\t//the nodes to the right\n\tthis._right = null;\n\t//the parent node\n\tthis.parent = null;\n\t//the number of child nodes\n\tthis.height = 0;\n};\n\n/**\n *  Insert a node into the correct spot in the tree\n *  @param  {IntervalNode}  node\n */\nIntervalNode.prototype.insert = function(node){\n\tif (node.low <= this.low){\n\t\tif (this.left === null){\n\t\t\tthis.left = node;\n\t\t} else {\n\t\t\tthis.left.insert(node);\n\t\t}\n\t} else if (this.right === null){\n\t\tthis.right = node;\n\t} else {\n\t\tthis.right.insert(node);\n\t}\n};\n\n/**\n *  Search the tree for nodes which overlap\n *  with the given point\n *  @param  {Number}  point  The point to query\n *  @param  {Array}  results  The array to put the results\n */\nIntervalNode.prototype.search = function(point, results){\n\t// If p is to the right of the rightmost point of any interval\n\t// in this node and all children, there won't be any matches.\n\tif (point > this.max){\n\t\treturn;\n\t}\n\t// Search left children\n\tif (this.left !== null){\n\t\tthis.left.search(point, results);\n\t}\n\t// Check this node\n\tif (this.low <= point && this.high > point){\n\t\tresults.push(this);\n\t}\n\t// If p is to the left of the time of this interval,\n\t// then it can't be in any child to the right.\n\tif (this.low > point){\n\t\treturn;\n\t}\n\t// Search right children\n\tif (this.right !== null){\n\t\tthis.right.search(point, results);\n\t}\n};\n\n/**\n *  Search the tree for nodes which are less\n *  than the given point\n *  @param  {Number}  point  The point to query\n *  @param  {Array}  results  The array to put the results\n */\nIntervalNode.prototype.searchAfter = function(point, results){\n\t// Check this node\n\tif (this.low >= point){\n\t\tresults.push(this);\n\t\tif (this.left !== null){\n\t\t\tthis.left.searchAfter(point, results);\n\t\t}\n\t}\n\t// search the right side\n\tif (this.right !== null){\n\t\tthis.right.searchAfter(point, results);\n\t}\n};\n\n/**\n *  Invoke the callback on this element and both it's branches\n *  @param  {Function}  callback\n */\nIntervalNode.prototype.traverse = function(callback){\n\tcallback(this);\n\tif (this.left !== null){\n\t\tthis.left.traverse(callback);\n\t}\n\tif (this.right !== null){\n\t\tthis.right.traverse(callback);\n\t}\n};\n\n/**\n *  Update the height of the node\n */\nIntervalNode.prototype.updateHeight = function(){\n\tif (this.left !== null && this.right !== null){\n\t\tthis.height = Math.max(this.left.height, this.right.height) + 1;\n\t} else if (this.right !== null){\n\t\tthis.height = this.right.height + 1;\n\t} else if (this.left !== null){\n\t\tthis.height = this.left.height + 1;\n\t} else {\n\t\tthis.height = 0;\n\t}\n};\n\n/**\n *  Update the height of the node\n */\nIntervalNode.prototype.updateMax = function(){\n\tthis.max = this.high;\n\tif (this.left !== null){\n\t\tthis.max = Math.max(this.max, this.left.max);\n\t}\n\tif (this.right !== null){\n\t\tthis.max = Math.max(this.max, this.right.max);\n\t}\n};\n\n/**\n *  The balance is how the leafs are distributed on the node\n *  @return  {Number}  Negative numbers are balanced to the right\n */\nIntervalNode.prototype.getBalance = function(){\n\tvar balance = 0;\n\tif (this.left !== null && this.right !== null){\n\t\tbalance = this.left.height - this.right.height;\n\t} else if (this.left !== null){\n\t\tbalance = this.left.height + 1;\n\t} else if (this.right !== null){\n\t\tbalance = -(this.right.height + 1);\n\t}\n\treturn balance;\n};\n\n/**\n *  @returns {Boolean} true if this node is the left child\n *  of its parent\n */\nIntervalNode.prototype.isLeftChild = function(){\n\treturn this.parent !== null && this.parent.left === this;\n};\n\n/**\n *  get/set the left node\n *  @type {IntervalNode}\n */\nObject.defineProperty(IntervalNode.prototype, \"left\", {\n\tget : function(){\n\t\treturn this._left;\n\t},\n\tset : function(node){\n\t\tthis._left = node;\n\t\tif (node !== null){\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n});\n\n/**\n *  get/set the right node\n *  @type {IntervalNode}\n */\nObject.defineProperty(IntervalNode.prototype, \"right\", {\n\tget : function(){\n\t\treturn this._right;\n\t},\n\tset : function(node){\n\t\tthis._right = node;\n\t\tif (node !== null){\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n});\n\n/**\n *  null out references.\n */\nIntervalNode.prototype.dispose = function(){\n\tthis.parent = null;\n\tthis._left = null;\n\tthis._right = null;\n\tthis.event = null;\n};\n\n///////////////////////////////////////////////////////////////////////////\n//\tEND INTERVAL NODE HELPER\n///////////////////////////////////////////////////////////////////////////\n\nexport default Tone.IntervalTimeline;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\n\n/**\n * @class Tone.TickSignal extends Tone.Signal, but adds the capability\n *        to calculate the number of elapsed ticks. exponential and target curves\n *        are approximated with multiple linear ramps.\n *\n *        Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos, for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n *        describing integrating timing functions for tempo calculations.\n *\n * @param {Number} value The initial value of the signal\n * @extends {Tone.Signal}\n */\nTone.TickSignal = function(value){\n\n\tvalue = Tone.defaultArg(value, 1);\n\n\tTone.Signal.call(this, {\n\t\t\"units\" : Tone.Type.Ticks,\n\t\t\"value\" : value\n\t});\n\n\t//extend the memory\n\tthis._events.memory = Infinity;\n\n\t//clear the clock from the beginning\n\tthis.cancelScheduledValues(0);\n\t//set an initial event\n\tthis._events.add({\n\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\"time\" : 0,\n\t\t\"value\" : value\n\t});\n};\n\nTone.extend(Tone.TickSignal, Tone.Signal);\n\n/**\n * Wraps Tone.Signal methods so that they also\n * record the ticks.\n * @param  {Function} method\n * @return {Function}\n * @private\n */\nfunction _wrapScheduleMethods(method){\n\treturn function(value, time){\n\t\ttime = this.toSeconds(time);\n\t\tmethod.apply(this, arguments);\n\t\tvar event = this._events.get(time);\n\t\tvar previousEvent = this._events.previousEvent(event);\n\t\tvar ticksUntilTime = this._getTicksUntilEvent(previousEvent, time);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t};\n}\n\nTone.TickSignal.prototype.setValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.setValueAtTime);\nTone.TickSignal.prototype.linearRampToValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.linearRampToValueAtTime);\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {Time} startTime\n *  @param {number} timeConstant\n *  @returns {Tone.TickSignal} this\n */\nTone.TickSignal.prototype.setTargetAtTime = function(value, time, constant){\n\t//aproximate it with multiple linear ramps\n\ttime = this.toSeconds(time);\n\tthis.setRampPoint(time);\n\tvalue = this._fromUnits(value);\n\n\t//start from previously scheduled value\n\tvar prevEvent = this._events.get(time);\n\tvar segments = Math.round(Math.max(1 / constant, 1));\n\tfor (var i = 0; i <= segments; i++){\n\t\tvar segTime = constant * i + time;\n\t\tvar rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, value, constant, segTime);\n\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Schedules an exponential continuous change in parameter value from\n *  the previous scheduled parameter value to the given value.\n *  @param  {number} value\n *  @param  {Time} endTime\n *  @returns {Tone.TickSignal} this\n */\nTone.TickSignal.prototype.exponentialRampToValueAtTime = function(value, time){\n\t//aproximate it with multiple linear ramps\n\ttime = this.toSeconds(time);\n\tvalue = this._fromUnits(value);\n\n\t//start from previously scheduled value\n\tvar prevEvent = this._events.get(time);\n\t//approx 10 segments per second\n\tvar segments = Math.round(Math.max((time - prevEvent.time)*10, 1));\n\tvar segmentDur = ((time - prevEvent.time)/segments);\n\tfor (var i = 0; i <= segments; i++){\n\t\tvar segTime = segmentDur * i + prevEvent.time;\n\t\tvar rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, value, segTime);\n\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t}\n\treturn this;\n};\n\n/**\n * Returns the tick value at the time. Takes into account\n * any automation curves scheduled on the signal.\n * @private\n * @param  {Time} time The time to get the tick count at\n * @return {Ticks}      The number of ticks which have elapsed at the time\n *                          given any automations.\n */\nTone.TickSignal.prototype._getTicksUntilEvent = function(event, time){\n\tif (event === null){\n\t\tevent = {\n\t\t\t\"ticks\" : 0,\n\t\t\t\"time\" : 0\n\t\t};\n\t} else if (Tone.isUndef(event.ticks)){\n\t\tvar previousEvent = this._events.previousEvent(event);\n\t\tevent.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n\t}\n\tvar val0 = this.getValueAtTime(event.time);\n\tvar val1 = this.getValueAtTime(time);\n\t//if it's right on the line, take the previous value\n\tif (this._events.get(time).time === time && this._events.get(time).type === Tone.Param.AutomationType.SetValue){\n\t\tval1 = this.getValueAtTime(time - this.sampleTime);\n\t}\n\treturn 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n};\n\n/**\n * Returns the tick value at the time. Takes into account\n * any automation curves scheduled on the signal.\n * @param  {Time} time The time to get the tick count at\n * @return {Ticks}      The number of ticks which have elapsed at the time\n *                          given any automations.\n */\nTone.TickSignal.prototype.getTicksAtTime = function(time){\n\ttime = this.toSeconds(time);\n\tvar event = this._events.get(time);\n\treturn Math.max(this._getTicksUntilEvent(event, time), 0);\n};\n\n/**\n * Return the elapsed time of the number of ticks from the given time\n * @param {Ticks} ticks The number of ticks to calculate\n * @param  {Time} time The time to get the next tick from\n * @return {Seconds} The duration of the number of ticks from the given time in seconds\n */\nTone.TickSignal.prototype.getDurationOfTicks = function(ticks, time){\n\ttime = this.toSeconds(time);\n\tvar currentTick = this.getTicksAtTime(time);\n\treturn this.getTimeOfTick(currentTick + ticks) - time;\n};\n\n/**\n * Given a tick, returns the time that tick occurs at.\n * @param  {Ticks} tick\n * @return {Time}      The time that the tick occurs.\n */\nTone.TickSignal.prototype.getTimeOfTick = function(tick){\n\tvar before = this._events.get(tick, \"ticks\");\n\tvar after = this._events.getAfter(tick, \"ticks\");\n\tif (before && before.ticks === tick){\n\t\treturn before.time;\n\t} else if (before && after &&\n\t\tafter.type === Tone.Param.AutomationType.Linear &&\n\t\tbefore.value !== after.value){\n\t\tvar val0 = this.getValueAtTime(before.time);\n\t\tvar val1 = this.getValueAtTime(after.time);\n\t\tvar delta = (val1 - val0) / (after.time - before.time);\n\t\tvar k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t\tvar sol1 = (-val0 + k) / delta;\n\t\tvar sol2 = (-val0 - k) / delta;\n\t\treturn (sol1 > 0 ? sol1 : sol2) + before.time;\n\t} else if (before){\n\t\tif (before.value === 0){\n\t\t\treturn Infinity;\n\t\t} else {\n\t\t\treturn before.time + (tick - before.ticks) / before.value;\n\t\t}\n\t} else {\n\t\treturn tick / this._initialValue;\n\t}\n};\n\n/**\n * Convert some number of ticks their the duration in seconds accounting\n * for any automation curves starting at the given time.\n * @param  {Ticks} ticks The number of ticks to convert to seconds.\n * @param  {Time} [when=now]  When along the automation timeline to convert the ticks.\n * @return {Tone.Time}       The duration in seconds of the ticks.\n */\nTone.TickSignal.prototype.ticksToTime = function(ticks, when){\n\twhen = this.toSeconds(when);\n\treturn new Tone.Time(this.getDurationOfTicks(ticks, when));\n};\n\n/**\n * The inverse of [ticksToTime](#tickstotime). Convert a duration in\n * seconds to the corresponding number of ticks accounting for any\n * automation curves starting at the given time.\n * @param  {Time} duration The time interval to convert to ticks.\n * @param  {Time} [when=now]     When along the automation timeline to convert the ticks.\n * @return {Tone.Ticks}          The duration in ticks.\n */\nTone.TickSignal.prototype.timeToTicks = function(duration, when){\n\twhen = this.toSeconds(when);\n\tduration = this.toSeconds(duration);\n\tvar startTicks = this.getTicksAtTime(when);\n\tvar endTicks = this.getTicksAtTime(when + duration);\n\treturn new Tone.Ticks(endTicks - startTicks);\n};\n\nexport default Tone.TickSignal;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/TickSource\";\nimport \"../core/TimelineState\";\nimport \"../core/Emitter\";\nimport \"../core/Context\";\n\n/**\n *  @class  A sample accurate clock which provides a callback at the given rate.\n *          While the callback is not sample-accurate (it is still susceptible to\n *          loose JS timing), the time passed in as the argument to the callback\n *          is precise. For most applications, it is better to use Tone.Transport\n *          instead of the Clock by itself since you can synchronize multiple callbacks.\n *\n * \t@constructor\n *  @extends {Tone.Emitter}\n * \t@param {function} callback The callback to be invoked with the time of the audio event\n * \t@param {Frequency} frequency The rate of the callback\n * \t@example\n * //the callback will be invoked approximately once a second\n * //and will print the time exactly once a second apart.\n * var clock = new Tone.Clock(function(time){\n * \tconsole.log(time);\n * }, 1);\n */\nTone.Clock = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"frequency\"], Tone.Clock);\n\tTone.Emitter.call(this);\n\n\t/**\n\t *  The callback function to invoke at the scheduled tick.\n\t *  @type  {Function}\n\t */\n\tthis.callback = options.callback;\n\n\t/**\n\t *  The next time the callback is scheduled.\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._nextTick = 0;\n\n\t/**\n\t *  The tick counter\n\t *  @type  {Tone.TickSource}\n\t *  @private\n\t */\n\tthis._tickSource = new Tone.TickSource(options.frequency);\n\n\t/**\n\t *  The last time the loop callback was invoked\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._lastUpdate = 0;\n\n\t/**\n\t *  The rate the callback function should be invoked.\n\t *  @type  {BPM}\n\t *  @signal\n\t */\n\tthis.frequency = this._tickSource.frequency;\n\tthis._readOnly(\"frequency\");\n\n\t/**\n\t *  The state timeline\n\t *  @type {Tone.TimelineState}\n\t *  @private\n\t */\n\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\t//add an initial state\n\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t/**\n\t *  The loop function bound to its context.\n\t *  This is necessary to remove the event in the end.\n\t *  @type {Function}\n\t *  @private\n\t */\n\tthis._boundLoop = this._loop.bind(this);\n\n\t//bind a callback to the worker thread\n\tthis.context.on(\"tick\", this._boundLoop);\n};\n\nTone.extend(Tone.Clock, Tone.Emitter);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Clock.defaults = {\n\t\"callback\" : Tone.noOp,\n\t\"frequency\" : 1,\n};\n\n/**\n *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.Clock#\n *  @name state\n */\nObject.defineProperty(Tone.Clock.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n});\n\n/**\n *  Start the clock at the given time. Optionally pass in an offset\n *  of where to start the tick counter from.\n *  @param  {Time=}  time    The time the clock should start\n *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n *  @return  {Tone.Clock}  this\n */\nTone.Clock.prototype.start = function(time, offset){\n\t//make sure the context is started\n\tthis.context.resume();\n\t//start the loop\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\tthis._tickSource.start(time, offset);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"start\", time, offset);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  Stop the clock. Stopping the clock resets the tick counter to 0.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.Clock} this\n *  @example\n * clock.stop();\n */\nTone.Clock.prototype.stop = function(time){\n\ttime = this.toSeconds(time);\n\tthis._state.cancel(time);\n\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\tthis._tickSource.stop(time);\n\tif (time < this._lastUpdate){\n\t\tthis.emit(\"stop\", time);\n\t}\n\treturn this;\n};\n\n/**\n *  Pause the clock. Pausing does not reset the tick counter.\n *  @param {Time} [time=now] The time when the clock should stop.\n *  @returns {Tone.Clock} this\n */\nTone.Clock.prototype.pause = function(time){\n\ttime = this.toSeconds(time);\n\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t\tthis._tickSource.pause(time);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"pause\", time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n *  The number of times the callback was invoked. Starts counting at 0\n *  and increments after the callback was invoked.\n *  @type {Ticks}\n */\nObject.defineProperty(Tone.Clock.prototype, \"ticks\", {\n\tget : function(){\n\t\treturn Math.ceil(this.getTicksAtTime(this.now()));\n\t},\n\tset : function(t){\n\t\tthis._tickSource.ticks = t;\n\t}\n});\n\n/**\n *  The time since ticks=0 that the Clock has been running. Accounts\n *  for tempo curves\n *  @type {Seconds}\n */\nObject.defineProperty(Tone.Clock.prototype, \"seconds\", {\n\tget : function(){\n\t\treturn this._tickSource.seconds;\n\t},\n\tset : function(s){\n\t\tthis._tickSource.seconds = s;\n\t}\n});\n\n/**\n *  Return the elapsed seconds at the given time.\n *  @param  {Time}  time  When to get the elapsed seconds\n *  @return  {Seconds}  The number of elapsed seconds\n */\nTone.Clock.prototype.getSecondsAtTime = function(time){\n\treturn this._tickSource.getSecondsAtTime(time);\n};\n\n/**\n * Set the clock's ticks at the given time.\n * @param  {Ticks} ticks The tick value to set\n * @param  {Time} time  When to set the tick value\n * @return {Tone.Clock}       this\n */\nTone.Clock.prototype.setTicksAtTime = function(ticks, time){\n\tthis._tickSource.setTicksAtTime(ticks, time);\n\treturn this;\n};\n\n/**\n * Get the clock's ticks at the given time.\n * @param  {Time} time  When to get the tick value\n * @return {Ticks}       The tick value at the given time.\n */\nTone.Clock.prototype.getTicksAtTime = function(time){\n\treturn this._tickSource.getTicksAtTime(time);\n};\n\n/**\n * Get the time of the next tick\n * @param  {Ticks} ticks The tick number.\n * @param  {Time} before \n * @return {Tone.Clock}       this\n */\nTone.Clock.prototype.nextTickTime = function(offset, when){\n\twhen = this.toSeconds(when);\n\tvar currentTick = this.getTicksAtTime(when);\n\treturn this._tickSource.getTimeOfTick(currentTick+offset, when);\n};\n\n/**\n *  The scheduling loop.\n *  @private\n */\nTone.Clock.prototype._loop = function(){\n\n\tvar startTime = this._lastUpdate;\n\tvar endTime = this.now();\n\tthis._lastUpdate = endTime;\n\n\tif (startTime !== endTime){\n\t\t//the state change events\n\t\tthis._state.forEachBetween(startTime, endTime, function(e){\n\t\t\tswitch (e.state){\n\t\t\t\tcase Tone.State.Started : \n\t\t\t\t\tvar offset = this._tickSource.getTicksAtTime(e.time);\n\t\t\t\t\tthis.emit(\"start\", e.time, offset);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.State.Stopped : \n\t\t\t\t\tif (e.time !== 0){\n\t\t\t\t\t\tthis.emit(\"stop\", e.time);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.State.Paused :\n\t\t\t\t\tthis.emit(\"pause\", e.time); \n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}.bind(this));\n\t\t//the tick callbacks\n\t\tthis._tickSource.forEachTickBetween(startTime, endTime, function(time, ticks){\n\t\t\tthis.callback(time, ticks);\n\t\t}.bind(this));\n\t}\n};\n\n/**\n *  Returns the scheduled state at the given time.\n *  @param  {Time}  time  The time to query.\n *  @return  {String}  The name of the state input in setStateAtTime.\n *  @example\n * clock.start(\"+0.1\");\n * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n */\nTone.Clock.prototype.getStateAtTime = function(time){\n\ttime = this.toSeconds(time);\n\treturn this._state.getValueAtTime(time);\n};\n\n/**\n *  Clean up\n *  @returns {Tone.Clock} this\n */\nTone.Clock.prototype.dispose = function(){\n\tTone.Emitter.prototype.dispose.call(this);\n\tthis.context.off(\"tick\", this._boundLoop);\n\tthis._writable(\"frequency\");\n\tthis._tickSource.dispose();\n\tthis._tickSource = null;\n\tthis.frequency = null;\n\tthis._boundLoop = null;\n\tthis._nextTick = Infinity;\n\tthis.callback = null;\n\tthis._state.dispose();\n\tthis._state = null;\n};\n\nexport default Tone.Clock;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var gt0 = new Tone.GreaterThanZero();\n * var sig = new Tone.Signal(0.01).connect(gt0);\n * //the output of gt0 is 1.\n * sig.value = 0;\n * //the output of gt0 is 0.\n */\nTone.GreaterThanZero = function(){\n\n\tTone.SignalBase.call(this);\n\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._thresh = this.output = new Tone.WaveShaper(function(val){\n\t\tif (val <= 0){\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}, 127);\n\n\t/**\n\t *  scale the first thresholded signal by a large value.\n\t *  this will help with values which are very close to 0\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.input = new Tone.Multiply(10000);\n\n\t//connections\n\tthis._scale.connect(this._thresh);\n};\n\nTone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\n/**\n *  dispose method\n *  @returns {Tone.GreaterThanZero} this\n */\nTone.GreaterThanZero.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._thresh.dispose();\n\tthis._thresh = null;\n\treturn this;\n};\n\nexport default Tone.GreaterThanZero;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/GreaterThanZero\";\nimport \"../signal/Subtract\";\nimport \"../signal/Signal\";\n\n/**\n *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n *          can compare two signals or a signal and a number.\n *\n *  @constructor\n *  @extends {Tone.Signal}\n *  @param {number} [value=0] the value to compare to the incoming signal\n *  @example\n * var gt = new Tone.GreaterThan(2);\n * var sig = new Tone.Signal(4).connect(gt);\n * //output of gt is equal 1.\n */\nTone.GreaterThan = function(value){\n\n\tTone.Signal.call(this);\n\tthis.createInsOuts(2, 0);\n\n\t/**\n\t *  subtract the amount from the incoming signal\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._param = this.input[0] = new Tone.Subtract(value);\n\tthis.input[1] = this._param.input[1];\n\n\t/**\n\t *  compare that amount to zero\n\t *  @type {Tone.GreaterThanZero}\n\t *  @private\n\t */\n\tthis._gtz = this.output = new Tone.GreaterThanZero();\n\n\t//connect\n\tthis._param.connect(this._gtz);\n};\n\nTone.extend(Tone.GreaterThan, Tone.Signal);\n\n/**\n *  dispose method\n *  @returns {Tone.GreaterThan} this\n */\nTone.GreaterThan.prototype.dispose = function(){\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._gtz.dispose();\n\tthis._gtz = null;\n\treturn this;\n};\n\nexport default Tone.GreaterThan;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Envelope\";\nimport \"../signal/Scale\";\n\n/**\n *  @class Tone.ScaledEnvelop is an envelope which can be scaled\n *         to any range. It's useful for applying an envelope\n *         to a frequency or any other non-NormalRange signal\n *         parameter.\n *\n *  @extends {Tone.Envelope}\n *  @constructor\n *  @param {Time|Object} [attack]\tthe attack time in seconds\n *  @param {Time} [decay]\tthe decay time in seconds\n *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n *  @param {Time} [release]\tthe release time in seconds\n *  @example\n *  var scaledEnv = new Tone.ScaledEnvelope({\n *  \t\"attack\" : 0.2,\n *  \t\"min\" : 200,\n *  \t\"max\" : 2000\n *  });\n *  scaledEnv.connect(oscillator.frequency);\n */\nTone.ScaledEnvelope = function(){\n\n\t//get all of the defaults\n\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\tTone.Envelope.call(this, options);\n\toptions = Tone.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\n\t/**\n\t *  scale the incoming signal by an exponent\n\t *  @type {Tone.Pow}\n\t *  @private\n\t */\n\tthis._exp = this.output = new Tone.Pow(options.exponent);\n\n\t/**\n\t *  scale the signal to the desired range\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._scale = this.output = new Tone.Scale(options.min, options.max);\n\n\tthis._sig.chain(this._exp, this._scale);\n};\n\nTone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\n/**\n *  the default parameters\n *  @static\n */\nTone.ScaledEnvelope.defaults = {\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"exponent\" : 1\n};\n\n/**\n * The envelope's min output value. This is the value which it\n * starts at.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._scale.min;\n\t},\n\tset : function(min){\n\t\tthis._scale.min = min;\n\t}\n});\n\n/**\n * The envelope's max output value. In other words, the value\n * at the peak of the attack portion of the envelope.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._scale.max;\n\t},\n\tset : function(max){\n\t\tthis._scale.max = max;\n\t}\n});\n\n/**\n * The envelope's exponent value.\n * @memberOf Tone.ScaledEnvelope#\n * @type {number}\n * @name exponent\n */\nObject.defineProperty(Tone.ScaledEnvelope.prototype, \"exponent\", {\n\tget : function(){\n\t\treturn this._exp.value;\n\t},\n\tset : function(exp){\n\t\tthis._exp.value = exp;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.ScaledEnvelope} this\n */\nTone.ScaledEnvelope.prototype.dispose = function(){\n\tTone.Envelope.prototype.dispose.call(this);\n\tthis._scale.dispose();\n\tthis._scale = null;\n\tthis._exp.dispose();\n\tthis._exp = null;\n\treturn this;\n};\n\nexport default Tone.ScaledEnvelope;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/SignalBase\";\n\n/**\n *  @class Return the absolute value of an incoming signal.\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var signal = new Tone.Signal(-1);\n * var abs = new Tone.Abs();\n * signal.connect(abs);\n * //the output of abs is 1.\n */\nTone.Abs = function(){\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {Tone.LessThan}\n\t *  @private\n\t */\n\tthis._abs = this.input = this.output = new Tone.WaveShaper(function(val){\n\t\tif (Math.abs(val) < 0.001){\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn Math.abs(val);\n\t\t}\n\t}, 1024);\n};\n\nTone.extend(Tone.Abs, Tone.SignalBase);\n\n/**\n *  dispose method\n *  @returns {Tone.Abs} this\n */\nTone.Abs.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._abs.dispose();\n\tthis._abs = null;\n\treturn this;\n};\n\nexport default Tone.Abs;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Solo lets you isolate a specific audio stream. When\n *         an instance is set to `solo=true`, it will mute all other instances.\n *  @extends {Tone.AudioNode}\n *  @example\n * var soloA = new Tone.Solo()\n * var soloB = new Tone.Solo()\n * soloA.solo = true\n * //no audio will pass through soloB\n */\nTone.Solo = function(){\n\n\tvar options = Tone.defaults(arguments, [\"solo\"], Tone.Solo);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The input and output node\n\t *  @type  {Tone.Gain}\n\t */\n\tthis.input = this.output = new Tone.Gain();\n\n\t/**\n\t *  A bound _soloed method\n\t *  @type  {Function}\n\t *  @private\n\t */\n\tthis._soloBind = this._soloed.bind(this);\n\n\t//listen for solo events class-wide.\n\tthis.context.on(\"solo\", this._soloBind);\n\t//set initially\n\tthis.solo = options.solo;\n};\n\nTone.extend(Tone.Solo, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @static\n */\nTone.Solo.defaults = {\n\tsolo : false,\n};\n\n/**\n *  Isolates this instance and mutes all other instances of Tone.Solo.\n *  Only one instance can be soloed at a time. A soloed\n *  instance will report `solo=false` when another instance is soloed.\n *  @memberOf Tone.Solo#\n *  @type {Boolean}\n *  @name solo\n */\nObject.defineProperty(Tone.Solo.prototype, \"solo\", {\n\tget : function(){\n\t\treturn this._isSoloed();\n\t},\n\tset : function(solo){\n\t\tif (solo){\n\t\t\tthis._addSolo();\n\t\t} else {\n\t\t\tthis._removeSolo();\n\t\t}\n\t\tthis.context.emit(\"solo\", this);\n\t}\n});\n\n/**\n *  If the current instance is muted, i.e. another instance is soloed\n *  @memberOf Tone.Solo#\n *  @type {Boolean}\n *  @name muted\n *  @readOnly\n */\nObject.defineProperty(Tone.Solo.prototype, \"muted\", {\n\tget : function(){\n\t\treturn this.input.gain.value === 0;\n\t}\n});\n\n/**\n * Add this to the soloed array\n * @private\n */\nTone.Solo.prototype._addSolo = function(){\n\tif (!Tone.isArray(this.context._currentSolo)){\n\t\tthis.context._currentSolo = [];\n\t}\n\tif (!this._isSoloed()){\n\t\tthis.context._currentSolo.push(this);\n\t}\n};\n\n/**\n * Remove this from the soloed array\n * @private\n */\nTone.Solo.prototype._removeSolo = function(){\n\tif (this._isSoloed()){\n\t\tvar index = this.context._currentSolo.indexOf(this);\n\t\tthis.context._currentSolo.splice(index, 1);\n\t}\n};\n\n/**\n * @return {Boolean} Is this on the soloed array\n * @private\n */\nTone.Solo.prototype._isSoloed = function(){\n\tif (Tone.isArray(this.context._currentSolo)){\n\t\treturn this.context._currentSolo.length !== 0 && this.context._currentSolo.indexOf(this) !== -1;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * @return {Boolean} Returns true if no one is soloed\n * @private\n */\nTone.Solo.prototype._noSolos = function(){\n\treturn !Tone.isArray(this.context._currentSolo) || this.context._currentSolo.length === 0;\n};\n\n/**\n *  Solo the current instance and unsolo all other instances.\n *  @param  {Tone.Solo}  instance  The instance which is being soloed/unsoloed.\n *  @private\n */\nTone.Solo.prototype._soloed = function(){\n\tif (this._isSoloed()){\n\t\tthis.input.gain.value = 1;\n\t} else if (this._noSolos()){\n\t\t//no one is soloed\n\t\tthis.input.gain.value = 1;\n\t} else {\n\t\tthis.input.gain.value = 0;\n\t}\n};\n\n/**\n *  Clean up\n *  @return  {Tone.Solo}  this\n */\nTone.Solo.prototype.dispose = function(){\n\tthis.context.off(\"solo\", this._soloBind);\n\tthis._removeSolo();\n\tthis._soloBind = null;\n\tTone.AudioNode.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.Solo;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n * var eqPowGain = new Tone.EqualPowerGain();\n */\nTone.EqualPowerGain = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._eqPower = this.input = this.output = new Tone.WaveShaper(function(val){\n\t\tif (Math.abs(val) < 0.001){\n\t\t\t//should output 0 when input is 0\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn Tone.equalPowerScale(val);\n\t\t}\n\t}.bind(this), 4096);\n};\n\nTone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.EqualPowerGain} this\n */\nTone.EqualPowerGain.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._eqPower.dispose();\n\tthis._eqPower = null;\n\treturn this;\n};\n\nexport default Tone.EqualPowerGain;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Multiply\";\nimport \"../signal/Signal\";\n\n/**\n *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n *  @constructor\n *  @extends {Tone.SignalBase}\n *  @example\n * var neg = new Tone.Negate();\n * var sig = new Tone.Signal(-2).connect(neg);\n * //output of neg is positive 2. \n */\nTone.Negate = function(){\n\n\tTone.SignalBase.call(this);\n\t/**\n\t *  negation is done by multiplying by -1\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._multiply = this.input = this.output = new Tone.Multiply(-1);\n};\n\nTone.extend(Tone.Negate, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.Negate} this\n */\nTone.Negate.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._multiply.dispose();\n\tthis._multiply = null;\n\treturn this;\n}; \n\nexport default Tone.Negate;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Panner\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {AudioRange} pan the initial pan\n *  @param {number} volume The output volume.\n *  @example\n * //pan the incoming signal left and drop the volume\n * var panVol = new Tone.PanVol(-0.25, -12);\n */\nTone.PanVol = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pan\", \"volume\"], Tone.PanVol);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The panning node\n\t *  @type {Tone.Panner}\n\t *  @private\n\t */\n\tthis._panner = this.input = new Tone.Panner(options.pan);\n\n\t/**\n\t *  The L/R panning control.\n\t *  @type {AudioRange}\n\t *  @signal\n\t */\n\tthis.pan = this._panner.pan;\n\n\t/**\n\t *  The volume node\n\t *  @type {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this._volume.volume;\n\n\t//connections\n\tthis._panner.connect(this._volume);\n\tthis.mute = options.mute;\n\n\tthis._readOnly([\"pan\", \"volume\"]);\n};\n\nTone.extend(Tone.PanVol, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.PanVol.defaults = {\n\t\"pan\" : 0,\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n * Mute/unmute the volume\n * @memberOf Tone.PanVol#\n * @name mute\n * @type {Boolean}\n */\nObject.defineProperty(Tone.PanVol.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.PanVol} this\n */\nTone.PanVol.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"pan\", \"volume\"]);\n\tthis._panner.dispose();\n\tthis._panner = null;\n\tthis.pan = null;\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\treturn this;\n};\n\nexport default Tone.PanVol;\n\n","import Tone from \"../core/Tone\";\nif (Tone.supported){\n\n\tif (!Tone.global.hasOwnProperty(\"OfflineAudioContext\") && Tone.global.hasOwnProperty(\"webkitOfflineAudioContext\")){\n\t\tTone.global.OfflineAudioContext = Tone.global.webkitOfflineAudioContext;\n\t}\n\n\t//returns promise?\n\tvar context = new OfflineAudioContext(1, 1, 44100);\n\tvar ret = context.startRendering();\n\tif (!(ret && Tone.isFunction(ret.then))){\n\t\tOfflineAudioContext.prototype._native_startRendering = OfflineAudioContext.prototype.startRendering;\n\t\tOfflineAudioContext.prototype.startRendering = function(){\n\t\t\treturn new Promise(function(done){\n\t\t\t\tthis.oncomplete = function(e){\n\t\t\t\t\tdone(e.renderedBuffer);\n\t\t\t\t};\n\t\t\t\tthis._native_startRendering();\n\t\t\t}.bind(this));\n\t\t};\n\t}\n}\n\n","export default \"13.8.25\";\n","import Tone from \"../core/Tone\";\nimport \"../type/Frequency\";\n\n/**\n *  @class Tone.Midi is a primitive type for encoding Time values.\n *         Tone.Midi can be constructed with or without the `new` keyword. Tone.Midi can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.Frequency}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Tone.Midi(\"4n\");//a quarter note\n */\nTone.Midi = function(val, units){\n\tif (this instanceof Tone.Midi){\n\n\t\tTone.Frequency.call(this, val, units);\n\n\t} else {\n\t\treturn new Tone.Midi(val, units);\n\t}\n};\n\nTone.extend(Tone.Midi, Tone.Frequency);\n\n/**\n *  The default units if none are given.\n *  @type {String}\n *  @private\n */\nTone.Midi.prototype._defaultUnits = \"midi\";\n\n/**\n *  Returns the value of a frequency in the current units\n *  @param {Frequency} freq\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._frequencyToUnits = function(freq){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._frequencyToUnits.call(this, freq));\n};\n\n/**\n *  Returns the value of a tick in the current time units\n *  @param {Ticks} ticks\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._ticksToUnits = function(ticks){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._ticksToUnits.call(this, ticks));\n};\n\n/**\n *  Return the value of the beats in the current units\n *  @param {Number} beats\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._beatsToUnits = function(beats){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._beatsToUnits.call(this, beats));\n};\n\n/**\n *  Returns the value of a second in the current units\n *  @param {Seconds} seconds\n *  @return  {Number}\n *  @private\n */\nTone.Midi.prototype._secondsToUnits = function(seconds){\n\treturn Tone.Frequency.ftom(Tone.Frequency.prototype._secondsToUnits.call(this, seconds));\n};\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Midi(60).toMidi(); //60\n */\nTone.Midi.prototype.toMidi = function(){\n\treturn this.valueOf();\n};\n\n/**\n *  Return the value of the frequency as a MIDI note\n *  @return  {MIDI}\n *  @example\n * Tone.Midi(60).toFrequency(); //261.6255653005986\n */\nTone.Midi.prototype.toFrequency = function(){\n\treturn Tone.Frequency.mtof(this.toMidi());\n};\n\n/**\n *  Transposes the frequency by the given number of semitones.\n *  @param  {Interval}  interval\n *  @return  {Tone.Frequency} A new transposed frequency\n *  @example\n * Tone.Midi(\"A4\").transpose(3); //\"C5\"\n */\nTone.Midi.prototype.transpose = function(interval){\n\treturn new this.constructor(this.toMidi() + interval);\n};\n\nexport default Tone.Midi;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.UserMedia uses MediaDevices.getUserMedia to open up\n *          and external microphone or audio input. Check\n *          [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n *          to see which browsers are supported. Access to an external input\n *          is limited to secure (HTTPS) connections.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Decibels=} volume The level of the input\n *  @example\n * //list the inputs and open the third one\n * var motu = new Tone.UserMedia();\n *\n * //opening the input asks the user to activate their mic\n * motu.open().then(function(){\n * \t//promise resolves when input is available\n * });\n */\n\nTone.UserMedia = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\"], Tone.UserMedia);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The MediaStreamNode\n\t *  @type {MediaStreamAudioSourceNode}\n\t *  @private\n\t */\n\tthis._mediaStream = null;\n\n\t/**\n\t *  The media stream created by getUserMedia.\n\t *  @type {LocalMediaStream}\n\t *  @private\n\t */\n\tthis._stream = null;\n\n\t/**\n\t *  The open device\n\t *  @type  {MediaDeviceInfo}\n\t *  @private\n\t */\n\tthis._device = null;\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * input.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\tthis.mute = options.mute;\n};\n\nTone.extend(Tone.UserMedia, Tone.AudioNode);\n\n/**\n * the default parameters\n * @type {Object}\n */\nTone.UserMedia.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false\n};\n\n/**\n *  Open the media stream. If a string is passed in, it is assumed\n *  to be the label or id of the stream, if a number is passed in,\n *  it is the input number of the stream.\n *  @param  {String|Number} [labelOrId=\"default\"] The label or id of the audio input media device.\n *                                                With no argument, the default stream is opened.\n *  @return {Promise} The promise is resolved when the stream is open.\n */\nTone.UserMedia.prototype.open = function(labelOrId){\n\t//close the previous stream\n\tif (this.state === Tone.State.Started){\n\t\tthis.close();\n\t}\n\treturn Tone.UserMedia.enumerateDevices().then(function(devices){\n\t\tvar device;\n\t\tif (Tone.isNumber(labelOrId)){\n\t\t\tdevice = devices[labelOrId];\n\t\t} else {\n\t\t\tdevice = devices.find(function(device){\n\t\t\t\treturn device.label === labelOrId || device.deviceId === labelOrId;\n\t\t\t});\n\t\t\t//didn't find a matching device\n\t\t\tif (!device && devices.length > 0){\n\t\t\t\tdevice = devices[0];\n\t\t\t} else if (!device && Tone.isDefined(labelOrId)){\n\t\t\t\tthrow new Error(\"Tone.UserMedia: no matching device: \"+labelOrId);\n\t\t\t}\n\t\t}\n\t\tthis._device = device;\n\t\t//do getUserMedia\n\t\tvar constraints = {\n\t\t\taudio : {\n\t\t\t\t\"echoCancellation\" : false,\n\t\t\t\t\"sampleRate\" : this.context.sampleRate,\n\t\t\t\t\"noiseSuppression\" : false,\n\t\t\t\t\"mozNoiseSuppression\" : false,\n\t\t\t}\n\t\t};\n\t\tif (device){\n\t\t\tconstraints.audio.deviceId = device.deviceId;\t\t\t\t\n\t\t}\n\t\treturn navigator.mediaDevices.getUserMedia(constraints).then(function(stream){\n\t\t\t//start a new source only if the previous one is closed\n\t\t\tif (!this._stream){\n\t\t\t\tthis._stream = stream;\n\t\t\t\t//Wrap a MediaStreamSourceNode around the live input stream.\n\t\t\t\tthis._mediaStream = this.context.createMediaStreamSource(stream);\n\t\t\t\t//Connect the MediaStreamSourceNode to a gate gain node\n\t\t\t\tTone.connect(this._mediaStream, this.output);\n\t\t\t}\n\t\t\treturn this;\n\t\t}.bind(this));\n\t}.bind(this));\n};\n\n/**\n *  Close the media stream\n *  @return {Tone.UserMedia} this\n */\nTone.UserMedia.prototype.close = function(){\n\tif (this._stream){\n\t\tthis._stream.getAudioTracks().forEach(function(track){\n\t\t\ttrack.stop();\n\t\t});\n\t\tthis._stream = null;\n\t\t//remove the old media stream\n\t\tthis._mediaStream.disconnect();\n\t\tthis._mediaStream = null;\n\t}\n\tthis._device = null;\n\treturn this;\n};\n\n/**\n *  Returns a promise which resolves with the list of audio input devices available.\n *  @return {Promise} The promise that is resolved with the devices\n *  @static\n *  @example\n * Tone.UserMedia.enumerateDevices().then(function(devices){\n * \tconsole.log(devices)\n * })\n */\nTone.UserMedia.enumerateDevices = function(){\n\treturn navigator.mediaDevices.enumerateDevices().then(function(devices){\n\t\treturn devices.filter(function(device){\n\t\t\treturn device.kind === \"audioinput\";\n\t\t});\n\t});\n};\n\n/**\n *  Returns the playback state of the source, \"started\" when the microphone is open\n *  and \"stopped\" when the mic is closed.\n *  @type {Tone.State}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name state\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"state\", {\n\tget : function(){\n\t\treturn this._stream && this._stream.active ? Tone.State.Started : Tone.State.Stopped;\n\t}\n});\n\n/**\n * \tReturns an identifier for the represented device that is\n * \tpersisted across sessions. It is un-guessable by other applications and\n * \tunique to the origin of the calling application. It is reset when the\n * \tuser clears cookies (for Private Browsing, a different identifier is\n * \tused that is not persisted across sessions). Returns undefined when the\n * \tdevice is not open.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name deviceId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"deviceId\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.deviceId;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * \tReturns a group identifier. Two devices have the\n * \tsame group identifier if they belong to the same physical device.\n * \tReturns undefined when the device is not open.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name groupId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"groupId\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.groupId;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * \tReturns a label describing this device (for example \"Built-in Microphone\").\n * \tReturns undefined when the device is not open or label is not available\n * \tbecause of permissions.\n *  @type {String}\n *  @readOnly\n *  @memberOf Tone.UserMedia#\n *  @name groupId\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"label\", {\n\tget : function(){\n\t\tif (this._device){\n\t\t\treturn this._device.label;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n/**\n * Mute the output.\n * @memberOf Tone.UserMedia#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * userMedia.mute = true;\n */\nObject.defineProperty(Tone.UserMedia.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n * Clean up.\n * @return {Tone.UserMedia} this\n */\nTone.UserMedia.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis.close();\n\tthis._writable(\"volume\");\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis.volume = null;\n\treturn this;\n};\n\n/**\n *  If getUserMedia is supported by the browser.\n *  @type  {Boolean}\n *  @memberOf Tone.UserMedia#\n *  @name supported\n *  @static\n *  @readOnly\n */\nObject.defineProperty(Tone.UserMedia, \"supported\", {\n\tget : function(){\n\t\treturn Tone.isDefined(navigator.mediaDevices) && Tone.isFunction(navigator.mediaDevices.getUserMedia);\n\t}\n});\n\nexport default Tone.UserMedia;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Player\";\nimport \"../component/Volume\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Players combines multiple [Tone.Player](Player) objects.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Object} urls An object mapping a name to a url.\n *  @param {function=} onload The function to invoke when all buffers are loaded.\n */\nTone.Players = function(urls){\n\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\"], Tone.Players);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The output volume node\n\t *  @type  {Tone.Volume}\n\t *  @private\n\t */\n\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @type {Decibels}\n\t * @signal\n\t * @example\n\t * source.volume.value = -6;\n\t */\n\tthis.volume = this._volume.volume;\n\tthis._readOnly(\"volume\");\n\n\t//make the output explicitly stereo\n\tthis._volume.output.output.channelCount = 2;\n\tthis._volume.output.output.channelCountMode = \"explicit\";\n\t//mute initially\n\tthis.mute = options.mute;\n\n\t/**\n\t * The container of all of the players\n\t * @type {Object}\n\t * @private\n\t */\n\tthis._players = {};\n\n\t/**\n\t * The loading count\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._loadingCount = 0;\n\n\t/**\n\t * private holder of the fadeIn time\n\t * @type {Time}\n\t * @private\n\t */\n\tthis._fadeIn = options.fadeIn;\n\n\t/**\n\t * private holder of the fadeOut time\n\t * @type {Time}\n\t * @private\n\t */\n\tthis._fadeOut = options.fadeOut;\n\n\t//add all of the players\n\tfor (var name in urls){\n\t\tthis._loadingCount++;\n\t\tthis.add(name, urls[name], this._bufferLoaded.bind(this, options.onload));\n\t}\n};\n\nTone.extend(Tone.Players, Tone.AudioNode);\n\n/**\n * The default values\n * @type {Object}\n */\nTone.Players.defaults = {\n\t\"volume\" : 0,\n\t\"mute\" : false,\n\t\"onload\" : Tone.noOp,\n\t\"fadeIn\" : 0,\n\t\"fadeOut\" : 0\n};\n\n/**\n *  A buffer was loaded. decrement the counter.\n *  @param  {Function}  callback\n *  @private\n */\nTone.Players.prototype._bufferLoaded = function(callback){\n\tthis._loadingCount--;\n\tif (this._loadingCount === 0 && callback){\n\t\tcallback(this);\n\t}\n};\n\n/**\n * Mute the output.\n * @memberOf Tone.Source#\n * @type {boolean}\n * @name mute\n * @example\n * //mute the output\n * source.mute = true;\n */\nObject.defineProperty(Tone.Players.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._volume.mute;\n\t},\n\tset : function(mute){\n\t\tthis._volume.mute = mute;\n\t}\n});\n\n/**\n * The fadeIn time of the amplitude envelope.\n * @memberOf Tone.Source#\n * @type {Time}\n * @name fadeIn\n */\nObject.defineProperty(Tone.Players.prototype, \"fadeIn\", {\n\tget : function(){\n\t\treturn this._fadeIn;\n\t},\n\tset : function(fadeIn){\n\t\tthis._fadeIn = fadeIn;\n\t\tthis._forEach(function(player){\n\t\t\tplayer.fadeIn = fadeIn;\n\t\t});\n\t}\n});\n\n/**\n * The fadeOut time of the amplitude envelope.\n * @memberOf Tone.Source#\n * @type {Time}\n * @name fadeOut\n */\nObject.defineProperty(Tone.Players.prototype, \"fadeOut\", {\n\tget : function(){\n\t\treturn this._fadeOut;\n\t},\n\tset : function(fadeOut){\n\t\tthis._fadeOut = fadeOut;\n\t\tthis._forEach(function(player){\n\t\t\tplayer.fadeOut = fadeOut;\n\t\t});\n\t}\n});\n\n/**\n * The state of the players object. Returns \"started\" if any of the players are playing.\n * @memberOf Tone.Players#\n * @type {String}\n * @name state\n * @readOnly\n */\nObject.defineProperty(Tone.Players.prototype, \"state\", {\n\tget : function(){\n\t\tvar playing = false;\n\t\tthis._forEach(function(player){\n\t\t\tplaying = playing || player.state === Tone.State.Started;\n\t\t});\n\t\treturn playing ? Tone.State.Started : Tone.State.Stopped;\n\t}\n});\n\n/**\n *  True if the buffers object has a buffer by that name.\n *  @param  {String|Number}  name  The key or index of the\n *                                 buffer.\n *  @return  {Boolean}\n */\nTone.Players.prototype.has = function(name){\n\treturn this._players.hasOwnProperty(name);\n};\n\n/**\n *  Get a player by name.\n *  @param  {String}  name  The players name as defined in\n *                          the constructor object or `add` method.\n *  @return  {Tone.Player}\n */\nTone.Players.prototype.get = function(name){\n\tif (this.has(name)){\n\t\treturn this._players[name];\n\t} else {\n\t\tthrow new Error(\"Tone.Players: no player named \"+name);\n\t}\n};\n\n/**\n * Iterate over all of the players\n * @param  {Function} callback\n * @return {Tone.Players}            this\n * @private\n */\nTone.Players.prototype._forEach = function(callback){\n\tfor (var playerName in this._players){\n\t\tcallback(this._players[playerName], playerName);\n\t}\n\treturn this;\n};\n\n/**\n * If all the buffers are loaded or not\n * @memberOf Tone.Players#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Players.prototype, \"loaded\", {\n\tget : function(){\n\t\tvar isLoaded = true;\n\t\tthis._forEach(function(player){\n\t\t\tisLoaded = isLoaded && player.loaded;\n\t\t});\n\t\treturn isLoaded;\n\t}\n});\n\n/**\n *  Add a player by name and url to the Players\n *  @param  {String}    name      A unique name to give the player\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke\n *                                 when the url is loaded.\n */\nTone.Players.prototype.add = function(name, url, callback){\n\tthis._players[name] = new Tone.Player(url, callback).connect(this.output);\n\tthis._players[name].fadeIn = this._fadeIn;\n\tthis._players[name].fadeOut = this._fadeOut;\n\treturn this;\n};\n\n/**\n * Stop all of the players at the given time\n * @param {Time} time The time to stop all of the players.\n * @return {Tone.Players} this\n */\nTone.Players.prototype.stopAll = function(time){\n\tthis._forEach(function(player){\n\t\tplayer.stop(time);\n\t});\n};\n\n/**\n *  Dispose and disconnect.\n *  @return {Tone.Players} this\n */\nTone.Players.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._volume.dispose();\n\tthis._volume = null;\n\tthis._writable(\"volume\");\n\tthis.volume = null;\n\tthis.output = null;\n\tthis._forEach(function(player){\n\t\tplayer.dispose();\n\t});\n\tthis._players = null;\n\treturn this;\n};\n\nexport default Tone.Players;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/Source\";\nimport \"../core/Buffer\";\nimport \"../source/BufferSource\";\n\n/**\n * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n *        amount of time each small chunk of audio is played for and the overlap is the\n *        amount of crossfading transition time between successive grains.\n * @extends {Tone.Source}\n * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n * @param {Function=} callback The callback to invoke after the url is loaded.\n */\nTone.GrainPlayer = function(){\n\n\tvar options = Tone.defaults(arguments, [\"url\", \"onload\"], Tone.GrainPlayer);\n\tTone.Source.call(this, options);\n\n\t/**\n\t *  The audio buffer belonging to the player.\n\t *  @type  {Tone.Buffer}\n\t */\n\tthis.buffer = new Tone.Buffer(options.url, options.onload.bind(undefined, this));\n\n\t/**\n\t *  Create a repeating tick to schedule\n\t *  the grains.\n\t *  @type  {Tone.Clock}\n\t *  @private\n\t */\n\tthis._clock = new Tone.Clock(this._tick.bind(this), options.grainSize);\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopStart = 0;\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._loopEnd = 0;\n\n\t/**\n\t * All of the currently playing BufferSources\n\t * @type {Array}\n\t * @private\n\t */\n\tthis._activeSources = [];\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._playbackRate = options.playbackRate;\n\n\t/**\n\t *  @type  {Number}\n\t *  @private\n\t */\n\tthis._grainSize = options.grainSize;\n\n\t/**\n\t *  @private\n\t *  @type {Number}\n\t */\n\tthis._overlap = options.overlap;\n\n\t/**\n\t *  Adjust the pitch independently of the playbackRate.\n\t *  @type  {Cents}\n\t */\n\tthis.detune = options.detune;\n\n\t//setup\n\tthis.overlap = options.overlap;\n\tthis.loop = options.loop;\n\tthis.playbackRate = options.playbackRate;\n\tthis.grainSize = options.grainSize;\n\tthis.loopStart = options.loopStart;\n\tthis.loopEnd = options.loopEnd;\n\tthis.reverse = options.reverse;\n\n\tthis._clock.on(\"stop\", this._onstop.bind(this));\n};\n\nTone.extend(Tone.GrainPlayer, Tone.Source);\n\n/**\n *  the default parameters\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.GrainPlayer.defaults = {\n\t\"onload\" : Tone.noOp,\n\t\"overlap\" : 0.1,\n\t\"grainSize\" : 0.2,\n\t\"playbackRate\" : 1,\n\t\"detune\" : 0,\n\t\"loop\" : false,\n\t\"loopStart\" : 0,\n\t\"loopEnd\" : 0,\n\t\"reverse\" : false\n};\n\n/**\n *  Play the buffer at the given startTime. Optionally add an offset\n *  and/or duration which will play the buffer from a position\n *  within the buffer for the given duration.\n *\n *  @param  {Time} [startTime=now] When the player should start.\n *  @param  {Time} [offset=0] The offset from the beginning of the sample\n *                                 to start at.\n *  @param  {Time=} duration How long the sample should play. If no duration\n *                                is given, it will default to the full length\n *                                of the sample (minus any offset)\n *  @returns {Tone.GrainPlayer} this\n *  @memberOf Tone.GrainPlayer#\n *  @method start\n *  @name start\n */\n\n/**\n *  Internal start method\n *  @param {Time} time\n *  @param {Time} offset\n *  @private\n */\nTone.GrainPlayer.prototype._start = function(time, offset, duration){\n\toffset = Tone.defaultArg(offset, 0);\n\toffset = this.toSeconds(offset);\n\ttime = this.toSeconds(time);\n\n\tthis._offset = offset;\n\tthis._clock.start(time);\n\n\tif (duration){\n\t\tthis.stop(time + this.toSeconds(duration));\n\t}\n};\n\n/**\n *  Internal start method\n *  @param {Time} time\n *  @private\n */\nTone.GrainPlayer.prototype._stop = function(time){\n\tthis._clock.stop(time);\n};\n\n/**\n * Invoked when the clock is stopped\n * @param  {Number} time\n * @private\n */\nTone.GrainPlayer.prototype._onstop = function(time){\n\t//stop the players\n\tthis._activeSources.forEach(function(source){\n\t\tsource.fadeOut = 0;\n\t\tsource.stop(time);\n\t});\n};\n\n/**\n *  Invoked on each clock tick. scheduled a new\n *  grain at this time.\n *  @param  {Time}  time\n *  @private\n */\nTone.GrainPlayer.prototype._tick = function(time){\n\n\t//check if it should stop looping\n\tif (!this.loop && this._offset > this.buffer.duration){\n\t\tthis.stop(time);\n\t\treturn;\n\t}\n\n\t//at the beginning of the file, the fade in should be 0\n\tvar fadeIn = this._offset < this._overlap ? 0 : this._overlap;\n\n\t//create a buffer source\n\tvar source = new Tone.BufferSource({\n\t\t\"buffer\" : this.buffer,\n\t\t\"fadeIn\" : fadeIn,\n\t\t\"fadeOut\" : this._overlap,\n\t\t\"loop\" : this.loop,\n\t\t\"loopStart\" : this._loopStart,\n\t\t\"loopEnd\" : this._loopEnd,\n\t\t//compute the playbackRate based on the detune\n\t\t\"playbackRate\" : Tone.intervalToFrequencyRatio(this.detune / 100)\n\t}).connect(this.output);\n\n\tsource.start(time, this._offset);\n\tthis._offset += this.grainSize;\n\tsource.stop(time + this.grainSize / this.playbackRate);\n\n\t//add it to the active sources\n\tthis._activeSources.push(source);\n\t//remove it when it's done\n\tsource.onended = function(){\n\t\tvar index = this._activeSources.indexOf(source);\n\t\tif (index !== -1){\n\t\t\tthis._activeSources.splice(index, 1);\n\t\t}\n\t}.bind(this);\n};\n\n/**\n * The playback rate of the sample\n * @memberOf Tone.GrainPlayer#\n * @type {Positive}\n * @name playbackRate\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"playbackRate\", {\n\tget : function(){\n\t\treturn this._playbackRate;\n\t},\n\tset : function(rate){\n\t\tthis._playbackRate = rate;\n\t\tthis.grainSize = this._grainSize;\n\t}\n});\n\n/**\n * The loop start time.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name loopStart\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loopStart\", {\n\tget : function(){\n\t\treturn this._loopStart;\n\t},\n\tset : function(time){\n\t\tthis._loopStart = this.toSeconds(time);\n\t}\n});\n\n/**\n * The loop end time.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name loopEnd\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loopEnd\", {\n\tget : function(){\n\t\treturn this._loopEnd;\n\t},\n\tset : function(time){\n\t\tthis._loopEnd = this.toSeconds(time);\n\t}\n});\n\n/**\n * The direction the buffer should play in\n * @memberOf Tone.GrainPlayer#\n * @type {boolean}\n * @name reverse\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"reverse\", {\n\tget : function(){\n\t\treturn this.buffer.reverse;\n\t},\n\tset : function(rev){\n\t\tthis.buffer.reverse = rev;\n\t}\n});\n\n/**\n * The size of each chunk of audio that the\n * buffer is chopped into and played back at.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name grainSize\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"grainSize\", {\n\tget : function(){\n\t\treturn this._grainSize;\n\t},\n\tset : function(size){\n\t\tthis._grainSize = this.toSeconds(size);\n\t\tthis._clock.frequency.value = this._playbackRate / this._grainSize;\n\t}\n});\n\n/**\n * This is the duration of the cross-fade between\n * sucessive grains.\n * @memberOf Tone.GrainPlayer#\n * @type {Time}\n * @name overlap\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"overlap\", {\n\tget : function(){\n\t\treturn this._overlap;\n\t},\n\tset : function(time){\n\t\tthis._overlap = this.toSeconds(time);\n\t}\n});\n\n/**\n * If all the buffer is loaded\n * @memberOf Tone.GrainPlayer#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.GrainPlayer.prototype, \"loaded\", {\n\tget : function(){\n\t\treturn this.buffer.loaded;\n\t}\n});\n\n/**\n * Clean up\n * @return {Tone.GrainPlayer} this\n */\nTone.GrainPlayer.prototype.dispose = function(){\n\tTone.Source.prototype.dispose.call(this);\n\tthis.buffer.dispose();\n\tthis.buffer = null;\n\tthis._clock.dispose();\n\tthis._clock = null;\n\tthis._activeSources.forEach(function(source){\n\t\tsource.dispose();\n\t});\n\tthis._activeSources = null;\n\treturn this;\n};\n\nexport default Tone.GrainPlayer;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Transport\";\nimport \"../signal/Signal\";\nimport \"../type/TransportTime\";\n\n/**\n * @class Tone.TransportTimelineSignal extends Tone.Signal, but adds the ability to synchronize the signal to the signal to the Tone.Transport\n * @extends {Tone.Signal}\n */\nTone.TransportTimelineSignal = function(){\n\tTone.Signal.apply(this, arguments);\n\n\t/**\n\t * The real signal output\n\t * @type {Tone.Signal}\n\t * @private\n\t */\n\tthis.output = this._outputSig = new Tone.Signal(this._initialValue);\n\n\t/**\n\t * Keep track of the last value. (small optimization)\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._lastVal = this.value;\n\n\t/**\n\t * The event id of the tick update loop\n\t * @private\n\t * @type {Number}\n\t */\n\tthis._synced = Tone.Transport.scheduleRepeat(this._onTick.bind(this), \"1i\");\n\n\t/**\n\t * A bound version of the anchor value methods\n\t * @type {Function}\n\t * @private\n\t */\n\tthis._bindAnchorValue = this._anchorValue.bind(this);\n\tTone.Transport.on(\"start stop pause\", this._bindAnchorValue);\n\n\tthis._events.memory = Infinity;\n};\n\nTone.extend(Tone.TransportTimelineSignal, Tone.Signal);\n\n/**\n * Callback which is invoked every tick.\n * @private\n * @param  {Number} time\n * @return {Tone.TransportTimelineSignal}      this\n */\nTone.TransportTimelineSignal.prototype._onTick = function(time){\n\tvar val = this.getValueAtTime(Tone.Transport.seconds);\n\tif (this._lastVal !== val){\n\t\tthis._lastVal = val;\n\t\t//approximate ramp curves with linear ramps\n\t\tthis._outputSig.linearRampToValueAtTime(val, time);\n\t}\n};\n\n/**\n * Anchor the value at the start and stop of the Transport\n * @param  {Number} time The time of the event\n * @return {Tone.TransportTimelineSignal}      this\n * @private\n */\nTone.TransportTimelineSignal.prototype._anchorValue = function(time){\n\tvar val = this.getValueAtTime(Tone.Transport.seconds);\n\tthis._lastVal = val;\n\tthis._outputSig.cancelScheduledValues(time);\n\tthis._outputSig.setValueAtTime(val, time);\n\treturn this;\n};\n\n/**\n *  Get the scheduled value at the given time. This will\n *  return the unconverted (raw) value.\n *  @param  {TransportTime}  time  The time in seconds.\n *  @return  {Number}  The scheduled value at the given time.\n */\nTone.TransportTimelineSignal.prototype.getValueAtTime = function(time){\n\ttime = Tone.TransportTime(time);\n\treturn Tone.Signal.prototype.getValueAtTime.call(this, time);\n};\n\n/**\n * Set the output of the signal at the given time\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.setValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.setValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n * Linear ramp to the given value from the previous scheduled point to the given value\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.linearRampToValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.linearRampToValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n * Exponential ramp to the given value from the previous scheduled point to the given value\n * @param  {Number} value The value to change to at the given time\n * @param  {TransportTime} time  The time to change the signal\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.exponentialRampToValueAtTime = function(value, time){\n\ttime = Tone.TransportTime(time);\n\tTone.Signal.prototype.exponentialRampToValueAtTime.call(this, value, time);\n\treturn this;\n};\n\n/**\n *  Start exponentially approaching the target value at the given time with\n *  a rate having the given time constant.\n *  @param {number} value\n *  @param {TransportTime} startTime\n *  @param {number} timeConstant\n * @return {Tone.TransportTimelineSignal}       this\n */\nTone.TransportTimelineSignal.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\tstartTime = Tone.TransportTime(startTime);\n\tTone.Signal.prototype.setTargetAtTime.call(this, value, startTime, timeConstant);\n\treturn this;\n};\n\n/**\n *  Cancels all scheduled parameter changes with times greater than or\n *  equal to startTime.\n *  @param  {TransportTime} startTime\n *  @returns {Tone.Param} this\n */\nTone.TransportTimelineSignal.prototype.cancelScheduledValues = function(startTime){\n\tstartTime = Tone.TransportTime(startTime);\n\tTone.Signal.prototype.cancelScheduledValues.call(this, startTime);\n\treturn this;\n};\n\n/**\n *  Set an array of arbitrary values starting at the given time for the given duration.\n *  @param {Float32Array} values\n *  @param {Time} startTime\n *  @param {Time} duration\n *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n *  @returns {Tone.Signal} this\n */\nTone.TransportTimelineSignal.prototype.setValueCurveAtTime = function(values, startTime, duration, scaling){\n\tstartTime = Tone.TransportTime(startTime);\n\tduration = Tone.TransportTime(duration);\n\tTone.Signal.prototype.setValueCurveAtTime.call(this, values, startTime, duration, scaling);\n\treturn this;\n};\n\n/**\n *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n *  it holds the automated value at time until the next automated event.\n *  @param  {Time} time\n *  @returns {Tone.TransportTimelineSignal} this\n */\nTone.TransportTimelineSignal.prototype.cancelAndHoldAtTime = function(time){\n\treturn Tone.Signal.prototype.cancelAndHoldAtTime.call(this, Tone.TransportTime(time));\n};\n\n/**\n * Dispose and disconnect\n * @return {Tone.TransportTimelineSignal} this\n */\nTone.TransportTimelineSignal.prototype.dispose = function(){\n\tTone.Transport.clear(this._synced);\n\tTone.Transport.off(\"start stop pause\", this._syncedCallback);\n\tthis._events.cancel(0);\n\tTone.Signal.prototype.dispose.call(this);\n\tthis._outputSig.dispose();\n\tthis._outputSig = null;\n};\n\nexport default Tone.TransportTimelineSignal;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/Add\";\nimport \"../signal/Multiply\";\n\n/**\n *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @param {number} inputMin the min input value\n *  @param {number} inputMax the max input value\n *  @example\n * var norm = new Tone.Normalize(2, 4);\n * var sig = new Tone.Signal(3).connect(norm);\n * //output of norm is 0.5. \n */\nTone.Normalize = function(inputMin, inputMax){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t *  the min input value\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._inputMin = Tone.defaultArg(inputMin, 0);\n\n\t/**\n\t *  the max input value\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._inputMax = Tone.defaultArg(inputMax, 1);\n\n\t/**\n\t *  subtract the min from the input\n\t *  @type {Tone.Add}\n\t *  @private\n\t */\n\tthis._sub = this.input = new Tone.Add(0);\n\n\t/**\n\t *  divide by the difference between the input and output\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._div = this.output = new Tone.Multiply(1);\n\n\tthis._sub.connect(this._div);\n\tthis._setRange();\n};\n\nTone.extend(Tone.Normalize, Tone.SignalBase);\n\n/**\n * The minimum value the input signal will reach.\n * @memberOf Tone.Normalize#\n * @type {number}\n * @name min\n */\nObject.defineProperty(Tone.Normalize.prototype, \"min\", {\n\tget : function(){\n\t\treturn this._inputMin;\n\t},\n\tset : function(min){\n\t\tthis._inputMin = min;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n * The maximum value the input signal will reach.\n * @memberOf Tone.Normalize#\n * @type {number}\n * @name max\n */\nObject.defineProperty(Tone.Normalize.prototype, \"max\", {\n\tget : function(){\n\t\treturn this._inputMax;\n\t},\n\tset : function(max){\n\t\tthis._inputMax = max;\n\t\tthis._setRange();\n\t}\n});\n\n/**\n *  set the values\n *  @private\n */\nTone.Normalize.prototype._setRange = function(){\n\tthis._sub.value = -this._inputMin;\n\tthis._div.value = 1 / (this._inputMax - this._inputMin);\n};\n\n/**\n *  clean up\n *  @returns {Tone.Normalize} this\n */\nTone.Normalize.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._sub.dispose();\n\tthis._sub = null;\n\tthis._div.dispose();\n\tthis._div = null;\n\treturn this;\n};\n\nexport default Tone.Normalize;\n\n","import Tone from \"../core/Tone\";\nimport \"../signal/WaveShaper\";\nimport \"../signal/Signal\";\n\n/**\n *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n *         See also Tone.AudioToGain. \n *\n *  @extends {Tone.SignalBase}\n *  @constructor\n *  @example\n * var g2a = new Tone.GainToAudio();\n */\nTone.GainToAudio = function(){\n\n\tTone.SignalBase.call(this);\n\t\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._norm = this.input = this.output = new Tone.WaveShaper(function(x){\n\t\treturn Math.abs(x) * 2 - 1;\n\t});\n};\n\nTone.extend(Tone.GainToAudio, Tone.SignalBase);\n\n/**\n *  clean up\n *  @returns {Tone.GainToAudio} this\n */\nTone.GainToAudio.prototype.dispose = function(){\n\tTone.SignalBase.prototype.dispose.call(this);\n\tthis._norm.dispose();\n\tthis._norm = null;\n\treturn this;\n};\n\nexport default Tone.GainToAudio;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../core/Buffers\";\nimport \"../source/BufferSource\";\n\n/**\n * @class Automatically interpolates between a set of pitched samples. Pass in an object which maps the note's pitch or midi value to the url, then you can trigger the attack and release of that note like other instruments. By automatically repitching the samples, it is possible to play pitches which were not explicitly included which can save loading time.\n *        For sample or buffer playback where repitching is not necessary, use [Tone.Player](https://tonejs.github.io/docs/Player).\n * @param {Object} samples An object of samples mapping either Midi\n *                         Note Numbers or Scientific Pitch Notation\n *                         to the url of that sample.\n * @param {Function=} onload The callback to invoke when all of the samples are loaded.\n * @param {String=} baseUrl The root URL of all of the samples, which is prepended to all the URLs.\n * @example\n * var sampler = new Tone.Sampler({\n * \t\"C3\" : \"path/to/C3.mp3\",\n * \t\"D#3\" : \"path/to/Dsharp3.mp3\",\n * \t\"F#3\" : \"path/to/Fsharp3.mp3\",\n * \t\"A3\" : \"path/to/A3.mp3\",\n * }, function(){\n * \t//sampler will repitch the closest sample\n * \tsampler.triggerAttack(\"D3\")\n * })\n * @extends {Tone.Instrument}\n */\nTone.Sampler = function(urls){\n\n\t// shift arguments over one. Those are the remainder of the options\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.shift();\n\tvar options = Tone.defaults(args, [\"onload\", \"baseUrl\"], Tone.Sampler);\n\tTone.Instrument.call(this, options);\n\n\tvar urlMap = {};\n\tfor (var note in urls){\n\t\tif (Tone.isNote(note)){\n\t\t\t//convert the note name to MIDI\n\t\t\tvar mid = Tone.Frequency(note).toMidi();\n\t\t\turlMap[mid] = urls[note];\n\t\t} else if (!isNaN(parseFloat(note))){\n\t\t\t//otherwise if it's numbers assume it's midi\n\t\t\turlMap[note] = urls[note];\n\t\t} else {\n\t\t\tthrow new Error(\"Tone.Sampler: url keys must be the note's pitch\");\n\t\t}\n\t}\n\n\t/**\n\t * The stored and loaded buffers\n\t * @type {Tone.Buffers}\n\t * @private\n\t */\n\tthis._buffers = new Tone.Buffers(urlMap, options.onload, options.baseUrl);\n\n\t/**\n\t * The object of all currently playing BufferSources\n\t * @type {Object}\n\t * @private\n\t */\n\tthis._activeSources = {};\n\n\t/**\n\t * The envelope applied to the beginning of the sample.\n\t * @type {Time}\n\t */\n\tthis.attack = options.attack;\n\n\t/**\n\t * The envelope applied to the end of the envelope.\n\t * @type {Time}\n\t */\n\tthis.release = options.release;\n\n\t/**\n\t *  The shape of the attack/release curve.\n\t *  Either \"linear\" or \"exponential\"\n\t *  @type {String}\n\t */\n\tthis.curve = options.curve;\n};\n\nTone.extend(Tone.Sampler, Tone.Instrument);\n\n/**\n * The defaults\n * @const\n * @type {Object}\n */\nTone.Sampler.defaults = {\n\t\"attack\" : 0,\n\t\"release\" : 0.1,\n\t\"onload\" : Tone.noOp,\n\t\"baseUrl\" : \"\",\n\t\"curve\" : \"exponential\"\n};\n\n/**\n * Returns the difference in steps between the given midi note at the closets sample.\n * @param  {Midi} midi\n * @return {Interval}\n * @private\n */\nTone.Sampler.prototype._findClosest = function(midi){\n\t//searches within 8 octaves of the given midi note\n\tvar MAX_INTERVAL = 96; \n\tvar interval = 0;\n\twhile (interval < MAX_INTERVAL){\n\t\t// check above and below\n\t\tif (this._buffers.has(midi + interval)){\n\t\t\treturn -interval;\n\t\t} else if (this._buffers.has(midi - interval)){\n\t\t\treturn interval;\n\t\t}\n\t\tinterval++;\n\t}\n\tthrow new Error(\"No available buffers for note: \"+midi);\n};\n\n/**\n * @param  {(Frequency|Frequency[])} notes\tThe note to play, or an array of notes.\n * @param  {Time=} time     When to play the note\n * @param  {NormalRange=} velocity The velocity to play the sample back.\n * @return {Tone.Sampler}          this\n */\nTone.Sampler.prototype.triggerAttack = function(notes, time, velocity){\n\tthis.log(\"triggerAttack\", notes, time, velocity);\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\tfor (var i = 0; i < notes.length; i++){ \n\t\tvar midi = Tone.Frequency(notes[i]).toMidi();\n\t\t// find the closest note pitch\n\t\tvar difference = this._findClosest(midi);\n\t\tvar closestNote = midi - difference;\n\t\tvar buffer = this._buffers.get(closestNote);\n\t\tvar playbackRate = Tone.intervalToFrequencyRatio(difference);\n\t\t// play that note\n\t\tvar source = new Tone.BufferSource({\n\t\t\t\"buffer\" : buffer,\n\t\t\t\"playbackRate\" : playbackRate,\n\t\t\t\"fadeIn\" : this.attack,\n\t\t\t\"fadeOut\" : this.release,\n\t\t\t\"curve\" : this.curve,\n\t\t}).connect(this.output);\n\t\tsource.start(time, 0, buffer.duration / playbackRate, velocity);\n\t\t// add it to the active sources\n\t\tif (!Tone.isArray(this._activeSources[midi])){\n\t\t\tthis._activeSources[midi] = [];\n\t\t}\n\t\tthis._activeSources[midi].push(source);\n\n\t\t//remove it when it's done\n\t\tsource.onended = function(){\n\t\t\tif (this._activeSources && this._activeSources[midi]){\n\t\t\t\tvar index = this._activeSources[midi].indexOf(source);\n\t\t\t\tif (index !== -1){\n\t\t\t\t\tthis._activeSources[midi].splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\t}\n\treturn this;\n};\n\n/**\n * @param  {(Frequency|Frequency[])} notes\tThe note to release, or an array of notes.\n * @param  {Time=} time     \tWhen to release the note.\n * @return {Tone.Sampler}\tthis\n */\nTone.Sampler.prototype.triggerRelease = function(notes, time){\n\tthis.log(\"triggerRelease\", notes, time);\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\tfor (var i = 0; i < notes.length; i++){  \n\t\tvar midi = Tone.Frequency(notes[i]).toMidi();\n\t\t// find the note\n\t\tif (this._activeSources[midi] && this._activeSources[midi].length){\n\t\t\ttime = this.toSeconds(time);\n\t\t\t//stop all the sources on that midi note\n\t\t\tthis._activeSources[midi].forEach(function(source){\n\t\t\t\tsource.stop(time);\n\t\t\t});\n\t\t\tthis._activeSources[midi] = [];\n\t\t}\n\t}\n\n\treturn this;\n};\n\n/**\n * Release all currently active notes.\n * @param  {Time=} time     \tWhen to release the notes.\n * @return {Tone.Sampler}\tthis\n */\nTone.Sampler.prototype.releaseAll = function(time){\n\ttime = this.toSeconds(time);\n\tfor (var note in this._activeSources){\n\t\tvar sources = this._activeSources[note];\n\t\twhile (sources.length){\n\t\t\tvar source = sources.shift();\n\t\t\tsource.stop(time);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.Sampler.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 1);\n\treturn this;\n};\n\n/**\n * Invoke the attack phase, then after the duration, invoke the release.\n * @param  {(Frequency|Frequency[])} notes\tThe note to play and release, or an array of notes.\n * @param  {(Time|Time[])} duration The time the note should be held\n * @param  {Time=} time     When to start the attack\n * @param  {NormalRange} [velocity=1] The velocity of the attack\n * @return {Tone.Sampler}          this\n */\nTone.Sampler.prototype.triggerAttackRelease = function(notes, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(notes, time, velocity);\n\tif (Tone.isArray(duration) && Tone.isArray(notes)){\n\t\tfor (var i = 0; i < notes.length; i++){\n\t\t\tvar d = duration[Math.min(i, duration.length - 1)];\n\t\t\tthis.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t}\n\t} else {\n\t\tthis.triggerRelease(notes, time + this.toSeconds(duration));\n\t}\n\treturn this;\n};\n\n/**\n *  Add a note to the sampler.\n *  @param  {Note|Midi}   note      The buffer's pitch.\n *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,\n *                                                 or a buffer which will be added\n *                                                 with the given name.\n *  @param  {Function=}  callback  The callback to invoke\n *                                 when the url is loaded.\n */\nTone.Sampler.prototype.add = function(note, url, callback){\n\tif (Tone.isNote(note)){\n\t\t//convert the note name to MIDI\n\t\tvar mid = Tone.Frequency(note).toMidi();\n\t\tthis._buffers.add(mid, url, callback);\n\t} else if (!isNaN(parseFloat(note))){\n\t\t//otherwise if it's numbers assume it's midi\n\t\tthis._buffers.add(note, url, callback);\n\t} else {\n\t\tthrow new Error(\"Tone.Sampler: note must be the note's pitch. Instead got \"+note);\n\t}\n};\n\n/**\n * If the buffers are loaded or not\n * @memberOf Tone.Sampler#\n * @type {Boolean}\n * @name loaded\n * @readOnly\n */\nObject.defineProperty(Tone.Sampler.prototype, \"loaded\", {\n\t\"get\" : function(){\n\t\treturn this._buffers.loaded;\n\t}\n});\n\n/**\n * Clean up\n * @return {Tone.Sampler} this\n */\nTone.Sampler.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._buffers.dispose();\n\tthis._buffers = null;\n\tfor (var midi in this._activeSources){\n\t\tthis._activeSources[midi].forEach(function(source){\n\t\t\tsource.dispose();\n\t\t});\n\t}\n\tthis._activeSources = null;\n\treturn this;\n};\n\nexport default Tone.Sampler;\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../source/Source\";\n\n/**\n *  @class  Tone.PolySynth handles voice creation and allocation for any\n *          instruments passed in as the second paramter. PolySynth is\n *          not a synthesizer by itself, it merely manages voices of\n *          one of the other types of synths, allowing any of the\n *          monophonic synthesizers to be polyphonic.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {number|Object} [polyphony=4] The number of voices to create\n *  @param {function} [voice=Tone.Synth] The constructor of the voices\n *                                            uses Tone.Synth by default.\n *  @param {...*}\tvoiceArgs\tAll additional arguments will be passed into the class constructor.\n *  @example\n * //a polysynth composed of 6 Voices of Synth\n * var synth = new Tone.PolySynth(6, Tone.Synth, {\n *   oscillator : {\n * \t\ttype : \"square\"\n * \t}\n * }).toMaster();\n * //set the attributes using the set interface\n * synth.set(\"detune\", -1200);\n * //play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n */\nTone.PolySynth = function(){\n\n\tvar options = Tone.defaults(arguments, [\"polyphony\", \"voice\"], Tone.PolySynth);\n\tTone.Instrument.call(this, options);\n\toptions = Tone.defaultArg(options, Tone.Instrument.defaults);\n\n\t//max polyphony\n\toptions.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\n\t/**\n\t *  the array of voices\n\t *  @type {Array}\n\t */\n\tthis.voices = new Array(options.polyphony);\n\tthis.assert(options.polyphony > 0, \"polyphony must be greater than 0\");\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\tthis._readOnly(\"detune\");\n\n\t//create the voices\n\tfor (var i = 0; i < options.polyphony; i++){\n\t\tvar v = new options.voice(arguments[2], arguments[3]);\n\t\tif (!(v instanceof Tone.Monophonic)){\n\t\t\tthrow new Error(\"Synth constructor must be instance of Tone.Monophonic\");\n\t\t}\n\t\tthis.voices[i] = v;\n\t\tv.index = i;\n\t\tv.connect(this.output);\n\t\tif (v.hasOwnProperty(\"detune\")){\n\t\t\tthis.detune.connect(v.detune);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.PolySynth, Tone.Instrument);\n\n/**\n *  the defaults\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.PolySynth.defaults = {\n\t\"polyphony\" : 4,\n\t\"volume\" : 0,\n\t\"detune\" : 0,\n\t\"voice\" : Tone.Synth\n};\n\n/**\n *  Get the closest available voice, that is the\n *  one that is either the closest to the note,\n *  or has the lowest envelope value.\n *  @param {Time} time return the voice that has the lowest energy at this time.\n *  @param  {Note}  note  if there is a voice with this note, that should be returned\n *  @return  {Tone.Monophonic}  A synth voice.\n *  @private\n */\nTone.PolySynth.prototype._getClosestVoice = function(time, note){\n\t//play the note which has the same frequency, if that exists\n\tvar sameNote = this.voices.find(function(voice){\n\t\t//break if it's within a small epsion of the voice's frequency\n\t\tif (Math.abs(voice.frequency.getValueAtTime(time) - Tone.Frequency(note)) < 1e-4 && \n\t\t\t//and that note is currently active\n\t\t\tvoice.getLevelAtTime(time) > 1e-5){\n\t\t\treturn voice;\n\t\t} \n\t});\n\tif (sameNote){\n\t\treturn sameNote;\n\t}\n\n\tvar sortedVoices = this.voices.slice().sort(function(a, b){\n\t\t//check that it's not scheduled in the future\n\t\tvar aLevel = a.getLevelAtTime(time + this.blockTime);\n\t\tvar bLevel = b.getLevelAtTime(time + this.blockTime);\n\n\t\tvar silenceThresh = 1e-5;\n\t\tif (aLevel < silenceThresh){\n\t\t\taLevel = 0;\n\t\t}\n\t\tif (bLevel < silenceThresh){\n\t\t\tbLevel = 0;\n\t\t}\n\t\treturn aLevel - bLevel;\n\t}.bind(this));\n\n\treturn sortedVoices[0];\n};\n\n/**\n *  Trigger the attack portion of the note\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} [time=now]  The start time of the note.\n *  @param {number} [velocity=1] The velocity of the note.\n *  @returns {Tone.PolySynth} this\n *  @example\n * //trigger a chord immediately with a velocity of 0.2\n * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n */\nTone.PolySynth.prototype.triggerAttack = function(notes, time, velocity){\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\ttime = this.toSeconds(time);\n\tnotes.forEach(function(note){\n\t\tvar voice = this._getClosestVoice(time, note);\n\t\tvoice.triggerAttack(note, time, velocity);\n\t\tthis.log(\"triggerAttack\", voice.index, note);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Trigger the release of the note. Unlike monophonic instruments,\n *  a note (or array of notes) needs to be passed in as the first argument.\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} [time=now]  When the release will be triggered.\n *  @returns {Tone.PolySynth} this\n *  @example\n * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n */\nTone.PolySynth.prototype.triggerRelease = function(notes, time){\n\tif (!Array.isArray(notes)){\n\t\tnotes = [notes];\n\t}\n\ttime = this.toSeconds(time);\n\tnotes.forEach(function(note){\n\t\tvar voice = this._getClosestVoice(time, note);\n\t\tthis.log(\"triggerRelease\", voice.index, note);\n\t\tvoice.triggerRelease(time);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n *  Trigger the attack and release after the specified duration\n *\n *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n *                                  Frequency or an array of frequencies.\n *  @param  {Time} duration the duration of the note\n *  @param  {Time} [time=now]     if no time is given, defaults to now\n *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n *  @returns {Tone.PolySynth} this\n *  @example\n * //trigger a chord for a duration of a half note\n * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n *  @example\n * //can pass in an array of durations as well\n * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n */\nTone.PolySynth.prototype.triggerAttackRelease = function(notes, duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.triggerAttack(notes, time, velocity);\n\tif (Tone.isArray(duration) && Tone.isArray(notes)){\n\t\tfor (var i = 0; i < notes.length; i++){\n\t\t\tvar d = duration[Math.min(i, duration.length - 1)];\n\t\t\tthis.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t}\n\t} else {\n\t\tthis.triggerRelease(notes, time + this.toSeconds(duration));\n\t}\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.PolySynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 1);\n\tthis._syncMethod(\"triggerRelease\", 1);\n\treturn this;\n};\n\n/**\n *  Set a member/attribute of the voices.\n *  @param {Object|string} params\n *  @param {number=} value\n *  @param {Time=} rampTime\n *  @returns {Tone.PolySynth} this\n *  @example\n * poly.set({\n * \t\"filter\" : {\n * \t\t\"type\" : \"highpass\"\n * \t},\n * \t\"envelope\" : {\n * \t\t\"attack\" : 0.25\n * \t}\n * });\n */\nTone.PolySynth.prototype.set = function(params, value, rampTime){\n\tfor (var i = 0; i < this.voices.length; i++){\n\t\tthis.voices[i].set(params, value, rampTime);\n\t}\n\treturn this;\n};\n\n/**\n *  Get the synth's attributes. Given no arguments get\n *  will return all available object properties and their corresponding\n *  values. Pass in a single attribute to retrieve or an array\n *  of attributes. The attribute strings can also include a \".\"\n *  to access deeper properties.\n *  @param {Array=} params the parameters to get, otherwise will return\n *  \t\t\t\t\t   all available.\n */\nTone.PolySynth.prototype.get = function(params){\n\treturn this.voices[0].get(params);\n};\n\n/**\n *  Trigger the release portion of all the currently active voices.\n *  @param {Time} [time=now] When the notes should be released.\n *  @return {Tone.PolySynth} this\n */\nTone.PolySynth.prototype.releaseAll = function(time){\n\ttime = this.toSeconds(time);\n\tthis.voices.forEach(function(voice){\n\t\tvoice.triggerRelease(time);\n\t});\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.PolySynth} this\n */\nTone.PolySynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis.voices.forEach(function(voice){\n\t\tvoice.dispose();\n\t});\n\tthis._writable(\"detune\");\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.voices = null;\n\treturn this;\n};\n\n/**\n *  The maximum number of notes that can be allocated\n *  to a polysynth.\n *  @type  {Number}\n *  @static\n */\nTone.PolySynth.MAX_POLYPHONY = 20;\n\nexport default Tone.PolySynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../source/Noise\";\nimport \"../component/LowpassCombFilter\";\n\n/**\n *  @class Karplus-String string synthesis. Often out of tune.\n *         Will change when the AudioWorkerNode is available across\n *         browsers.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] see the defaults\n *  @example\n * var plucky = new Tone.PluckSynth().toMaster();\n * plucky.triggerAttack(\"C4\");\n */\nTone.PluckSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.PluckSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  @type {Tone.Noise}\n\t *  @private\n\t */\n\tthis._noise = new Tone.Noise(\"pink\");\n\n\t/**\n\t *  The amount of noise at the attack.\n\t *  Nominal range of [0.1, 20]\n\t *  @type {number}\n\t */\n\tthis.attackNoise = options.attackNoise;\n\n\t/**\n\t *  the LFCF\n\t *  @type {Tone.LowpassCombFilter}\n\t *  @private\n\t */\n\tthis._lfcf = new Tone.LowpassCombFilter({\n\t\t\"resonance\" : options.resonance,\n\t\t\"dampening\" : options.dampening\n\t});\n\n\t/**\n\t *  The resonance control.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.resonance = this._lfcf.resonance;\n\n\t/**\n\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = this._lfcf.dampening;\n\n\t//connections\n\tthis._noise.connect(this._lfcf);\n\tthis._lfcf.connect(this.output);\n\tthis._readOnly([\"resonance\", \"dampening\"]);\n};\n\nTone.extend(Tone.PluckSynth, Tone.Instrument);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.PluckSynth.defaults = {\n\t\"attackNoise\" : 1,\n\t\"dampening\" : 4000,\n\t\"resonance\" : 0.7\n};\n\n/**\n *  Trigger the note.\n *  @param {Frequency} note The note to trigger.\n *  @param {Time} [time=now] When the note should be triggered.\n *  @returns {Tone.PluckSynth} this\n */\nTone.PluckSynth.prototype.triggerAttack = function(note, time){\n\tnote = this.toFrequency(note);\n\ttime = this.toSeconds(time);\n\tvar delayAmount = 1 / note;\n\tthis._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\tthis._noise.start(time);\n\tthis._noise.stop(time + delayAmount * this.attackNoise);\n\treturn this;\n};\n\n/**\n *\tMake this method which belongs to the parent class private since\n *\tPluckSynth does not have any 'release' method.\n * \t@memberOf Tone.PluckSynth#\n *  @function\n *  @private\n *  @name triggerAttackRelease\n */\n\n/**\n *  Clean up.\n *  @returns {Tone.PluckSynth} this\n */\nTone.PluckSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._noise.dispose();\n\tthis._lfcf.dispose();\n\tthis._noise = null;\n\tthis._lfcf = null;\n\tthis._writable([\"resonance\", \"dampening\"]);\n\tthis.dampening = null;\n\tthis.resonance = null;\n\treturn this;\n};\n\nexport default Tone.PluckSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../source/Noise\";\nimport \"../signal/Signal\";\nimport \"../component/Filter\";\nimport \"../instrument/Instrument\";\n\n/**\n *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter),\n *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n *          of the noise and the other is controls the cutoff frequency of the filter.\n *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n * @example\n * var noiseSynth = new Tone.NoiseSynth().toMaster();\n * noiseSynth.triggerAttackRelease(\"8n\");\n */\nTone.NoiseSynth = function(options){\n\n\t//get the defaults\n\toptions = Tone.defaultArg(options, Tone.NoiseSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The noise source.\n\t *  @type {Tone.Noise}\n\t *  @example\n\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t */\n\tthis.noise = new Tone.Noise(options.noise);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t//connect the noise to the output\n\tthis.noise.chain(this.envelope, this.output);\n\tthis._readOnly([\"noise\", \"envelope\"]);\n};\n\nTone.extend(Tone.NoiseSynth, Tone.Instrument);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.NoiseSynth.defaults = {\n\t\"noise\" : {\n\t\t\"type\" : \"white\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.005,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.0,\n\t}\n};\n\n/**\n *  Start the attack portion of the envelopes. Unlike other\n *  instruments, Tone.NoiseSynth doesn't have a note.\n *  @param {Time} [time=now] the time the attack should start\n *  @param {number} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.NoiseSynth} this\n *  @example\n * noiseSynth.triggerAttack();\n */\nTone.NoiseSynth.prototype.triggerAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis.envelope.triggerAttack(time, velocity);\n\t//start the noise\n\tthis.noise.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.noise.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  Start the release portion of the envelopes.\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.noise.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.NoiseSynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 0);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n *  Trigger the attack and then the release.\n *  @param  {Time} duration the duration of the note\n *  @param  {Time} [time=now]     the time of the attack\n *  @param  {number} [velocity=1] the velocity\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.NoiseSynth} this\n */\nTone.NoiseSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._writable([\"noise\", \"envelope\"]);\n\tthis.noise.dispose();\n\tthis.noise = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\treturn this;\n};\n\nexport default Tone.NoiseSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Instrument\";\nimport \"../source/FMOscillator\";\nimport \"../component/Filter\";\nimport \"../component/FrequencyEnvelope\";\nimport \"../component/AmplitudeEnvelope\";\nimport \"../core/Gain\";\nimport \"../signal/Scale\";\nimport \"../signal/Multiply\";\n\n/**\n *  Inharmonic ratio of frequencies based on the Roland TR-808\n *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n *  @private\n *  @static\n *  @type {Array}\n */\nvar inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];\n\n/**\n *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n *          and amplitude envelope which is good for making metalophone sounds. Based\n *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n *          Inspiration from [Sound on Sound](https://web.archive.org/web/20160610143924/https://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] The options availble for the synth\n *                             see defaults below\n */\nTone.MetalSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.MetalSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The frequency of the cymbal\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The array of FMOscillators\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._oscillators = [];\n\n\t/**\n\t *  The frequency multipliers\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._freqMultipliers = [];\n\n\t/**\n\t *  The amplitude for the body\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitue = new Tone.Gain(0).connect(this.output);\n\n\t/**\n\t *  highpass the output\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._highpass = new Tone.Filter({\n\t\t\"type\" : \"highpass\",\n\t\t\"Q\" : -3.0102999566398125\n\t}).connect(this._amplitue);\n\n\t/**\n\t *  The number of octaves the highpass\n\t *  filter frequency ramps\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  Scale the body envelope\n\t *  for the bandpass\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\n\t/**\n\t *  The envelope which is connected both to the\n\t *  amplitude and highpass filter's cutoff frequency\n\t *  @type  {Tone.Envelope}\n\t */\n\tthis.envelope = new Tone.Envelope({\n\t\t\"attack\" : options.envelope.attack,\n\t\t\"attackCurve\" : \"linear\",\n\t\t\"decay\" : options.envelope.decay,\n\t\t\"sustain\" : 0,\n\t\t\"release\" : options.envelope.release,\n\t}).chain(this._filterFreqScaler, this._highpass.frequency);\n\tthis.envelope.connect(this._amplitue.gain);\n\n\tfor (var i = 0; i < inharmRatios.length; i++){\n\t\tvar osc = new Tone.FMOscillator({\n\t\t\t\"type\" : \"square\",\n\t\t\t\"modulationType\" : \"square\",\n\t\t\t\"harmonicity\" : options.harmonicity,\n\t\t\t\"modulationIndex\" : options.modulationIndex\n\t\t});\n\t\tosc.connect(this._highpass);\n\t\tthis._oscillators[i] = osc;\n\n\t\tvar mult = new Tone.Multiply(inharmRatios[i]);\n\t\tthis._freqMultipliers[i] = mult;\n\t\tthis.frequency.chain(mult, osc.frequency);\n\t}\n\n\t//set the octaves\n\tthis.octaves = options.octaves;\n\n};\n\nTone.extend(Tone.MetalSynth, Tone.Instrument);\n\n/**\n *  default values\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.MetalSynth.defaults = {\n\t\"frequency\" : 200,\n\t\"envelope\" : {\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 1.4,\n\t\t\"release\" : 0.2\n\t},\n\t\"harmonicity\" : 5.1,\n\t\"modulationIndex\" : 32,\n\t\"resonance\" : 4000,\n\t\"octaves\" : 1.5\n};\n\n/**\n *  Trigger the attack.\n *  @param  {Time}  time      When the attack should be triggered.\n *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerAttack = function(time, vel){\n\ttime = this.toSeconds(time);\n\tvel = Tone.defaultArg(vel, 1);\n\tthis.envelope.triggerAttack(time, vel);\n\tthis._oscillators.forEach(function(osc){\n\t\tosc.start(time);\n\t});\n\t//if the sustain is 0, stop the oscillator as well\n\tif (this.envelope.sustain === 0){\n\t\tthis._oscillators.forEach(function(osc){\n\t\t\tosc.stop(time + this.envelope.attack + this.envelope.decay);\n\t\t}.bind(this));\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the release of the envelope.\n *  @param  {Time}  time      When the release should be triggered.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis._oscillators.forEach(function(osc){\n\t\tosc.stop(time + this.envelope.release);\n\t}.bind(this));\n\treturn this;\n};\n\n/**\n * Sync the instrument to the Transport. All subsequent calls of\n * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n * will be scheduled along the transport.\n * @example\n * synth.sync()\n * //schedule 3 notes when the transport first starts\n * synth.triggerAttackRelease('8n', 0)\n * synth.triggerAttackRelease('8n', '8n')\n * synth.triggerAttackRelease('8n', '4n')\n * //start the transport to hear the notes\n * Transport.start()\n * @returns {Tone.Instrument} this\n */\nTone.MetalSynth.prototype.sync = function(){\n\tthis._syncMethod(\"triggerAttack\", 0);\n\tthis._syncMethod(\"triggerRelease\", 0);\n\treturn this;\n};\n\n/**\n *  Trigger the attack and release of the envelope after the given\n *  duration.\n *  @param  {Time}  duration  The duration before triggering the release\n *  @param  {Time}  time      When the attack should be triggered.\n *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.\n *  @return  {Tone.MetalSynth}  this\n */\nTone.MetalSynth.prototype.triggerAttackRelease = function(duration, time, velocity){\n\ttime = this.toSeconds(time);\n\tduration = this.toSeconds(duration);\n\tthis.triggerAttack(time, velocity);\n\tthis.triggerRelease(time + duration);\n\treturn this;\n};\n\n/**\n *  The modulationIndex of the oscillators which make up the source.\n *  see Tone.FMOscillator.modulationIndex\n *  @memberOf Tone.MetalSynth#\n *  @type {Positive}\n *  @name  modulationIndex\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"modulationIndex\", {\n\tget : function(){\n\t\treturn this._oscillators[0].modulationIndex.value;\n\t},\n\tset : function(val){\n\t\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\t\tthis._oscillators[i].modulationIndex.value = val;\n\t\t}\n\t}\n});\n\n/**\n *  The harmonicity of the oscillators which make up the source.\n *  see Tone.FMOscillator.harmonicity\n *  @memberOf Tone.MetalSynth#\n *  @type {Positive}\n *  @name  harmonicity\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"harmonicity\", {\n\tget : function(){\n\t\treturn this._oscillators[0].harmonicity.value;\n\t},\n\tset : function(val){\n\t\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\t\tthis._oscillators[i].harmonicity.value = val;\n\t\t}\n\t}\n});\n\n/**\n *  The frequency of the highpass filter attached to the envelope\n *  @memberOf Tone.MetalSynth#\n *  @type {Frequency}\n *  @name  resonance\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"resonance\", {\n\tget : function(){\n\t\treturn this._filterFreqScaler.min;\n\t},\n\tset : function(val){\n\t\tthis._filterFreqScaler.min = val;\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n *  The number of octaves above the \"resonance\" frequency\n *  that the filter ramps during the attack/decay envelope\n *  @memberOf Tone.MetalSynth#\n *  @type {Number}\n *  @name  octaves\n */\nObject.defineProperty(Tone.MetalSynth.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octs){\n\t\tthis._octaves = octs;\n\t\tthis._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t}\n});\n\n/**\n *  Clean up\n *  @returns {Tone.MetalSynth} this\n */\nTone.MetalSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\tthis._oscillators[i].dispose();\n\t\tthis._freqMultipliers[i].dispose();\n\t}\n\tthis._oscillators = null;\n\tthis._freqMultipliers = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._filterFreqScaler.dispose();\n\tthis._filterFreqScaler = null;\n\tthis._amplitue.dispose();\n\tthis._amplitue = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\tthis._highpass.dispose();\n\tthis._highpass = null;\n};\n\nexport default Tone.MetalSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../source/OmniOscillator\";\nimport \"../instrument/Instrument\";\nimport \"../component/AmplitudeEnvelope\";\n\n/**\n *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n *          with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n *          quality of the sound comes from the frequency envelope applied\n *          during Tone.MembraneSynth.triggerAttack(note). The frequency envelope\n *          starts at <code>note * .octaves</code> and ramps to <code>note</code>\n *          over the duration of <code>.pitchDecay</code>.\n *\n *  @constructor\n *  @extends {Tone.Instrument}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var synth = new Tone.MembraneSynth().toMaster();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n */\nTone.MembraneSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.MembraneSynth.defaults);\n\tTone.Instrument.call(this, options);\n\n\t/**\n\t *  The oscillator.\n\t *  @type {Tone.OmniOscillator}\n\t */\n\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t/**\n\t *  The amplitude envelope.\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t/**\n\t *  The number of octaves the pitch envelope ramps.\n\t *  @type {Positive}\n\t */\n\tthis.octaves = options.octaves;\n\n\t/**\n\t *  The amount of time the frequency envelope takes.\n\t *  @type {Time}\n\t */\n\tthis.pitchDecay = options.pitchDecay;\n\n\tthis.oscillator.chain(this.envelope, this.output);\n\tthis._readOnly([\"oscillator\", \"envelope\"]);\n};\n\nTone.extend(Tone.MembraneSynth, Tone.Instrument);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.MembraneSynth.defaults = {\n\t\"pitchDecay\" : 0.05,\n\t\"octaves\" : 10,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\",\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 0.4,\n\t\t\"sustain\" : 0.01,\n\t\t\"release\" : 1.4,\n\t\t\"attackCurve\" : \"exponential\"\n\t}\n};\n\n/**\n *  Trigger the note at the given time with the given velocity.\n *\n *  @param  {Frequency} note     the note\n *  @param  {Time} [time=now]     the time, if not given is now\n *  @param  {number} [velocity=1] velocity defaults to 1\n *  @returns {Tone.MembraneSynth} this\n *  @example\n *  kick.triggerAttack(60);\n */\nTone.MembraneSynth.prototype.triggerAttack = function(note, time, velocity){\n\ttime = this.toSeconds(time);\n\tnote = this.toFrequency(note);\n\tvar maxNote = note * this.octaves;\n\tthis.oscillator.frequency.setValueAtTime(maxNote, time);\n\tthis.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\tthis.envelope.triggerAttack(time, velocity);\n\tthis.oscillator.start(time);\n\tif (this.envelope.sustain === 0){\n\t\tthis.oscillator.stop(time + this.envelope.attack + this.envelope.decay);\n\t}\n\treturn this;\n};\n\n/**\n *  Trigger the release portion of the note.\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @returns {Tone.MembraneSynth} this\n */\nTone.MembraneSynth.prototype.triggerRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis.envelope.triggerRelease(time);\n\tthis.oscillator.stop(time + this.envelope.release);\n\treturn this;\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MembraneSynth} this\n */\nTone.MembraneSynth.prototype.dispose = function(){\n\tTone.Instrument.prototype.dispose.call(this);\n\tthis._writable([\"oscillator\", \"envelope\"]);\n\tthis.oscillator.dispose();\n\tthis.oscillator = null;\n\tthis.envelope.dispose();\n\tthis.envelope = null;\n\treturn this;\n};\n\nexport default Tone.MembraneSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\n\n/**\n *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n *          the frequency of a second Tone.Synth. A lot of spectral content\n *          can be explored using the modulationIndex parameter. Read more about\n *          frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var fmSynth = new Tone.FMSynth().toMaster();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n */\nTone.FMSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.FMSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The carrier voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Synth(options.carrier);\n\tthis._carrier.volume.value = -10;\n\n\t/**\n\t *  The carrier's oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.oscillator = this._carrier.oscillator;\n\n\t/**\n\t *  The carrier's envelope\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.envelope = this._carrier.envelope.set(options.envelope);\n\n\t/**\n\t *  The modulator voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Synth(options.modulator);\n\tthis._modulator.volume.value = -10;\n\n\t/**\n\t *  The modulator's oscillator which is applied\n\t *  to the amplitude of the oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulation = this._modulator.oscillator.set(options.modulation);\n\n\t/**\n\t *  The modulator's envelope\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\n\t/**\n\t *  The frequency control.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  The modulation index which essentially the depth or amount of the modulation. It is the\n\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t *  modulating signal (ma) -- as in ma/mf.\n\t *\t@type {Positive}\n\t *\t@signal\n\t */\n\tthis.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\tthis.modulationIndex.units = Tone.Type.Positive;\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain(0);\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\tthis._modulator.connect(this._modulationNode.gain);\n\tthis._modulationNode.connect(this._carrier.frequency);\n\tthis._carrier.connect(this.output);\n\tthis._readOnly([\"frequency\", \"harmonicity\", \"modulationIndex\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n};\n\nTone.extend(Tone.FMSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.FMSynth.defaults = {\n\t\"harmonicity\" : 3,\n\t\"modulationIndex\" : 10,\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.01,\n\t\t\"decay\" : 0.01,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t},\n\t\"modulation\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"modulationEnvelope\" : {\n\t\t\"attack\" : 0.5,\n\t\t\"decay\" : 0.0,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n * \ttrigger the attack portion of the note\n *\n *  @param  {Time} [time=now] the time the note will occur\n *  @param {number} [velocity=1] the velocity of the note\n *  @returns {Tone.FMSynth} this\n *  @private\n */\nTone.FMSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis._carrier._triggerEnvelopeAttack(time, velocity);\n\tthis._modulator._triggerEnvelopeAttack(time);\n\treturn this;\n};\n\n/**\n *  trigger the release portion of the note\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @returns {Tone.FMSynth} this\n *  @private\n */\nTone.FMSynth.prototype._triggerEnvelopeRelease = function(time){\n\ttime = this.toSeconds(time);\n\tthis._carrier._triggerEnvelopeRelease(time);\n\tthis._modulator._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.FMSynth} this\n */\nTone.FMSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"harmonicity\", \"modulationIndex\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.modulationIndex.dispose();\n\tthis.modulationIndex = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.oscillator = null;\n\tthis.envelope = null;\n\tthis.modulationEnvelope = null;\n\tthis.modulation = null;\n\treturn this;\n};\n\nexport default Tone.FMSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/MonoSynth\";\nimport \"../component/LFO\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\nimport \"../core/Param\";\n\n/**\n *  @class  Tone.DuoSynth is a monophonic synth composed of two\n *          MonoSynths run in parallel with control over the\n *          frequency ratio between the two voices and vibrato effect.\n *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                          see defaults below\n *  @example\n * var duoSynth = new Tone.DuoSynth().toMaster();\n * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n */\nTone.DuoSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.DuoSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  the first voice\n\t *  @type {Tone.MonoSynth}\n\t */\n\tthis.voice0 = new Tone.MonoSynth(options.voice0);\n\tthis.voice0.volume.value = -10;\n\n\t/**\n\t *  the second voice\n\t *  @type {Tone.MonoSynth}\n\t */\n\tthis.voice1 = new Tone.MonoSynth(options.voice1);\n\tthis.voice1.volume.value = -10;\n\n\t/**\n\t *  The vibrato LFO.\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\tthis._vibrato.start();\n\n\t/**\n\t * the vibrato frequency\n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.vibratoRate = this._vibrato.frequency;\n\n\t/**\n\t *  the vibrato gain\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\n\t/**\n\t * The amount of vibrato\n\t * @type {Positive}\n\t * @signal\n\t */\n\tthis.vibratoAmount = this._vibratoGain.gain;\n\n\t/**\n\t *  the frequency control\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * duoSynth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this.voice0.frequency);\n\tthis.frequency.chain(this.harmonicity, this.voice1.frequency);\n\tthis._vibrato.connect(this._vibratoGain);\n\tthis._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\tthis.voice0.connect(this.output);\n\tthis.voice1.connect(this.output);\n\tthis._readOnly([\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n};\n\nTone.extend(Tone.DuoSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.DuoSynth.defaults = {\n\t\"vibratoAmount\" : 0.5,\n\t\"vibratoRate\" : 5,\n\t\"harmonicity\" : 1.5,\n\t\"voice0\" : {\n\t\t\"volume\" : -10,\n\t\t\"portamento\" : 0,\n\t\t\"oscillator\" : {\n\t\t\t\"type\" : \"sine\"\n\t\t},\n\t\t\"filterEnvelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t},\n\t\t\"envelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t}\n\t},\n\t\"voice1\" : {\n\t\t\"volume\" : -10,\n\t\t\"portamento\" : 0,\n\t\t\"oscillator\" : {\n\t\t\t\"type\" : \"sine\"\n\t\t},\n\t\t\"filterEnvelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t},\n\t\t\"envelope\" : {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.0,\n\t\t\t\"sustain\" : 1,\n\t\t\t\"release\" : 0.5\n\t\t}\n\t}\n};\n\n/**\n *  start the attack portion of the envelopes\n *\n *  @param {Time} [time=now] the time the attack should start\n *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n *  @returns {Tone.DuoSynth} this\n *  @private\n */\nTone.DuoSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\ttime = this.toSeconds(time);\n\tthis.voice0._triggerEnvelopeAttack(time, velocity);\n\tthis.voice1._triggerEnvelopeAttack(time, velocity);\n\treturn this;\n};\n\n/**\n *  start the release portion of the envelopes\n *\n *  @param {Time} [time=now] the time the release should start\n *  @returns {Tone.DuoSynth} this\n *  @private\n */\nTone.DuoSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis.voice0._triggerEnvelopeRelease(time);\n\tthis.voice1._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  Get the level of the output at the given time. Measures\n *  the envelope(s) value at the time. \n *  @param {Time} time The time to query the envelope value\n *  @return {NormalRange} The output level between 0-1\n */\nTone.DuoSynth.prototype.getLevelAtTime = function(time){\n\treturn (this.voice0.getLevelAtTime(time) + this.voice1.getLevelAtTime(time))/2;\n};\n\n/**\n *  clean up\n *  @returns {Tone.DuoSynth} this\n */\nTone.DuoSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n\tthis.voice0.dispose();\n\tthis.voice0 = null;\n\tthis.voice1.dispose();\n\tthis.voice1 = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis._vibratoGain.dispose();\n\tthis._vibratoGain = null;\n\tthis._vibrato = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis.vibratoAmount.dispose();\n\tthis.vibratoAmount = null;\n\tthis.vibratoRate = null;\n\treturn this;\n};\n\nexport default Tone.DuoSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../instrument/Synth\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../instrument/Monophonic\";\nimport \"../signal/AudioToGain\";\nimport \"../core/Gain\";\n\n/**\n *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n *          the two signals) affects the timbre of the output signal greatly.\n *          Read more about Amplitude Modulation Synthesis on\n *          [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n *\n *  @constructor\n *  @extends {Tone.Monophonic}\n *  @param {Object} [options] the options available for the synth\n *                            see defaults below\n *  @example\n * var synth = new Tone.AMSynth().toMaster();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n */\nTone.AMSynth = function(options){\n\n\toptions = Tone.defaultArg(options, Tone.AMSynth.defaults);\n\tTone.Monophonic.call(this, options);\n\n\t/**\n\t *  The carrier voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._carrier = new Tone.Synth();\n\tthis._carrier.volume.value = -10;\n\n\t/**\n\t *  The carrier's oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.oscillator = this._carrier.oscillator.set(options.oscillator);\n\n\t/**\n\t *  The carrier's envelope\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.envelope = this._carrier.envelope.set(options.envelope);\n\n\t/**\n\t *  The modulator voice.\n\t *  @type {Tone.Synth}\n\t *  @private\n\t */\n\tthis._modulator = new Tone.Synth();\n\tthis._modulator.volume.value = -10;\n\n\t/**\n\t *  The modulator's oscillator which is applied\n\t *  to the amplitude of the oscillator\n\t *  @type {Tone.Oscillator}\n\t */\n\tthis.modulation = this._modulator.oscillator.set(options.modulation);\n\n\t/**\n\t *  The modulator's envelope\n\t *  @type {Tone.AmplitudeEnvelope}\n\t */\n\tthis.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\n\t/**\n\t *  The frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\n\t/**\n\t *  The detune in cents\n\t *  @type {Cents}\n\t *  @signal\n\t */\n\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t/**\n\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t *  1 is no change. Harmonicity = 2 means a change of an octave.\n\t *  @type {Positive}\n\t *  @signal\n\t *  @example\n\t * //pitch voice1 an octave below voice0\n\t * synth.harmonicity.value = 0.5;\n\t */\n\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t/**\n\t *  convert the -1,1 output to 0,1\n\t *  @type {Tone.AudioToGain}\n\t *  @private\n\t */\n\tthis._modulationScale = new Tone.AudioToGain();\n\n\t/**\n\t *  the node where the modulation happens\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._modulationNode = new Tone.Gain();\n\n\t//control the two voices frequency\n\tthis.frequency.connect(this._carrier.frequency);\n\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\tthis.detune.fan(this._carrier.detune, this._modulator.detune);\n\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\tthis._carrier.chain(this._modulationNode, this.output);\n\tthis._readOnly([\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n};\n\nTone.extend(Tone.AMSynth, Tone.Monophonic);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.AMSynth.defaults = {\n\t\"harmonicity\" : 3,\n\t\"detune\" : 0,\n\t\"oscillator\" : {\n\t\t\"type\" : \"sine\"\n\t},\n\t\"envelope\" : {\n\t\t\"attack\" : 0.01,\n\t\t\"decay\" : 0.01,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t},\n\t\"modulation\" : {\n\t\t\"type\" : \"square\"\n\t},\n\t\"modulationEnvelope\" : {\n\t\t\"attack\" : 0.5,\n\t\t\"decay\" : 0.0,\n\t\t\"sustain\" : 1,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n *  trigger the attack portion of the note\n *\n *  @param  {Time} [time=now] the time the note will occur\n *  @param {NormalRange} [velocity=1] the velocity of the note\n *  @private\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\t//the port glide\n\ttime = this.toSeconds(time);\n\t//the envelopes\n\tthis._carrier._triggerEnvelopeAttack(time, velocity);\n\tthis._modulator._triggerEnvelopeAttack(time);\n\treturn this;\n};\n\n/**\n *  trigger the release portion of the note\n *\n *  @param  {Time} [time=now] the time the note will release\n *  @private\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype._triggerEnvelopeRelease = function(time){\n\tthis._carrier._triggerEnvelopeRelease(time);\n\tthis._modulator._triggerEnvelopeRelease(time);\n\treturn this;\n};\n\n/**\n *  clean up\n *  @returns {Tone.AMSynth} this\n */\nTone.AMSynth.prototype.dispose = function(){\n\tTone.Monophonic.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n\tthis._carrier.dispose();\n\tthis._carrier = null;\n\tthis._modulator.dispose();\n\tthis._modulator = null;\n\tthis.frequency.dispose();\n\tthis.frequency = null;\n\tthis.detune.dispose();\n\tthis.detune = null;\n\tthis.harmonicity.dispose();\n\tthis.harmonicity = null;\n\tthis._modulationScale.dispose();\n\tthis._modulationScale = null;\n\tthis._modulationNode.dispose();\n\tthis._modulationNode = null;\n\tthis.oscillator = null;\n\tthis.envelope = null;\n\tthis.modulationEnvelope = null;\n\tthis.modulation = null;\n\treturn this;\n};\n\nexport default Tone.AMSynth;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Part\";\nimport \"../core/Transport\";\n\n/**\n *  @class A sequence is an alternate notation of a part. Instead\n *         of passing in an array of [time, event] pairs, pass\n *         in an array of events which will be spaced at the\n *         given subdivision. Sub-arrays will subdivide that beat\n *         by the number of items are in the array.\n *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n *  @param  {Function}  callback  The callback to invoke with every note\n *  @param  {Array}    events  The sequence\n *  @param  {Time} subdivision  The subdivision between which events are placed.\n *  @extends {Tone.Part}\n *  @example\n * var seq = new Tone.Sequence(function(time, note){\n * \tconsole.log(note);\n * //straight quater notes\n * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n *  @example\n * var seq = new Tone.Sequence(function(time, note){\n * \tconsole.log(note);\n * //subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n */\nTone.Sequence = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"events\", \"subdivision\"], Tone.Sequence);\n\n\t//remove the events\n\tvar events = options.events;\n\tdelete options.events;\n\n\tTone.Part.call(this, options);\n\n\t/**\n\t *  The subdivison of each note\n\t *  @type  {Ticks}\n\t *  @private\n\t */\n\tthis._subdivision = this.toTicks(options.subdivision);\n\n\t//if no time was passed in, the loop end is the end of the cycle\n\tif (Tone.isUndef(options.loopEnd) && Tone.isDefined(events)){\n\t\tthis._loopEnd = (events.length * this._subdivision);\n\t}\n\t//defaults to looping\n\tthis._loop = true;\n\n\t//add all of the events\n\tif (Tone.isDefined(events)){\n\t\tfor (var i = 0; i < events.length; i++){\n\t\t\tthis.add(i, events[i]);\n\t\t}\n\t}\n};\n\nTone.extend(Tone.Sequence, Tone.Part);\n\n/**\n *  The default values.\n *  @type  {Object}\n */\nTone.Sequence.defaults = {\n\t\"subdivision\" : \"4n\",\n};\n\n/**\n *  The subdivision of the sequence. This can only be\n *  set in the constructor. The subdivision is the\n *  interval between successive steps.\n *  @type {Time}\n *  @memberOf Tone.Sequence#\n *  @name subdivision\n *  @readOnly\n */\nObject.defineProperty(Tone.Sequence.prototype, \"subdivision\", {\n\tget : function(){\n\t\treturn Tone.Ticks(this._subdivision).toSeconds();\n\t}\n});\n\n/**\n *  Get/Set an index of the sequence. If the index contains a subarray,\n *  a Tone.Sequence representing that sub-array will be returned.\n *  @example\n * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n * sequence.at(0)// => returns \"E4\"\n * //set a value\n * sequence.at(0, \"G3\");\n * //get a nested sequence\n * sequence.at(3).at(1)// => returns \"Bb3\"\n * @param {Positive} index The index to get or set\n * @param {*} value Optionally pass in the value to set at the given index.\n */\nTone.Sequence.prototype.at = function(index, value){\n\t//if the value is an array,\n\tif (Tone.isArray(value)){\n\t\t//remove the current event at that index\n\t\tthis.remove(index);\n\t}\n\t//call the parent's method\n\treturn Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n};\n\n/**\n *  Add an event at an index, if there's already something\n *  at that index, overwrite it. If `value` is an array,\n *  it will be parsed as a subsequence.\n *  @param {Number} index The index to add the event to\n *  @param {*} value The value to add at that index\n *  @returns {Tone.Sequence} this\n */\nTone.Sequence.prototype.add = function(index, value){\n\tif (value === null){\n\t\treturn this;\n\t}\n\tif (Tone.isArray(value)){\n\t\t//make a subsequence and add that to the sequence\n\t\tvar subSubdivision = Math.round(this._subdivision / value.length);\n\t\tvalue = new Tone.Sequence(this._tick.bind(this), value, Tone.Ticks(subSubdivision));\n\t}\n\tTone.Part.prototype.add.call(this, this._indexTime(index), value);\n\treturn this;\n};\n\n/**\n *  Remove a value from the sequence by index\n *  @param {Number} index The index of the event to remove\n *  @returns {Tone.Sequence} this\n */\nTone.Sequence.prototype.remove = function(index, value){\n\tTone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\treturn this;\n};\n\n/**\n *  Get the time of the index given the Sequence's subdivision\n *  @param  {Number}  index\n *  @return  {Time}  The time of that index\n *  @private\n */\nTone.Sequence.prototype._indexTime = function(index){\n\tif (index instanceof Tone.TransportTime){\n\t\treturn index;\n\t} else {\n\t\treturn Tone.Ticks(index * this._subdivision + this.startOffset).toSeconds();\n\t}\n};\n\n/**\n *  Clean up.\n *  @return {Tone.Sequence} this\n */\nTone.Sequence.prototype.dispose = function(){\n\tTone.Part.prototype.dispose.call(this);\n\treturn this;\n};\n\nexport default Tone.Sequence;\n\n","import Tone from \"../core/Tone\";\nimport \"../event/Loop\";\nimport \"../control/CtrlPattern\";\n\n/**\n *  @class Tone.Pattern arpeggiates between the given notes\n *         in a number of patterns. See Tone.CtrlPattern for\n *         a full list of patterns.\n *  @example\n * var pattern = new Tone.Pattern(function(time, note){\n *   //the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n *  @extends {Tone.Loop}\n *  @param {Function} callback The callback to invoke with the event.\n *  @param {Array} values The values to arpeggiate over.\n */\nTone.Pattern = function(){\n\n\tvar options = Tone.defaults(arguments, [\"callback\", \"values\", \"pattern\"], Tone.Pattern);\n\tTone.Loop.call(this, options);\n\n\t/**\n\t *  The pattern manager\n\t *  @type {Tone.CtrlPattern}\n\t *  @private\n\t */\n\tthis._pattern = new Tone.CtrlPattern({\n\t\t\"values\" : options.values, \n\t\t\"type\" : options.pattern,\n\t\t\"index\" : options.index\n\t});\n};\n\nTone.extend(Tone.Pattern, Tone.Loop);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.Pattern.defaults = {\n\t\"pattern\" : Tone.CtrlPattern.Type.Up,\n\t\"callback\" : Tone.noOp,\n\t\"values\" : [],\n};\n\n/**\n *  Internal function called when the notes should be called\n *  @param  {Number}  time  The time the event occurs\n *  @private\n */\nTone.Pattern.prototype._tick = function(time){\n\tthis.callback(time, this._pattern.value);\n\tthis._pattern.next();\n};\n\n/**\n *  The current index in the values array.\n *  @memberOf Tone.Pattern#\n *  @type {Positive}\n *  @name index\n */\nObject.defineProperty(Tone.Pattern.prototype, \"index\", {\n\tget : function(){\n\t\treturn this._pattern.index;\n\t},\n\tset : function(i){\n\t\tthis._pattern.index = i;\n\t}\n});\n\n/**\n *  The array of events.\n *  @memberOf Tone.Pattern#\n *  @type {Array}\n *  @name values\n */\nObject.defineProperty(Tone.Pattern.prototype, \"values\", {\n\tget : function(){\n\t\treturn this._pattern.values;\n\t},\n\tset : function(vals){\n\t\tthis._pattern.values = vals;\n\t}\n});\n\n/**\n *  The current value of the pattern.\n *  @memberOf Tone.Pattern#\n *  @type {*}\n *  @name value\n *  @readOnly\n */\nObject.defineProperty(Tone.Pattern.prototype, \"value\", {\n\tget : function(){\n\t\treturn this._pattern.value;\n\t}\n});\n\n/**\n *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n *  @memberOf Tone.Pattern#\n *  @type {String}\n *  @name pattern\n */\nObject.defineProperty(Tone.Pattern.prototype, \"pattern\", {\n\tget : function(){\n\t\treturn this._pattern.type;\n\t},\n\tset : function(pattern){\n\t\tthis._pattern.type = pattern;\n\t}\n});\n\n/**\n *  Clean up\n *  @return  {Tone.Pattern}  this\n */\nTone.Pattern.prototype.dispose = function(){\n\tTone.Loop.prototype.dispose.call(this);\n\tthis._pattern.dispose();\n\tthis._pattern = null;\n};\n\nexport default Tone.Pattern;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../core/Delay\";\nimport \"../component/LFO\";\n\n/**\n *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n *         modulates the delayTime of the delay, causing the pitch to rise\n *         and fall. \n *  @extends {Tone.Effect}\n *  @param {Frequency} frequency The frequency of the vibrato.\n *  @param {NormalRange} depth The amount the pitch is modulated.\n */\nTone.Vibrato = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"depth\"], Tone.Vibrato);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  The delay node used for the vibrato effect\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNode = new Tone.Delay(0, options.maxDelay);\n\n\t/**\n\t *  The LFO used to control the vibrato\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"type\" : options.type,\n\t\t\"min\" : 0,\n\t\t\"max\" : options.maxDelay, \n\t\t\"frequency\" : options.frequency,\n\t\t\"phase\" : -90 //offse the phase so the resting position is in the center\n\t}).start().connect(this._delayNode.delayTime);\n\n\t/**\n\t *  The frequency of the vibrato\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t/**\n\t *  The depth of the vibrato. \n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\tthis.depth.value = options.depth;\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.effectSend.chain(this._delayNode, this.effectReturn);\n};\n\nTone.extend(Tone.Vibrato, Tone.Effect);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n */\nTone.Vibrato.defaults = {\n\t\"maxDelay\" : 0.005,\n\t\"frequency\" : 5,\n\t\"depth\" : 0.1,\n\t\"type\" : \"sine\"\n};\n\n/**\n * Type of oscillator attached to the Vibrato.\n * @memberOf Tone.Vibrato#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Vibrato.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Vibrato} this\n */\nTone.Vibrato.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._delayNode.dispose();\n\tthis._delayNode = null;\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n};\n\nexport default Tone.Vibrato;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../effect/StereoEffect\";\n\n/**\n *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n *         The type, frequency, and depth of the LFO is controllable.\n *\n *  @extends {Tone.StereoEffect}\n *  @constructor\n *  @param {Frequency} [frequency] The rate of the effect.\n *  @param {NormalRange} [depth] The depth of the effect.\n *  @example\n * //create a tremolo and start it's LFO\n * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n * //route an oscillator through the tremolo and start it\n * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n */\nTone.Tremolo = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"depth\"], Tone.Tremolo);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The tremelo LFO in the left channel\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO({\n\t\t\"phase\" : options.spread,\n\t\t\"min\" : 1,\n\t\t\"max\" : 0,\n\t});\n\n\t/**\n\t *  The tremelo LFO in the left channel\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO({\n\t\t\"phase\" : options.spread,\n\t\t\"min\" : 1,\n\t\t\"max\" : 0,\n\t});\n\n\t/**\n\t *  Where the gain is multiplied\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitudeL = new Tone.Gain();\n\n\t/**\n\t *  Where the gain is multiplied\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._amplitudeR = new Tone.Gain();\n\n\t/**\n\t *  The frequency of the tremolo.\n\t *  @type  {Frequency}\n\t *  @signal\n\t */\n\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t/**\n\t *  The depth of the effect. A depth of 0, has no effect\n\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t *  modulate fully between 0 and 1.\n\t *  @type  {NormalRange}\n\t *  @signal\n\t */\n\tthis.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\tthis.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\tthis._lfoL.connect(this._amplitudeL.gain);\n\tthis._lfoR.connect(this._amplitudeR.gain);\n\tthis.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\tthis.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\tthis.type = options.type;\n\tthis.spread = options.spread;\n};\n\nTone.extend(Tone.Tremolo, Tone.StereoEffect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Tremolo.defaults = {\n\t\"frequency\" : 10,\n\t\"type\" : \"sine\",\n\t\"depth\" : 0.5,\n\t\"spread\" : 180,\n};\n\n/**\n * Start the tremolo.\n * @param {Time} [time=now] When the tremolo begins.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.start = function(time){\n\tthis._lfoL.start(time);\n\tthis._lfoR.start(time);\n\treturn this;\n};\n\n/**\n * Stop the tremolo.\n * @param {Time} [time=now] When the tremolo stops.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.stop = function(time){\n\tthis._lfoL.stop(time);\n\tthis._lfoR.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the effect to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                              Transport has started.\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.sync = function(delay){\n\tthis._lfoL.sync(delay);\n\tthis._lfoR.sync(delay);\n\tTone.Transport.syncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * Unsync the filter from the transport\n * @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.unsync = function(){\n\tthis._lfoL.unsync();\n\tthis._lfoR.unsync();\n\tTone.Transport.unsyncSignal(this.frequency);\n\treturn this;\n};\n\n/**\n * The Tremolo's oscillator type.\n * @memberOf Tone.Tremolo#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Tremolo.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfoL.type;\n\t},\n\tset : function(type){\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n});\n\n/**\n * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n * When set to 180, LFO's will be panned hard left and right respectively.\n * @memberOf Tone.Tremolo#\n * @type {Degrees}\n * @name spread\n */\nObject.defineProperty(Tone.Tremolo.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._lfoR.phase - this._lfoL.phase; //180\n\t},\n\tset : function(spread){\n\t\tthis._lfoL.phase = 90 - (spread/2);\n\t\tthis._lfoR.phase = (spread/2) + 90;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Tremolo} this\n */\nTone.Tremolo.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tthis._amplitudeL.dispose();\n\tthis._amplitudeL = null;\n\tthis._amplitudeR.dispose();\n\tthis._amplitudeR = null;\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.Tremolo;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/MidSideEffect\";\nimport \"../signal/Signal\";\nimport \"../signal/Multiply\";\nimport \"../signal/Subtract\";\n\n/**\n *  @class Applies a width factor to the mid/side seperation.\n *         0 is all mid and 1 is all side.\n *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n *         <br><br>\n *         <code>\n *         Mid *= 2*(1-width)<br>\n *         Side *= 2*width\n *         </code>\n *\n *  @extends {Tone.MidSideEffect}\n *  @constructor\n *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n */\nTone.StereoWidener = function(){\n\n\tvar options = Tone.defaults(arguments, [\"width\"], Tone.StereoWidener);\n\tTone.MidSideEffect.call(this, options);\n\n\t/**\n\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\tthis._readOnly([\"width\"]);\n\n\t/**\n\t * Two times the (1-width) for the mid channel\n\t * @type {Tone.Multiply}\n\t * @private\n\t */\n\tthis._twoTimesWidthMid = new Tone.Multiply(2);\n\n\t/**\n\t * Two times the width for the side channel\n\t * @type {Tone.Multiply}\n\t * @private\n\t */\n\tthis._twoTimesWidthSide = new Tone.Multiply(2);\n\n\t/**\n\t *  Mid multiplier\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._midMult = new Tone.Multiply();\n\tthis._twoTimesWidthMid.connect(this._midMult, 0, 1);\n\tthis.midSend.chain(this._midMult, this.midReturn);\n\n\t/**\n\t * 1 - width\n\t * @type {Tone.Subtract}\n\t * @private\n\t */\n\tthis._oneMinusWidth = new Tone.Subtract();\n\tthis._oneMinusWidth.connect(this._twoTimesWidthMid);\n\tTone.connect(this.context.getConstant(1), this._oneMinusWidth, 0, 0);\n\tthis.width.connect(this._oneMinusWidth, 0, 1);\n\n\t/**\n\t *  Side multiplier\n\t *  @type {Tone.Multiply}\n\t *  @private\n\t */\n\tthis._sideMult = new Tone.Multiply();\n\tthis.width.connect(this._twoTimesWidthSide);\n\tthis._twoTimesWidthSide.connect(this._sideMult, 0, 1);\n\tthis.sideSend.chain(this._sideMult, this.sideReturn);\n};\n\nTone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\n/**\n *  the default values\n *  @static\n *  @type {Object}\n */\nTone.StereoWidener.defaults = {\n\t\"width\" : 0.5\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.StereoWidener} this\n */\nTone.StereoWidener.prototype.dispose = function(){\n\tTone.MidSideEffect.prototype.dispose.call(this);\n\tthis._writable([\"width\"]);\n\tthis.width.dispose();\n\tthis.width = null;\n\tthis._midMult.dispose();\n\tthis._midMult = null;\n\tthis._sideMult.dispose();\n\tthis._sideMult = null;\n\tthis._twoTimesWidthMid.dispose();\n\tthis._twoTimesWidthMid = null;\n\tthis._twoTimesWidthSide.dispose();\n\tthis._twoTimesWidthSide = null;\n\tthis._oneMinusWidth.dispose();\n\tthis._oneMinusWidth = null;\n\treturn this;\n};\n\nexport default Tone.StereoWidener;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoEffect\";\nimport \"../effect/FeedbackEffect\";\nimport \"../core/Gain\";\n\n/**\n *  @class Base class for stereo feedback effects where the effectReturn\n *         is fed back into the same channel.\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n */\nTone.StereoFeedbackEffect = function(){\n\n\tvar options = Tone.defaults(arguments, [\"feedback\"], Tone.FeedbackEffect);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  controls the amount of feedback\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\n\t/**\n\t *  the left side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackL = new Tone.Gain();\n\n\t/**\n\t *  the right side feeback\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._feedbackR = new Tone.Gain();\n\n\t//connect it up\n\tthis.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\tthis.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\tthis.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\tthis._readOnly([\"feedback\"]);\n};\n\nTone.extend(Tone.StereoFeedbackEffect, Tone.StereoEffect);\n\n/**\n *  clean up\n *  @returns {Tone.StereoFeedbackEffect} this\n */\nTone.StereoFeedbackEffect.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"feedback\"]);\n\tthis.feedback.dispose();\n\tthis.feedback = null;\n\tthis._feedbackL.dispose();\n\tthis._feedbackL = null;\n\tthis._feedbackR.dispose();\n\tthis._feedbackR = null;\n\treturn this;\n};\n\nexport default Tone.StereoFeedbackEffect;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Offline\";\nimport \"../component/Filter\";\nimport \"../component/Merge\";\nimport \"../source/Noise\";\nimport \"../core/Gain\";\nimport \"../effect/Convolver\";\n\n/**\n *  @class Simple convolution created with decaying noise.\n *  \t\tGenerates an Impulse Response Buffer\n * \t\t\twith Tone.Offline then feeds the IR into ConvolverNode.\n * \t\t\tNote: the Reverb will not make any sound until [generate](#generate)\n * \t\t\thas been invoked and resolved.\n *\n * \t\t\tInspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * \t\t\tCopyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n *\n *  @extends {Tone.Convolver}\n *  @param {Time=} decay The amount of time it will reverberate for.\n */\nTone.Reverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"decay\"], Tone.Reverb);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  Convolver node\n\t *  @type {ConvolverNode}\n\t *  @private\n\t */\n\tthis._convolver = this.context.createConvolver();\n\n\t/**\n\t * The duration of the reverb\n\t * @type {Time}\n\t */\n\tthis.decay = options.decay;\n\n\t/**\n\t * The amount of time before the reverb is fully\n\t * ramped in.\n\t * @type {Time}\n\t */\n\tthis.preDelay = options.preDelay;\n\n\tthis.connectEffect(this._convolver);\n};\n\nTone.extend(Tone.Reverb, Tone.Effect);\n\n/**\n * The defaults\n * @type {Object}\n * @static\n */\nTone.Reverb.defaults = {\n\t\"decay\" : 1.5,\n\t\"preDelay\" : 0.01,\n};\n\n/**\n * Generate the Impulse Response. Returns a promise while the IR is being\n * generated.\n * @return {Promise<Tone.Reverb>} Promise which returns this object.\n */\nTone.Reverb.prototype.generate = function(){\n\treturn Tone.Offline(function(){\n\t\t//create a noise burst which decays over the duration\n\t\tvar noiseL = new Tone.Noise();\n\t\tvar noiseR = new Tone.Noise();\n\t\tvar merge = new Tone.Merge();\n\t\tnoiseL.connect(merge.left);\n\t\tnoiseR.connect(merge.right);\n\t\tvar gainNode = new Tone.Gain().toMaster();\n\t\tmerge.connect(gainNode);\n\t\tnoiseL.start(0);\n\t\tnoiseR.start(0);\n\t\t//predelay\n\t\tgainNode.gain.setValueAtTime(0, 0);\n\t\tgainNode.gain.setValueAtTime(1, this.preDelay);\n\t\t//decay\n\t\tgainNode.gain.exponentialApproachValueAtTime(0, this.preDelay, this.decay + this.preDelay);\n\t}.bind(this), this.decay + this.preDelay).then(function(buffer){\n\t\tthis._convolver.buffer = buffer.get();\n\t\treturn this;\n\t}.bind(this));\n};\n\n/**\n *  Clean up.\n *  @return  {Tone.Reverb}  this\n */\nTone.Reverb.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._convolver.disconnect();\n\tthis._convolver = null;\n\treturn this;\n};\n\nexport default Tone.Reverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../component/CrossFade\";\nimport \"../signal/Signal\";\nimport \"../effect/FeedbackEffect\";\nimport \"../core/Delay\";\n\n/**\n *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal.\n *         The effect is achieved by speeding up or slowing down the delayTime\n *         of a DelayNode using a sawtooth wave.\n *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n *\n *  @extends {Tone.FeedbackEffect}\n *  @param {Interval=} pitch The interval to transpose the incoming signal by.\n */\nTone.PitchShift = function(){\n\n\tvar options = Tone.defaults(arguments, [\"pitch\"], Tone.PitchShift);\n\tTone.FeedbackEffect.call(this, options);\n\n\t/**\n\t *  The pitch signal\n\t *  @type  {Tone.Signal}\n\t *  @private\n\t */\n\tthis._frequency = new Tone.Signal(0);\n\n\t/**\n\t *  Uses two DelayNodes to cover up the jump in\n\t *  the sawtooth wave.\n\t *  @type  {DelayNode}\n\t *  @private\n\t */\n\tthis._delayA = new Tone.Delay(0, 1);\n\n\t/**\n\t *  The first LFO.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoA = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 0.1,\n\t\t\"type\" : \"sawtooth\"\n\t}).connect(this._delayA.delayTime);\n\n\t/**\n\t *  The second DelayNode\n\t *  @type  {DelayNode}\n\t *  @private\n\t */\n\tthis._delayB = new Tone.Delay(0, 1);\n\n\t/**\n\t *  The first LFO.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoB = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 0.1,\n\t\t\"type\" : \"sawtooth\",\n\t\t\"phase\" : 180\n\t}).connect(this._delayB.delayTime);\n\n\t/**\n\t *  Crossfade quickly between the two delay lines\n\t *  to cover up the jump in the sawtooth wave\n\t *  @type  {Tone.CrossFade}\n\t *  @private\n\t */\n\tthis._crossFade = new Tone.CrossFade();\n\n\t/**\n\t *  LFO which alternates between the two\n\t *  delay lines to cover up the disparity in the\n\t *  sawtooth wave.\n\t *  @type  {Tone.LFO}\n\t *  @private\n\t */\n\tthis._crossFadeLFO = new Tone.LFO({\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t\t\"type\" : \"triangle\",\n\t\t\"phase\" : 90\n\t}).connect(this._crossFade.fade);\n\n\t/**\n\t *  The delay node\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._feedbackDelay = new Tone.Delay(options.delayTime);\n\n\t/**\n\t *  The amount of delay on the input signal\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._feedbackDelay.delayTime;\n\tthis._readOnly(\"delayTime\");\n\n\t/**\n\t *  Hold the current pitch\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._pitch = options.pitch;\n\n\t/**\n\t *  Hold the current windowSize\n\t *  @type {Number}\n\t *  @private\n\t */\n\tthis._windowSize = options.windowSize;\n\n\t//connect the two delay lines up\n\tthis._delayA.connect(this._crossFade.a);\n\tthis._delayB.connect(this._crossFade.b);\n\t//connect the frequency\n\tthis._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t//route the input\n\tthis.effectSend.fan(this._delayA, this._delayB);\n\tthis._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t//start the LFOs at the same time\n\tvar now = this.now();\n\tthis._lfoA.start(now);\n\tthis._lfoB.start(now);\n\tthis._crossFadeLFO.start(now);\n\t//set the initial value\n\tthis.windowSize = this._windowSize;\n};\n\nTone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\n/**\n *  default values\n *  @static\n *  @type {Object}\n *  @const\n */\nTone.PitchShift.defaults = {\n\t\"pitch\" : 0,\n\t\"windowSize\" : 0.1,\n\t\"delayTime\" : 0,\n\t\"feedback\" : 0\n};\n\n/**\n * Repitch the incoming signal by some interval (measured\n * in semi-tones).\n * @memberOf Tone.PitchShift#\n * @type {Interval}\n * @name pitch\n * @example\n * pitchShift.pitch = -12; //down one octave\n * pitchShift.pitch = 7; //up a fifth\n */\nObject.defineProperty(Tone.PitchShift.prototype, \"pitch\", {\n\tget : function(){\n\t\treturn this._pitch;\n\t},\n\tset : function(interval){\n\t\tthis._pitch = interval;\n\t\tvar factor = 0;\n\t\tif (interval < 0){\n\t\t\tthis._lfoA.min = 0;\n\t\t\tthis._lfoA.max = this._windowSize;\n\t\t\tthis._lfoB.min = 0;\n\t\t\tthis._lfoB.max = this._windowSize;\n\t\t\tfactor = Tone.intervalToFrequencyRatio(interval - 1) + 1;\n\t\t} else {\n\t\t\tthis._lfoA.min = this._windowSize;\n\t\t\tthis._lfoA.max = 0;\n\t\t\tthis._lfoB.min = this._windowSize;\n\t\t\tthis._lfoB.max = 0;\n\t\t\tfactor = Tone.intervalToFrequencyRatio(interval) - 1;\n\t\t}\n\t\tthis._frequency.value = factor * (1.2 / this._windowSize);\n\t}\n});\n\n/**\n * The window size corresponds roughly to the sample length in a looping sampler.\n * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n * signal, but larger values will result in smoother pitch shifting for larger intervals.\n * A nominal range of 0.03 to 0.1 is recommended.\n * @memberOf Tone.PitchShift#\n * @type {Time}\n * @name windowSize\n * @example\n * pitchShift.windowSize = 0.1;\n */\nObject.defineProperty(Tone.PitchShift.prototype, \"windowSize\", {\n\tget : function(){\n\t\treturn this._windowSize;\n\t},\n\tset : function(size){\n\t\tthis._windowSize = this.toSeconds(size);\n\t\tthis.pitch = this._pitch;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.PitchShift}  this\n */\nTone.PitchShift.prototype.dispose = function(){\n\tTone.FeedbackEffect.prototype.dispose.call(this);\n\tthis._frequency.dispose();\n\tthis._frequency = null;\n\tthis._delayA.disconnect();\n\tthis._delayA = null;\n\tthis._delayB.disconnect();\n\tthis._delayB = null;\n\tthis._lfoA.dispose();\n\tthis._lfoA = null;\n\tthis._lfoB.dispose();\n\tthis._lfoB = null;\n\tthis._crossFade.dispose();\n\tthis._crossFade = null;\n\tthis._crossFadeLFO.dispose();\n\tthis._crossFadeLFO = null;\n\tthis._writable(\"delayTime\");\n\tthis._feedbackDelay.dispose();\n\tthis._feedbackDelay = null;\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.PitchShift;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/StereoXFeedbackEffect\";\nimport \"../signal/Signal\";\nimport \"../core/Delay\";\n\n/**\n *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n *          first in one channel and next in the opposite channel. In a stereo\n *          system these are the right and left channels.\n *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n *          with independent delay values. Each delay is routed to one channel\n *          (left or right), and the channel triggered second will always\n *          trigger at the same interval after the first.\n *\n * \t@constructor\n * \t@extends {Tone.StereoXFeedbackEffect}\n *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n *  @param {NormalRange=} feedback The amount of the effected signal which\n *                                 is fed back through the delay.\n *  @example\n * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n * var drum = new Tone.MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n */\nTone.PingPongDelay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"feedback\"], Tone.PingPongDelay);\n\tTone.StereoXFeedbackEffect.call(this, options);\n\n\t/**\n\t *  the delay node on the left side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the delay node on the right side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the predelay on the right side\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\n\t/**\n\t *  the delay time signal\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\n\t//connect it up\n\tthis.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\tthis.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\tthis.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t//rearranged the feedback to be after the rightPreDelay\n\tthis._feedbackLR.disconnect();\n\tthis._feedbackLR.connect(this._rightDelay);\n\tthis._readOnly([\"delayTime\"]);\n};\n\nTone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.PingPongDelay.defaults = {\n\t\"delayTime\" : 0.25,\n\t\"maxDelayTime\" : 1\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.PingPongDelay} this\n */\nTone.PingPongDelay.prototype.dispose = function(){\n\tTone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\tthis._leftDelay.dispose();\n\tthis._leftDelay = null;\n\tthis._rightDelay.dispose();\n\tthis._rightDelay = null;\n\tthis._rightPreDelay.dispose();\n\tthis._rightPreDelay = null;\n\tthis._writable([\"delayTime\"]);\n\tthis.delayTime.dispose();\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.PingPongDelay;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../component/Filter\";\nimport \"../effect/StereoEffect\";\n\n/**\n *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n *         of different frequency components of an incoming signal. Read more on\n *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n *\n *\t@extends {Tone.StereoEffect}\n *\t@constructor\n *\t@param {Frequency|Object} [frequency] The speed of the phasing.\n *\t@param {number} [octaves] The octaves of the effect.\n *\t@param {Frequency} [baseFrequency] The base frequency of the filters.\n *\t@example\n * var phaser = new Tone.Phaser({\n * \t\"frequency\" : 15,\n * \t\"octaves\" : 5,\n * \t\"baseFrequency\" : 1000\n * }).toMaster();\n * var synth = new Tone.FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n */\nTone.Phaser = function(){\n\n\t//set the defaults\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"octaves\", \"baseFrequency\"], Tone.Phaser);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  the lfo which controls the frequency on the left side\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\n\t/**\n\t *  the lfo which controls the frequency on the right side\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\tthis._lfoR.phase = 180;\n\n\t/**\n\t *  the base modulation frequency\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._baseFrequency = options.baseFrequency;\n\n\t/**\n\t *  the octaves of the phasing\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  The quality factor of the filters\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\n\t/**\n\t *  the array of filters for the left side\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\n\t/**\n\t *  the array of filters for the left side\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\n\t/**\n\t * the frequency of the effect\n\t * @type {Tone.Signal}\n\t */\n\tthis.frequency = this._lfoL.frequency;\n\tthis.frequency.value = options.frequency;\n\n\t//connect them up\n\tthis.effectSendL.connect(this._filtersL[0]);\n\tthis.effectSendR.connect(this._filtersR[0]);\n\tTone.connect(this._filtersL[options.stages - 1], this.effectReturnL);\n\tTone.connect(this._filtersR[options.stages - 1], this.effectReturnR);\n\t//control the frequency with one LFO\n\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t//set the options\n\tthis.baseFrequency = options.baseFrequency;\n\tthis.octaves = options.octaves;\n\t//start the lfo\n\tthis._lfoL.start();\n\tthis._lfoR.start();\n\tthis._readOnly([\"frequency\", \"Q\"]);\n};\n\nTone.extend(Tone.Phaser, Tone.StereoEffect);\n\n/**\n *  defaults\n *  @static\n *  @type {object}\n */\nTone.Phaser.defaults = {\n\t\"frequency\" : 0.5,\n\t\"octaves\" : 3,\n\t\"stages\" : 10,\n\t\"Q\" : 10,\n\t\"baseFrequency\" : 350,\n};\n\n/**\n *  @param {number} stages\n *  @returns {Array} the number of filters all connected together\n *  @private\n */\nTone.Phaser.prototype._makeFilters = function(stages, connectToFreq, Q){\n\tvar filters = new Array(stages);\n\t//make all the filters\n\tfor (var i = 0; i < stages; i++){\n\t\tvar filter = this.context.createBiquadFilter();\n\t\tfilter.type = \"allpass\";\n\t\tQ.connect(filter.Q);\n\t\tconnectToFreq.connect(filter.frequency);\n\t\tfilters[i] = filter;\n\t}\n\tTone.connectSeries.apply(Tone, filters);\n\treturn filters;\n};\n\n/**\n * The number of octaves the phase goes above\n * the baseFrequency\n * @memberOf Tone.Phaser#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.Phaser.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tvar max = this._baseFrequency * Math.pow(2, octaves);\n\t\tthis._lfoL.max = max;\n\t\tthis._lfoR.max = max;\n\t}\n});\n\n/**\n * The the base frequency of the filters.\n * @memberOf Tone.Phaser#\n * @type {number}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.Phaser.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._baseFrequency;\n\t},\n\tset : function(freq){\n\t\tthis._baseFrequency = freq;\n\t\tthis._lfoL.min = freq;\n\t\tthis._lfoR.min = freq;\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Phaser} this\n */\nTone.Phaser.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._writable([\"frequency\", \"Q\"]);\n\tthis.Q.dispose();\n\tthis.Q = null;\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tfor (var i = 0; i < this._filtersL.length; i++){\n\t\tthis._filtersL[i].disconnect();\n\t\tthis._filtersL[i] = null;\n\t}\n\tthis._filtersL = null;\n\tfor (var j = 0; j < this._filtersR.length; j++){\n\t\tthis._filtersR[j].disconnect();\n\t\tthis._filtersR[j] = null;\n\t}\n\tthis._filtersR = null;\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.Phaser;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/FeedbackCombFilter\";\nimport \"../effect/StereoEffect\";\nimport \"../signal/Scale\";\n\n/**\n *  an array of the comb filter delay time values\n *  @private\n *  @static\n *  @type {Array}\n */\nvar combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n\n/**\n *  the resonances of each of the comb filters\n *  @private\n *  @static\n *  @type {Array}\n */\nvar combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n\n/**\n *  the allpass filter frequencies\n *  @private\n *  @static\n *  @type {Array}\n */\nvar allpassFilterFreqs = [347, 113, 37];\n\n/**\n *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n *         tuned by John Chowning in 1970.\n *         It is made up of three allpass filters and four Tone.FeedbackCombFilter.\n *\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n *  @example\n * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n * var delay = new Tone.FeedbackDelay(0.5);\n * //connecting the synth to reverb through delay\n * var synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\",\"8n\");\n */\nTone.JCReverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"roomSize\"], Tone.JCReverb);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  room size control values between [0,1]\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\n\t/**\n\t *  scale the room size\n\t *  @type {Tone.Scale}\n\t *  @private\n\t */\n\tthis._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\n\t/**\n\t *  a series of allpass filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFilters = [];\n\n\t/**\n\t *  parallel feedback comb filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._feedbackCombFilters = [];\n\n\t//make the allpass filters\n\tfor (var af = 0; af < allpassFilterFreqs.length; af++){\n\t\tvar allpass = this.context.createBiquadFilter();\n\t\tallpass.type = \"allpass\";\n\t\tallpass.frequency.value = allpassFilterFreqs[af];\n\t\tthis._allpassFilters.push(allpass);\n\t}\n\n\t//and the comb filters\n\tfor (var cf = 0; cf < combFilterDelayTimes.length; cf++){\n\t\tvar fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t\tthis._scaleRoomSize.connect(fbcf.resonance);\n\t\tfbcf.resonance.value = combFilterResonances[cf];\n\t\tTone.connect(this._allpassFilters[this._allpassFilters.length - 1], fbcf);\n\t\tif (cf < combFilterDelayTimes.length / 2){\n\t\t\tfbcf.connect(this.effectReturnL);\n\t\t} else {\n\t\t\tfbcf.connect(this.effectReturnR);\n\t\t}\n\t\tthis._feedbackCombFilters.push(fbcf);\n\t}\n\n\t//chain the allpass filters together\n\tthis.roomSize.connect(this._scaleRoomSize);\n\tTone.connectSeries.apply(Tone, this._allpassFilters);\n\tthis.effectSendL.connect(this._allpassFilters[0]);\n\tthis.effectSendR.connect(this._allpassFilters[0]);\n\tthis._readOnly([\"roomSize\"]);\n};\n\nTone.extend(Tone.JCReverb, Tone.StereoEffect);\n\n/**\n *  the default values\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.JCReverb.defaults = {\n\t\"roomSize\" : 0.5\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.JCReverb} this\n */\nTone.JCReverb.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tfor (var apf = 0; apf < this._allpassFilters.length; apf++){\n\t\tthis._allpassFilters[apf].disconnect();\n\t\tthis._allpassFilters[apf] = null;\n\t}\n\tthis._allpassFilters = null;\n\tfor (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++){\n\t\tthis._feedbackCombFilters[fbcf].dispose();\n\t\tthis._feedbackCombFilters[fbcf] = null;\n\t}\n\tthis._feedbackCombFilters = null;\n\tthis._writable([\"roomSize\"]);\n\tthis.roomSize.dispose();\n\tthis.roomSize = null;\n\tthis._scaleRoomSize.dispose();\n\tthis._scaleRoomSize = null;\n\treturn this;\n};\n\nexport default Tone.JCReverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LowpassCombFilter\";\nimport \"../effect/StereoEffect\";\nimport \"../signal/Signal\";\nimport \"../component/Split\";\nimport \"../component/Merge\";\nimport \"../signal/ScaleExp\";\n\n/**\n *  an array of comb filter delay values from Freeverb implementation\n *  @static\n *  @private\n *  @type {Array}\n */\nvar combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n\n/**\n *  an array of allpass filter frequency values from Freeverb implementation\n *  @private\n *  @static\n *  @type {Array}\n */\nvar allpassFilterFrequencies = [225, 556, 441, 341];\n\n/**\n *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n *         Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {NormalRange|Object} [roomSize] Correlated to the decay time.\n *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part\n *                                 of the reverb.\n *  @example\n * var freeverb = new Tone.Freeverb().toMaster();\n * freeverb.dampening.value = 1000;\n * //routing synth through the reverb\n * var synth = new Tone.AMSynth().connect(freeverb);\n */\nTone.Freeverb = function(){\n\n\tvar options = Tone.defaults(arguments, [\"roomSize\", \"dampening\"], Tone.Freeverb);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  The roomSize value between. A larger roomSize\n\t *  will result in a longer decay.\n\t *  @type {NormalRange}\n\t *  @signal\n\t */\n\tthis.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\n\t/**\n\t *  The amount of dampening of the reverberant signal.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\n\t/**\n\t *  the comb filters\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._combFilters = [];\n\n\t/**\n\t *  the allpass filters on the left\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFiltersL = [];\n\n\t/**\n\t *  the allpass filters on the right\n\t *  @type {Array}\n\t *  @private\n\t */\n\tthis._allpassFiltersR = [];\n\n\t//make the allpass filters on the right\n\tfor (var l = 0; l < allpassFilterFrequencies.length; l++){\n\t\tvar allpassL = this.context.createBiquadFilter();\n\t\tallpassL.type = \"allpass\";\n\t\tallpassL.frequency.value = allpassFilterFrequencies[l];\n\t\tthis._allpassFiltersL.push(allpassL);\n\t}\n\n\t//make the allpass filters on the left\n\tfor (var r = 0; r < allpassFilterFrequencies.length; r++){\n\t\tvar allpassR = this.context.createBiquadFilter();\n\t\tallpassR.type = \"allpass\";\n\t\tallpassR.frequency.value = allpassFilterFrequencies[r];\n\t\tthis._allpassFiltersR.push(allpassR);\n\t}\n\n\t//make the comb filters\n\tfor (var c = 0; c < combFilterTunings.length; c++){\n\t\tvar lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t\tif (c < combFilterTunings.length / 2){\n\t\t\tthis.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t\t} else {\n\t\t\tthis.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t\t}\n\t\tthis.roomSize.connect(lfpf.resonance);\n\t\tthis.dampening.connect(lfpf.dampening);\n\t\tthis._combFilters.push(lfpf);\n\t}\n\n\t//chain the allpass filters togetehr\n\tTone.connectSeries.apply(Tone, this._allpassFiltersL);\n\tTone.connectSeries.apply(Tone, this._allpassFiltersR);\n\tTone.connect(this._allpassFiltersL[this._allpassFiltersL.length - 1], this.effectReturnL);\n\tTone.connect(this._allpassFiltersR[this._allpassFiltersR.length - 1], this.effectReturnR);\n\tthis._readOnly([\"roomSize\", \"dampening\"]);\n};\n\nTone.extend(Tone.Freeverb, Tone.StereoEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Freeverb.defaults = {\n\t\"roomSize\" : 0.7,\n\t\"dampening\" : 3000\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Freeverb} this\n */\nTone.Freeverb.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tfor (var al = 0; al < this._allpassFiltersL.length; al++){\n\t\tthis._allpassFiltersL[al].disconnect();\n\t\tthis._allpassFiltersL[al] = null;\n\t}\n\tthis._allpassFiltersL = null;\n\tfor (var ar = 0; ar < this._allpassFiltersR.length; ar++){\n\t\tthis._allpassFiltersR[ar].disconnect();\n\t\tthis._allpassFiltersR[ar] = null;\n\t}\n\tthis._allpassFiltersR = null;\n\tfor (var cf = 0; cf < this._combFilters.length; cf++){\n\t\tthis._combFilters[cf].dispose();\n\t\tthis._combFilters[cf] = null;\n\t}\n\tthis._combFilters = null;\n\tthis._writable([\"roomSize\", \"dampening\"]);\n\tthis.roomSize.dispose();\n\tthis.roomSize = null;\n\tthis.dampening.dispose();\n\tthis.dampening = null;\n\treturn this;\n};\n\nexport default Tone.Freeverb;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/FeedbackEffect\";\nimport \"../signal/Signal\";\nimport \"../core/Delay\";\n\n/**\n *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n *          signal is fed back into the delay.\n *\n *  @constructor\n *  @extends {Tone.FeedbackEffect}\n *  @param {Time|Object} [delayTime] The delay applied to the incoming signal.\n *  @param {NormalRange=} feedback The amount of the effected signal which\n *                            is fed back through the delay.\n *  @example\n * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n * var tom = new Tone.MembraneSynth({\n * \t\"octaves\" : 4,\n * \t\"pitchDecay\" : 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\",\"32n\");\n */\nTone.FeedbackDelay = function(){\n\n\tvar options = Tone.defaults(arguments, [\"delayTime\", \"feedback\"], Tone.FeedbackDelay);\n\tTone.FeedbackEffect.call(this, options);\n\n\t/**\n\t *  the delay node\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNode = new Tone.Delay(options.delayTime, options.maxDelay);\n\n\t/**\n\t *  The delayTime of the DelayNode.\n\t *  @type {Time}\n\t *  @signal\n\t */\n\tthis.delayTime = this._delayNode.delayTime;\n\n\t// connect it up\n\tthis.connectEffect(this._delayNode);\n\tthis._readOnly([\"delayTime\"]);\n};\n\nTone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\n/**\n *  The default values.\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.FeedbackDelay.defaults = {\n\t\"delayTime\" : 0.25,\n\t\"maxDelay\" : 1\n};\n\n/**\n *  clean up\n *  @returns {Tone.FeedbackDelay} this\n */\nTone.FeedbackDelay.prototype.dispose = function(){\n\tTone.FeedbackEffect.prototype.dispose.call(this);\n\tthis._delayNode.dispose();\n\tthis._delayNode = null;\n\tthis._writable([\"delayTime\"]);\n\tthis.delayTime = null;\n\treturn this;\n};\n\nexport default Tone.FeedbackDelay;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n *  @example\n * var dist = new Tone.Distortion(0.8).toMaster();\n * var fm = new Tone.SimpleFM().connect(dist);\n * //this sounds good on bass notes\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n */\nTone.Distortion = function(){\n\n\tvar options = Tone.defaults(arguments, [\"distortion\"], Tone.Distortion);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  @type {Tone.WaveShaper}\n\t *  @private\n\t */\n\tthis._shaper = new Tone.WaveShaper(4096);\n\n\t/**\n\t * holds the distortion amount\n\t * @type {number}\n\t * @private\n\t */\n\tthis._distortion = options.distortion;\n\n\tthis.connectEffect(this._shaper);\n\tthis.distortion = options.distortion;\n\tthis.oversample = options.oversample;\n};\n\nTone.extend(Tone.Distortion, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Distortion.defaults = {\n\t\"distortion\" : 0.4,\n\t\"oversample\" : \"none\"\n};\n\n/**\n * The amount of distortion.\n * @memberOf Tone.Distortion#\n * @type {NormalRange}\n * @name distortion\n */\nObject.defineProperty(Tone.Distortion.prototype, \"distortion\", {\n\tget : function(){\n\t\treturn this._distortion;\n\t},\n\tset : function(amount){\n\t\tthis._distortion = amount;\n\t\tvar k = amount * 100;\n\t\tvar deg = Math.PI / 180;\n\t\tthis._shaper.setMap(function(x){\n\t\t\tif (Math.abs(x) < 0.001){\n\t\t\t\t//should output 0 when input is 0\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t\t\t}\n\t\t});\n\t} \n});\n\n/**\n * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.Distortion#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.Distortion.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tthis._shaper.oversample = oversampling;\n\t} \n});\n\n/**\n *  Clean up. \n *  @returns {Tone.Distortion} this\n */\nTone.Distortion.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\treturn this;\n};\n\nexport default Tone.Distortion;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/LFO\";\nimport \"../effect/StereoEffect\";\nimport \"../core/Delay\";\n\n/**\n *  @class Tone.Chorus is a stereo chorus effect composed of\n *         a left and right delay with a Tone.LFO applied to the delayTime of each channel.\n *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n *\t@constructor\n *\t@extends {Tone.StereoEffect}\n *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms.\n *\t@param {NormalRange} [depth] The depth of the chorus.\n *\t@example\n * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n */\nTone.Chorus = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"delayTime\", \"depth\"], Tone.Chorus);\n\tTone.StereoEffect.call(this, options);\n\n\t/**\n\t *  the depth of the chorus\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._depth = options.depth;\n\n\t/**\n\t *  the delayTime\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._delayTime = options.delayTime / 1000;\n\n\t/**\n\t *  the lfo which controls the delayTime\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoL = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t});\n\n\t/**\n\t *  another LFO for the right side with a 180 degree phase diff\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfoR = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"min\" : 0,\n\t\t\"max\" : 1,\n\t\t\"phase\" : 180\n\t});\n\n\t/**\n\t *  delay for left\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNodeL = new Tone.Delay();\n\n\t/**\n\t *  delay for right\n\t *  @type {Tone.Delay}\n\t *  @private\n\t */\n\tthis._delayNodeR = new Tone.Delay();\n\n\t/**\n\t * The frequency of the LFO which modulates the delayTime.\n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfoL.frequency;\n\n\t//connections\n\tthis.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\tthis.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t//and pass through to make the detune apparent\n\tthis.effectSendL.connect(this.effectReturnL);\n\tthis.effectSendR.connect(this.effectReturnR);\n\t//lfo setup\n\tthis._lfoL.connect(this._delayNodeL.delayTime);\n\tthis._lfoR.connect(this._delayNodeR.delayTime);\n\t//start the lfo\n\tthis._lfoL.start();\n\tthis._lfoR.start();\n\t//have one LFO frequency control the other\n\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t//set the initial values\n\tthis.depth = this._depth;\n\tthis.frequency.value = options.frequency;\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\"]);\n\tthis.spread = options.spread;\n};\n\nTone.extend(Tone.Chorus, Tone.StereoEffect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.Chorus.defaults = {\n\t\"frequency\" : 1.5,\n\t\"delayTime\" : 3.5,\n\t\"depth\" : 0.7,\n\t\"type\" : \"sine\",\n\t\"spread\" : 180\n};\n\n/**\n * The depth of the effect. A depth of 1 makes the delayTime\n * modulate between 0 and 2*delayTime (centered around the delayTime).\n * @memberOf Tone.Chorus#\n * @type {NormalRange}\n * @name depth\n */\nObject.defineProperty(Tone.Chorus.prototype, \"depth\", {\n\tget : function(){\n\t\treturn this._depth;\n\t},\n\tset : function(depth){\n\t\tthis._depth = depth;\n\t\tvar deviation = this._delayTime * depth;\n\t\tthis._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoL.max = this._delayTime + deviation;\n\t\tthis._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoR.max = this._delayTime + deviation;\n\t}\n});\n\n/**\n * The delayTime in milliseconds of the chorus. A larger delayTime\n * will give a more pronounced effect. Nominal range a delayTime\n * is between 2 and 20ms.\n * @memberOf Tone.Chorus#\n * @type {Milliseconds}\n * @name delayTime\n */\nObject.defineProperty(Tone.Chorus.prototype, \"delayTime\", {\n\tget : function(){\n\t\treturn this._delayTime * 1000;\n\t},\n\tset : function(delayTime){\n\t\tthis._delayTime = delayTime / 1000;\n\t\tthis.depth = this._depth;\n\t}\n});\n\n/**\n * The oscillator type of the LFO.\n * @memberOf Tone.Chorus#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.Chorus.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfoL.type;\n\t},\n\tset : function(type){\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n});\n\n/**\n * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n * When set to 180, LFO's will be panned hard left and right respectively.\n * @memberOf Tone.Chorus#\n * @type {Degrees}\n * @name spread\n */\nObject.defineProperty(Tone.Chorus.prototype, \"spread\", {\n\tget : function(){\n\t\treturn this._lfoR.phase - this._lfoL.phase;\n\t},\n\tset : function(spread){\n\t\tthis._lfoL.phase = 90 - (spread/2);\n\t\tthis._lfoR.phase = (spread/2) + 90;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Chorus} this\n */\nTone.Chorus.prototype.dispose = function(){\n\tTone.StereoEffect.prototype.dispose.call(this);\n\tthis._lfoL.dispose();\n\tthis._lfoL = null;\n\tthis._lfoR.dispose();\n\tthis._lfoR = null;\n\tthis._delayNodeL.dispose();\n\tthis._delayNodeL = null;\n\tthis._delayNodeR.dispose();\n\tthis._delayNodeR = null;\n\tthis._writable(\"frequency\");\n\tthis.frequency = null;\n\treturn this;\n};\n\nexport default Tone.Chorus;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/WaveShaper\";\n\n/**\n *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n *         for making different types of distortion sounds.\n *         Note that odd orders sound very different from even ones, \n *         and order = 1 is no change. \n *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n *\n *  @extends {Tone.Effect}\n *  @constructor\n *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n *  @example\n * //create a new cheby\n * var cheby = new Tone.Chebyshev(50);\n * //create a monosynth connected to our cheby\n * synth = new Tone.MonoSynth().connect(cheby);\n */\nTone.Chebyshev = function(){\n\n\tvar options = Tone.defaults(arguments, [\"order\"], Tone.Chebyshev);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  @type {WaveShaperNode}\n\t *  @private\n\t */\n\tthis._shaper = new Tone.WaveShaper(4096);\n\n\t/**\n\t * holds onto the order of the filter\n\t * @type {number}\n\t * @private\n\t */\n\tthis._order = options.order;\n\n\tthis.connectEffect(this._shaper);\n\tthis.order = options.order;\n\tthis.oversample = options.oversample;\n};\n\nTone.extend(Tone.Chebyshev, Tone.Effect);\n\n/**\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Chebyshev.defaults = {\n\t\"order\" : 1,\n\t\"oversample\" : \"none\"\n};\n\n/**\n *  get the coefficient for that degree\n *  @param {number} x the x value\n *  @param   {number} degree \n *  @param {Object} memo memoize the computed value. \n *                       this speeds up computation greatly. \n *  @return  {number}       the coefficient \n *  @private\n */\nTone.Chebyshev.prototype._getCoefficient = function(x, degree, memo){\n\tif (memo.hasOwnProperty(degree)){\n\t\treturn memo[degree];\n\t} else if (degree === 0){\n\t\tmemo[degree] = 0;\n\t} else if (degree === 1){\n\t\tmemo[degree] = x;\n\t} else {\n\t\tmemo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t}\n\treturn memo[degree];\n};\n\n/**\n * The order of the Chebyshev polynomial which creates\n * the equation which is applied to the incoming \n * signal through a Tone.WaveShaper. The equations\n * are in the form:<br>\n * order 2: 2x^2 + 1<br>\n * order 3: 4x^3 + 3x <br>\n * @memberOf Tone.Chebyshev#\n * @type {Positive}\n * @name order\n */\nObject.defineProperty(Tone.Chebyshev.prototype, \"order\", {\n\tget : function(){\n\t\treturn this._order;\n\t},\n\tset : function(order){\n\t\tthis._order = order;\n\t\tvar curve = new Array(4096);\n\t\tvar len = curve.length;\n\t\tfor (var i = 0; i < len; ++i){\n\t\t\tvar x = i * 2 / len - 1;\n\t\t\tif (x === 0){\n\t\t\t\t//should output 0 when input is 0\n\t\t\t\tcurve[i] = 0;\n\t\t\t} else {\n\t\t\t\tcurve[i] = this._getCoefficient(x, order, {});\n\t\t\t}\n\t\t}\n\t\tthis._shaper.curve = curve;\n\t} \n});\n\n/**\n * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n * @memberOf Tone.Chebyshev#\n * @type {string}\n * @name oversample\n */\nObject.defineProperty(Tone.Chebyshev.prototype, \"oversample\", {\n\tget : function(){\n\t\treturn this._shaper.oversample;\n\t},\n\tset : function(oversampling){\n\t\tthis._shaper.oversample = oversampling;\n\t} \n});\n\n/**\n *  Clean up. \n *  @returns {Tone.Chebyshev} this\n */\nTone.Chebyshev.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._shaper.dispose();\n\tthis._shaper = null;\n\treturn this;\n};\n\nexport default Tone.Chebyshev;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../signal/Subtract\";\nimport \"../signal/Modulo\";\n\n/**\n *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth.\n *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n *                       of 1 to 8.\n *  @example\n * //initialize crusher and route a synth through it\n * var crusher = new Tone.BitCrusher(4).toMaster();\n * var synth = new Tone.MonoSynth().connect(crusher);\n */\nTone.BitCrusher = function(){\n\n\tvar options = Tone.defaults(arguments, [\"bits\"], Tone.BitCrusher);\n\tTone.Effect.call(this, options);\n\n\tvar invStepSize = 1 / Math.pow(2, options.bits - 1);\n\n\t/**\n\t *  Subtract the input signal and the modulus of the input signal\n\t *  @type {Tone.Subtract}\n\t *  @private\n\t */\n\tthis._subtract = new Tone.Subtract();\n\n\t/**\n\t *  The mod function\n\t *  @type  {Tone.Modulo}\n\t *  @private\n\t */\n\tthis._modulo = new Tone.Modulo(invStepSize);\n\n\t/**\n\t *  keeps track of the bits\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._bits = options.bits;\n\n\t//connect it up\n\tthis.effectSend.fan(this._subtract, this._modulo);\n\tthis._modulo.connect(this._subtract, 0, 1);\n\tthis._subtract.connect(this.effectReturn);\n};\n\nTone.extend(Tone.BitCrusher, Tone.Effect);\n\n/**\n *  the default values\n *  @static\n *  @type {Object}\n */\nTone.BitCrusher.defaults = {\n\t\"bits\" : 4\n};\n\n/**\n * The bit depth of the effect. Nominal range of 1-8.\n * @memberOf Tone.BitCrusher#\n * @type {number}\n * @name bits\n */\nObject.defineProperty(Tone.BitCrusher.prototype, \"bits\", {\n\tget : function(){\n\t\treturn this._bits;\n\t},\n\tset : function(bits){\n\t\tthis._bits = bits;\n\t\tvar invStepSize = 1 / Math.pow(2, bits - 1);\n\t\tthis._modulo.value = invStepSize;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.BitCrusher} this\n */\nTone.BitCrusher.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._subtract.dispose();\n\tthis._subtract = null;\n\tthis._modulo.dispose();\n\tthis._modulo = null;\n\treturn this;\n};\n\nexport default Tone.BitCrusher;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Follower\";\nimport \"../signal/ScaleExp\";\nimport \"../effect/Effect\";\nimport \"../component/Filter\";\n\n/**\n *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n *          The frequency of the filter is adjusted proportionally to the\n *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set\n *                                            to at the low point of the wah\n *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n *                                the filter will sweep to when fully open\n *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for\n *                                   the incoming signal. Normal range of -40 to 0.\n *  @example\n * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n * //initialize the synth and connect to autowah\n * var synth = new Synth.connect(autoWah);\n * //Q value influences the effect of the wah - default is 2\n * autoWah.Q.value = 6;\n * //more audible on higher notes\n * synth.triggerAttackRelease(\"C4\", \"8n\")\n */\nTone.AutoWah = function(){\n\n\tvar options = Tone.defaults(arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"], Tone.AutoWah);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  The envelope follower. Set the attack/release\n\t *  timing to adjust how the envelope is followed.\n\t *  @type {Tone.Follower}\n\t *  @private\n\t */\n\tthis.follower = new Tone.Follower(options.follower);\n\n\t/**\n\t *  scales the follower value to the frequency domain\n\t *  @type {Tone}\n\t *  @private\n\t */\n\tthis._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\n\t/**\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._baseFrequency = options.baseFrequency;\n\n\t/**\n\t *  @type {number}\n\t *  @private\n\t */\n\tthis._octaves = options.octaves;\n\n\t/**\n\t *  the input gain to adjust the sensitivity\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis._inputBoost = new Tone.Gain();\n\n\t/**\n\t *  @type {BiquadFilterNode}\n\t *  @private\n\t */\n\tthis._bandpass = new Tone.Filter({\n\t\t\"rolloff\" : -48,\n\t\t\"frequency\" : 0,\n\t\t\"Q\" : options.Q,\n\t});\n\n\t/**\n\t *  @type {Tone.Filter}\n\t *  @private\n\t */\n\tthis._peaking = new Tone.Filter(0, \"peaking\");\n\tthis._peaking.gain.value = options.gain;\n\n\t/**\n\t * The gain of the filter.\n\t * @type {Number}\n\t * @signal\n\t */\n\tthis.gain = this._peaking.gain;\n\n\t/**\n\t * The quality of the filter.\n\t * @type {Positive}\n\t * @signal\n\t */\n\tthis.Q = this._bandpass.Q;\n\n\t//the control signal path\n\tthis.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\tthis._sweepRange.connect(this._bandpass.frequency);\n\tthis._sweepRange.connect(this._peaking.frequency);\n\t//the filtered path\n\tthis.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t//set the initial value\n\tthis._setSweepRange();\n\tthis.sensitivity = options.sensitivity;\n\n\tthis._readOnly([\"gain\", \"Q\"]);\n};\n\nTone.extend(Tone.AutoWah, Tone.Effect);\n\n/**\n *  @static\n *  @type {Object}\n */\nTone.AutoWah.defaults = {\n\t\"baseFrequency\" : 100,\n\t\"octaves\" : 6,\n\t\"sensitivity\" : 0,\n\t\"Q\" : 2,\n\t\"gain\" : 2,\n\t\"follower\" : {\n\t\t\"attack\" : 0.3,\n\t\t\"release\" : 0.5\n\t}\n};\n\n/**\n * The number of octaves that the filter will sweep above the\n * baseFrequency.\n * @memberOf Tone.AutoWah#\n * @type {Number}\n * @name octaves\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(octaves){\n\t\tthis._octaves = octaves;\n\t\tthis._setSweepRange();\n\t}\n});\n\n/**\n * The base frequency from which the sweep will start from.\n * @memberOf Tone.AutoWah#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._baseFrequency;\n\t},\n\tset : function(baseFreq){\n\t\tthis._baseFrequency = baseFreq;\n\t\tthis._setSweepRange();\n\t}\n});\n\n/**\n * The sensitivity to control how responsive to the input signal the filter is.\n * @memberOf Tone.AutoWah#\n * @type {Decibels}\n * @name sensitivity\n */\nObject.defineProperty(Tone.AutoWah.prototype, \"sensitivity\", {\n\tget : function(){\n\t\treturn Tone.gainToDb(1 / this._inputBoost.gain.value);\n\t},\n\tset : function(sensitivy){\n\t\tthis._inputBoost.gain.value = 1 / Tone.dbToGain(sensitivy);\n\t}\n});\n\n/**\n *  sets the sweep range of the scaler\n *  @private\n */\nTone.AutoWah.prototype._setSweepRange = function(){\n\tthis._sweepRange.min = this._baseFrequency;\n\tthis._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.AutoWah} this\n */\nTone.AutoWah.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis.follower.dispose();\n\tthis.follower = null;\n\tthis._sweepRange.dispose();\n\tthis._sweepRange = null;\n\tthis._bandpass.dispose();\n\tthis._bandpass = null;\n\tthis._peaking.dispose();\n\tthis._peaking = null;\n\tthis._inputBoost.dispose();\n\tthis._inputBoost = null;\n\tthis._writable([\"gain\", \"Q\"]);\n\tthis.gain = null;\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.AutoWah;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/LFO\";\nimport \"../component/Panner\";\n\n/**\n *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n *  @example\n * //create an autopanner and start it's LFO\n * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n * //route an oscillator through the panner and start it\n * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n */\nTone.AutoPanner = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\"], Tone.AutoPanner);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  the lfo which drives the panning\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"amplitude\" : options.depth,\n\t\t\"min\" : -1,\n\t\t\"max\" : 1,\n\t});\n\n\t/**\n\t * The amount of panning between left and right. \n\t * 0 = always center. 1 = full range between left and right. \n\t * @type {NormalRange}\n\t * @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\t/**\n\t *  the panner node which does the panning\n\t *  @type {Tone.Panner}\n\t *  @private\n\t */\n\tthis._panner = new Tone.Panner();\n\n\t/**\n\t * How fast the panner modulates between left and right. \n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t//connections\n\tthis.connectEffect(this._panner);\n\tthis._lfo.connect(this._panner.pan);\n\tthis.type = options.type;\n\tthis._readOnly([\"depth\", \"frequency\"]);\n};\n\n//extend Effect\nTone.extend(Tone.AutoPanner, Tone.Effect);\n\n/**\n *  defaults\n *  @static\n *  @type {Object}\n */\nTone.AutoPanner.defaults = {\n\t\"frequency\" : 1,\n\t\"type\" : \"sine\",\n\t\"depth\" : 1\n};\n\n/**\n * Start the effect.\n * @param {Time} [time=now] When the LFO will start. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.start = function(time){\n\tthis._lfo.start(time);\n\treturn this;\n};\n\n/**\n * Stop the effect.\n * @param {Time} [time=now] When the LFO will stop. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.stop = function(time){\n\tthis._lfo.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the panner to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                               Transport has started. \n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.sync = function(delay){\n\tthis._lfo.sync(delay);\n\treturn this;\n};\n\n/**\n * Unsync the panner from the transport\n * @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.unsync = function(){\n\tthis._lfo.unsync();\n\treturn this;\n};\n\n/**\n * Type of oscillator attached to the AutoFilter. \n * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n * @memberOf Tone.AutoFilter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AutoPanner.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.AutoPanner} this\n */\nTone.AutoPanner.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis._panner.dispose();\n\tthis._panner = null;\n\tthis._writable([\"depth\", \"frequency\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.AutoPanner;\n\n","import Tone from \"../core/Tone\";\nimport \"../effect/Effect\";\nimport \"../component/LFO\";\nimport \"../component/Filter\";\n\n/**\n *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n *         Setting the LFO rate and depth allows for control over the filter modulation rate \n *         and depth.\n *\n *  @constructor\n *  @extends {Tone.Effect}\n *  @param {Time|Object} [frequency] The rate of the LFO.\n *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n *  @example\n * //create an autofilter and start it's LFO\n * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n * //route an oscillator through the filter and start it\n * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n */\nTone.AutoFilter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"frequency\", \"baseFrequency\", \"octaves\"], Tone.AutoFilter);\n\tTone.Effect.call(this, options);\n\n\t/**\n\t *  the lfo which drives the filter cutoff\n\t *  @type {Tone.LFO}\n\t *  @private\n\t */\n\tthis._lfo = new Tone.LFO({\n\t\t\"frequency\" : options.frequency,\n\t\t\"amplitude\" : options.depth,\n\t});\n\n\t/**\n\t * The range of the filter modulating between the min and max frequency. \n\t * 0 = no modulation. 1 = full modulation.\n\t * @type {NormalRange}\n\t * @signal\n\t */\n\tthis.depth = this._lfo.amplitude;\n\n\t/**\n\t * How fast the filter modulates between min and max. \n\t * @type {Frequency}\n\t * @signal\n\t */\n\tthis.frequency = this._lfo.frequency;\n\n\t/**\n\t *  The filter node\n\t *  @type {Tone.Filter}\n\t */\n\tthis.filter = new Tone.Filter(options.filter);\n\n\t/**\n\t *  The octaves placeholder\n\t *  @type {Positive}\n\t *  @private\n\t */\n\tthis._octaves = 0;\n\n\t//connections\n\tthis.connectEffect(this.filter);\n\tthis._lfo.connect(this.filter.frequency);\n\tthis.type = options.type;\n\tthis._readOnly([\"frequency\", \"depth\"]);\n\tthis.octaves = options.octaves;\n\tthis.baseFrequency = options.baseFrequency;\n};\n\n//extend Effect\nTone.extend(Tone.AutoFilter, Tone.Effect);\n\n/**\n *  defaults\n *  @static\n *  @type {Object}\n */\nTone.AutoFilter.defaults = {\n\t\"frequency\" : 1,\n\t\"type\" : \"sine\",\n\t\"depth\" : 1,\n\t\"baseFrequency\" : 200,\n\t\"octaves\" : 2.6,\n\t\"filter\" : {\n\t\t\"type\" : \"lowpass\",\n\t\t\"rolloff\" : -12,\n\t\t\"Q\" : 1,\n\t}\n};\n\n/**\n * Start the effect.\n * @param {Time} [time=now] When the LFO will start. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.start = function(time){\n\tthis._lfo.start(time);\n\treturn this;\n};\n\n/**\n * Stop the effect.\n * @param {Time} [time=now] When the LFO will stop. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.stop = function(time){\n\tthis._lfo.stop(time);\n\treturn this;\n};\n\n/**\n * Sync the filter to the transport.\n * @param {Time} [delay=0] Delay time before starting the effect after the\n *                               Transport has started. \n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.sync = function(delay){\n\tthis._lfo.sync(delay);\n\treturn this;\n};\n\n/**\n * Unsync the filter from the transport.\n * @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.unsync = function(){\n\tthis._lfo.unsync();\n\treturn this;\n};\n\n/**\n * Type of oscillator attached to the AutoFilter. \n * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n * @memberOf Tone.AutoFilter#\n * @type {string}\n * @name type\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"type\", {\n\tget : function(){\n\t\treturn this._lfo.type;\n\t},\n\tset : function(type){\n\t\tthis._lfo.type = type;\n\t}\n});\n\n/**\n * The minimum value of the filter's cutoff frequency.\n * @memberOf Tone.AutoFilter#\n * @type {Frequency}\n * @name baseFrequency\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"baseFrequency\", {\n\tget : function(){\n\t\treturn this._lfo.min;\n\t},\n\tset : function(freq){\n\t\tthis._lfo.min = this.toFrequency(freq);\n\t\t//and set the max\n\t\tthis.octaves = this._octaves;\n\t}\n});\n\n/**\n * The maximum value of the filter's cutoff frequency. \n * @memberOf Tone.AutoFilter#\n * @type {Positive}\n * @name octaves\n */\nObject.defineProperty(Tone.AutoFilter.prototype, \"octaves\", {\n\tget : function(){\n\t\treturn this._octaves;\n\t},\n\tset : function(oct){\n\t\tthis._octaves = oct;\n\t\tthis._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t}\n});\n\n/**\n *  Clean up. \n *  @returns {Tone.AutoFilter} this\n */\nTone.AutoFilter.prototype.dispose = function(){\n\tTone.Effect.prototype.dispose.call(this);\n\tthis._lfo.dispose();\n\tthis._lfo = null;\n\tthis.filter.dispose();\n\tthis.filter = null;\n\tthis._writable([\"frequency\", \"depth\"]);\n\tthis.frequency = null;\n\tthis.depth = null;\n\treturn this;\n};\n\nexport default Tone.AutoFilter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\n\n/**\n *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space\n *          using a right-handed cartesian coordinate system.\n *          The units used in the coordinate system are not defined;\n *          these coordinates are independent/invariant of any particular\n *          units such as meters or feet. Tone.Panner3D objects have an forward\n *          vector representing the direction the sound is projecting. Additionally,\n *          they have a sound cone representing how directional the sound is.\n *          For example, the sound could be omnidirectional, in which case it would\n *          be heard anywhere regardless of its forward, or it can be more directional\n *          and heard only if it is facing the listener. Tone.Listener objects\n *          (representing a person's ears) have an forward and up vector\n *          representing in which direction the person is facing. Because both the\n *          source stream and the listener can be moving, they both have a velocity\n *          vector representing both the speed and direction of movement. Taken together,\n *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n *          <br><br>\n *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n *\n *  @constructor\n *  @extends {Tone}\n *  @singleton\n */\nTone.Listener = function(){\n\n\tTone.call(this);\n\n\t/**\n\t *  Holds the current forward orientation\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._orientation = [0, 0, 0, 0, 0, 0];\n\n\t/**\n\t *  Holds the current position\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._position = [0, 0, 0];\n\n\tTone.getContext(function(){\n\t\t// set the default position/forward\n\t\tthis.set(ListenerConstructor.defaults);\n\n\t\t//listener is a singleton so it adds itself to the context\n\t\t// this.context.listener = this;\n\t}.bind(this));\n\n};\n\nTone.extend(Tone.Listener);\n\n/**\n *  Defaults according to the specification\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Listener.defaults = {\n\t\"positionX\" : 0,\n\t\"positionY\" : 0,\n\t\"positionZ\" : 0,\n\t\"forwardX\" : 0,\n\t\"forwardY\" : 0,\n\t\"forwardZ\" : 1,\n\t\"upX\" : 0,\n\t\"upY\" : 1,\n\t\"upZ\" : 0\n};\n\n/**\n * Is an instanceof Tone.Listener\n * @type {Boolean}\n */\nTone.Listener.prototype.isListener = true;\n\n/**\n * The ramp time which is applied to the setTargetAtTime\n * @type {Number}\n * @private\n */\nTone.Listener.prototype._rampTimeConstant = 0.01;\n\n/**\n *  Sets the position of the listener in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Listener} this\n */\nTone.Listener.prototype.setPosition = function(x, y, z){\n\tif (this.context.rawContext.listener.positionX){\n\t\tvar now = this.now();\n\t\tthis.context.rawContext.listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis.context.rawContext.listener.setPosition(x, y, z);\n\t}\n\tthis._position = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  Sets the orientation of the listener using two vectors, the forward\n *  vector (which direction the listener is facing) and the up vector\n *  (which the up direction of the listener). An up vector\n *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @param  {Number}  upX\n *  @param  {Number}  upY\n *  @param  {Number}  upZ\n *  @return {Tone.Listener} this\n */\nTone.Listener.prototype.setOrientation = function(x, y, z, upX, upY, upZ){\n\tif (this.context.rawContext.listener.forwardX){\n\t\tvar now = this.now();\n\t\tthis.context.rawContext.listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t\tthis.context.rawContext.listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t} else {\n\t\tthis.context.rawContext.listener.setOrientation(x, y, z, upX, upY, upZ);\n\t}\n\tthis._orientation = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  The x position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionX\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionX\", {\n\tset : function(pos){\n\t\tthis._position[0] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[0];\n\t}\n});\n\n/**\n *  The y position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionY\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionY\", {\n\tset : function(pos){\n\t\tthis._position[1] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[1];\n\t}\n});\n\n/**\n *  The z position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name positionZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"positionZ\", {\n\tset : function(pos){\n\t\tthis._position[2] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[2];\n\t}\n});\n\n/**\n *  The x coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardX\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardX\", {\n\tset : function(pos){\n\t\tthis._orientation[0] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[0];\n\t}\n});\n\n/**\n *  The y coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardY\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardY\", {\n\tset : function(pos){\n\t\tthis._orientation[1] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[1];\n\t}\n});\n\n/**\n *  The z coordinate of the listeners front direction. i.e.\n *  which way they are facing.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name forwardZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"forwardZ\", {\n\tset : function(pos){\n\t\tthis._orientation[2] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[2];\n\t}\n});\n\n/**\n *  The x coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upX\n */\nObject.defineProperty(Tone.Listener.prototype, \"upX\", {\n\tset : function(pos){\n\t\tthis._orientation[3] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[3];\n\t}\n});\n\n/**\n *  The y coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upY\n */\nObject.defineProperty(Tone.Listener.prototype, \"upY\", {\n\tset : function(pos){\n\t\tthis._orientation[4] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[4];\n\t}\n});\n\n/**\n *  The z coordinate of the listener's up direction. i.e.\n *  the direction the listener is standing in.\n *  @type {Number}\n *  @memberOf Tone.Listener#\n *  @name upZ\n */\nObject.defineProperty(Tone.Listener.prototype, \"upZ\", {\n\tset : function(pos){\n\t\tthis._orientation[5] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[5];\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Listener} this\n */\nTone.Listener.prototype.dispose = function(){\n\tthis._orientation = null;\n\tthis._position = null;\n\treturn this;\n};\n\n//SINGLETON SETUP\nvar ListenerConstructor = Tone.Listener;\nTone.Listener = new ListenerConstructor();\n\nTone.Context.on(\"init\", function(context){\n\tif (context.listener && context.listener.isListener){\n\t\t//a single listener object\n\t\tTone.Listener = context.listener;\n\t} else {\n\t\t//make new Listener insides\n\t\tTone.Listener = new ListenerConstructor();\n\t}\n});\n//END SINGLETON SETUP\n\nexport default Tone.Listener;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Timeline\";\n\n/**\n *  @class Tone.Draw is useful for synchronizing visuals and audio events.\n *         Callbacks from Tone.Transport or any of the Tone.Event classes\n *         always happen _before_ the scheduled time and are not synchronized\n *         to the animation frame so they are not good for triggering tightly\n *         synchronized visuals and sound. Tone.Draw makes it easy to schedule\n *         callbacks using the AudioContext time and uses requestAnimationFrame.\n *         \n *  @singleton\n *  @extends {Tone}\n *  @example\n * Tone.Transport.schedule(function(time){\n * \t//use the time argument to schedule a callback with Tone.Draw\n * \tTone.Draw.schedule(function(){\n * \t\t//do drawing or DOM manipulation here\n * \t}, time)\n * }, \"+0.5\")\n */\nTone.Draw = function(){\n\n\tTone.call(this);\n\t\n\t/**\n\t *  All of the events.\n\t *  @type  {Tone.Timeline}\n\t *  @private\n\t */\n\tthis._events = new Tone.Timeline();\n\n\t/**\n\t *  The duration after which events are not invoked.\n\t *  @type  {Number}\n\t *  @default 0.25\n\t */\n\tthis.expiration = 0.25;\n\n\t/**\n\t *  The amount of time before the scheduled time \n\t *  that the callback can be invoked. Default is\n\t *  half the time of an animation frame (0.008 seconds).\n\t *  @type  {Number}\n\t *  @default 0.008\n\t */\n\tthis.anticipation = 0.008;\n\n\t/**\n\t *  The draw loop\n\t *  @type  {Function}\n\t *  @private\n\t */\n\tthis._boundDrawLoop = this._drawLoop.bind(this);\n};\n\nTone.extend(Tone.Draw);\n\n/**\n *  Schedule a function at the given time to be invoked\n *  on the nearest animation frame.\n *  @param  {Function}  callback  Callback is invoked at the given time.\n *  @param  {Time}    time      The time relative to the AudioContext time\n *                              to invoke the callback.\n *  @return  {Tone.Draw}    this\n */\nTone.Draw.prototype.schedule = function(callback, time){\n\tthis._events.add({\n\t\tcallback : callback,\n\t\ttime : this.toSeconds(time)\n\t});\n\t//start the draw loop on the first event\n\tif (this._events.length === 1){\n\t\trequestAnimationFrame(this._boundDrawLoop);\n\t}\n\treturn this;\n};\n\n/**\n *  Cancel events scheduled after the given time\n *  @param  {Time=}  after  Time after which scheduled events will \n *                          be removed from the scheduling timeline.\n *  @return  {Tone.Draw}  this\n */\nTone.Draw.prototype.cancel = function(after){\n\tthis._events.cancel(this.toSeconds(after));\n\treturn this;\n};\n\n/**\n *  The draw loop\n *  @private\n */\nTone.Draw.prototype._drawLoop = function(){\n\tvar now = Tone.context.currentTime;\n\twhile (this._events.length && this._events.peek().time - this.anticipation <= now){\n\t\tvar event = this._events.shift();\n\t\tif (now - event.time <= this.expiration){\n\t\t\tevent.callback();\n\t\t}\n\t}\n\tif (this._events.length > 0){\n\t\trequestAnimationFrame(this._boundDrawLoop);\n\t}\n};\n\n//make a singleton\nTone.Draw = new Tone.Draw();\n\nexport default Tone.Draw;\n\n","import Tone from \"../core/Tone\";\nimport \"../core/Gain\";\n\n/**\n *  buses are another way of routing audio\n *\n *  augments Tone.prototype to include send and receive\n */\n\n/**\n *  All of the routes\n *\n *  @type {Object}\n *  @static\n *  @private\n */\nvar Buses = {};\n\n/**\n *  Send this signal to the channel name.\n *  @param  {String} channelName A named channel to send the signal to.\n *  @param  {Decibels} amount The amount of the source to send to the bus.\n *  @return {GainNode} The gain node which connects this node to the desired channel.\n *                     Can be used to adjust the levels of the send.\n *  @example\n * source.send(\"reverb\", -12);\n */\nTone.prototype.send = function(channelName, amount){\n\tif (!Buses.hasOwnProperty(channelName)){\n\t\tBuses[channelName] = this.context.createGain();\n\t}\n\tamount = Tone.defaultArg(amount, 0);\n\tvar sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\tthis.connect(sendKnob);\n\tsendKnob.connect(Buses[channelName]);\n\treturn sendKnob;\n};\n\n/**\n *  Receive the input from the desired channelName to the input\n *\n *  @param  {String} channelName A named channel to send the signal to.\n *  @param  {Number=} channelNumber The channel to connect to\n *  @returns {Tone} this\n *  @example\n * reverbEffect.receive(\"reverb\");\n */\nTone.prototype.receive = function(channelName, inputNum){\n\tif (!Buses.hasOwnProperty(channelName)){\n\t\tBuses[channelName] = this.context.createGain();\n\t}\n\tTone.connect(Buses[channelName], this, 0, inputNum);\n\treturn this;\n};\n\n//remove all the send/receives when a new audio context is passed in\nTone.Context.on(\"init\", function(context){\n\tif (context.buses){\n\t\tBuses = context.buses;\n\t} else {\n\t\tBuses = {};\n\t\tcontext.buses = Buses;\n\t}\n});\n\nexport default Tone;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class  Choose a random value.\n *  @extends {Tone}\n *  @example\n * var randomWalk = new Tone.CtrlRandom({\n * \t\"min\" : 0,\n * \t\"max\" : 10,\n * \t\"integer\" : true\n * });\n * randomWalk.eval();\n *\n *  @param {Number|Time=} min The minimum return value.\n *  @param {Number|Time=} max The maximum return value.\n */\nTone.CtrlRandom = function(){\n\n\tvar options = Tone.defaults(arguments, [\"min\", \"max\"], Tone.CtrlRandom);\n\tTone.call(this);\n\n\t/**\n\t *  The minimum return value\n\t *  @type  {Number|Time}\n\t */\n\tthis.min = options.min;\n\n\t/**\n\t *  The maximum return value\n\t *  @type  {Number|Time}\n\t */\n\tthis.max = options.max;\n\n\t/**\n\t *  If the return value should be an integer\n\t *  @type  {Boolean}\n\t */\n\tthis.integer = options.integer;\n};\n\nTone.extend(Tone.CtrlRandom);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.CtrlRandom.defaults = {\n\t\"min\" : 0,\n\t\"max\" : 1,\n\t\"integer\" : false\n};\n\n/**\n *  Return a random value between min and max. \n *  @readOnly\n *  @memberOf Tone.CtrlRandom#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlRandom.prototype, \"value\", {\n\tget : function(){\n\t\tvar min = this.toSeconds(this.min);\n\t\tvar max = this.toSeconds(this.max);\n\t\tvar rand = Math.random(); \n\t\tvar val = rand * min + (1 - rand) * max;\n\t\tif (this.integer){\n\t\t\tval = Math.floor(val);\n\t\t}\n\t\treturn val;\n\t}\n});\n\nexport default Tone.CtrlRandom;\n\n","import Tone from \"../core/Tone\";\n\n/**\n *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n *         to Tone.CtrlMarkov.next will move to the next state. If the next\n *         state choice is an array, the next state is chosen randomly with\n *         even probability for all of the choices. For a weighted probability\n *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n *         The probabilities will be normalized and then chosen. If no next options\n *         are given for the current state, the state will stay there. \n *  @extends {Tone}\n *  @example\n * var chain = new Tone.CtrlMarkov({\n * \t\"beginning\" : [\"end\", \"middle\"],\n * \t\"middle\" : \"end\"\n * });\n * chain.value = \"beginning\";\n * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n *\n *  @example\n * var chain = new Tone.CtrlMarkov({\n * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n * \t\"middle\" : \"end\"\n * });\n * chain.value = \"beginning\";\n * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n *  @param {Object} values An object with the state names as the keys\n *                         and the next state(s) as the values. \n */\nTone.CtrlMarkov = function(values, initial){\n\n\tTone.call(this);\n\n\t/**\n\t *  The Markov values with states as the keys\n\t *  and next state(s) as the values. \n\t *  @type {Object}\n\t */\n\tthis.values = Tone.defaultArg(values, {});\n\t\n\t/**\n\t *  The current state of the Markov values. The next\n\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t *  is invoked.\n\t *  @type {String}\n\t */\n\tthis.value = Tone.defaultArg(initial, Object.keys(this.values)[0]);\n};\n\nTone.extend(Tone.CtrlMarkov);\n\n/**\n *  Returns the next state of the Markov values. \n *  @return  {String}\n */\nTone.CtrlMarkov.prototype.next = function(){\n\tif (this.values.hasOwnProperty(this.value)){\n\t\tvar next = this.values[this.value];\n\t\tif (Tone.isArray(next)){\n\t\t\tvar distribution = this._getProbDistribution(next);\n\t\t\tvar rand = Math.random();\n\t\t\tvar total = 0;\n\t\t\tfor (var i = 0; i < distribution.length; i++){\n\t\t\t\tvar dist = distribution[i];\n\t\t\t\tif (rand > total && rand < total + dist){\n\t\t\t\t\tvar chosen = next[i];\n\t\t\t\t\tif (Tone.isObject(chosen)){\n\t\t\t\t\t\tthis.value = chosen.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.value = chosen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttotal += dist;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.value = next;\n\t\t}\n\t} \n\treturn this.value;\n};\n\n/**\n *  Choose randomly from an array weighted options in the form \n *  {\"state\" : string, \"probability\" : number} or an array of values\n *  @param  {Array}  options \n *  @return  {Array}  The randomly selected choice\n *  @private\n */\nTone.CtrlMarkov.prototype._getProbDistribution = function(options){\n\tvar distribution = [];\n\tvar total = 0;\n\tvar needsNormalizing = false;\n\tfor (var i = 0; i < options.length; i++){\n\t\tvar option = options[i];\n\t\tif (Tone.isObject(option)){\n\t\t\tneedsNormalizing = true;\n\t\t\tdistribution[i] = option.probability;\n\t\t} else {\n\t\t\tdistribution[i] = 1 / options.length;\n\t\t}\n\t\ttotal += distribution[i];\n\t}\n\tif (needsNormalizing){\n\t\t//normalize the values\n\t\tfor (var j = 0; j < distribution.length; j++){\n\t\t\tdistribution[j] = distribution[j] / total;\n\t\t}\n\t}\n\treturn distribution;\n};\n\n/**\n *  Clean up\n *  @return  {Tone.CtrlMarkov}  this\n */\nTone.CtrlMarkov.prototype.dispose = function(){\n\tthis.values = null;\n};\n\nexport default Tone.CtrlMarkov;\n\n","import Tone from \"../core/Tone\";\nimport \"../type/Type\";\n\n/**\n *  @class Tone.CtrlInterpolate will interpolate between given values based\n *         on the \"index\" property. Passing in an array or object literal\n *         will interpolate each of the parameters. Note (i.e. \"C3\")\n *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n *         assumed to be numbers. \n *  @example\n * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n * interp.index = 0.75;\n * interp.value; //returns 1.5\n *\n *  @example\n * var interp = new Tone.CtrlInterpolate([\n * \t[2, 4, 5],\n * \t[9, 3, 2],\n * ]);\n * @param {Array} values The array of values to interpolate over\n * @param {Positive} index The initial interpolation index.\n * @extends {Tone}\n */\nTone.CtrlInterpolate = function(){\n\n\tvar options = Tone.defaults(arguments, [\"values\", \"index\"], Tone.CtrlInterpolate);\n\tTone.call(this);\n\n\t/**\n\t *  The values to interpolate between\n\t *  @type  {Array}\n\t */\n\tthis.values = options.values;\n\n\t/**\n\t *  The interpolated index between values. For example: a value of 1.5\n\t *  would interpolate equally between the value at index 1\n\t *  and the value at index 2. \n\t *  @example\n\t * interp.index = 0; \n\t * interp.value; //returns the value at 0\n\t * interp.index = 0.5;\n\t * interp.value; //returns the value between indices 0 and 1. \n\t *  @type  {Positive}\n\t */\n\tthis.index = options.index;\n};\n\nTone.extend(Tone.CtrlInterpolate);\n\n/**\n *  The defaults\n *  @const\n *  @type  {Object}\n */\nTone.CtrlInterpolate.defaults = {\n\t\"index\" : 0,\n\t\"values\" : []\n};\n\n/**\n *  The current interpolated value based on the index\n *  @readOnly\n *  @memberOf Tone.CtrlInterpolate#\n *  @type {*}\n *  @name value\n */\nObject.defineProperty(Tone.CtrlInterpolate.prototype, \"value\", {\n\tget : function(){\n\t\tvar index = this.index;\n\t\tindex = Math.min(index, this.values.length - 1);\n\t\tvar lowerPosition = Math.floor(index);\n\t\tvar lower = this.values[lowerPosition];\n\t\tvar upper = this.values[Math.ceil(index)];\n\t\treturn this._interpolate(index - lowerPosition, lower, upper);\n\t}\n});\n\n/**\n *  Internal interpolation routine\n *  @param  {NormalRange}  index  The index between the lower and upper\n *  @param  {*}  lower \n *  @param  {*}  upper \n *  @return  {*}  The interpolated value\n *  @private\n */\nTone.CtrlInterpolate.prototype._interpolate = function(index, lower, upper){\n\tif (Tone.isArray(lower)){\n\t\tvar retArray = [];\n\t\tfor (var i = 0; i < lower.length; i++){\n\t\t\tretArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t\t}\n\t\treturn retArray;\n\t} else if (Tone.isObject(lower)){\n\t\tvar retObj = {};\n\t\tfor (var attr in lower){\n\t\t\tretObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t\t}\n\t\treturn retObj;\n\t} else {\n\t\tlower = this._toNumber(lower);\n\t\tupper = this._toNumber(upper);\n\t\treturn (1 - index) * lower + index * upper;\n\t}\n};\n\n/**\n *  Convert from the given type into a number\n *  @param  {Number|String}  value\n *  @return  {Number}\n *  @private\n */\nTone.CtrlInterpolate.prototype._toNumber = function(val){\n\tif (Tone.isNumber(val)){\n\t\treturn val;\n\t} else {\n\t\t//otherwise assume that it's Time...\n\t\treturn this.toSeconds(val);\n\t}\n};\n\n/**\n *  Clean up\n *  @return  {Tone.CtrlInterpolate}  this\n */\nTone.CtrlInterpolate.prototype.dispose = function(){\n\tthis.values = null;\n};\n\nexport default Tone.CtrlInterpolate;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Get the current waveform data of the connected audio source.\n *  @extends {Tone.AudioNode}\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 32 to 32768.\n */\nTone.Waveform = function(){\n\n\tvar options = Tone.defaults(arguments, [\"size\"], Tone.Waveform);\n\toptions.type = Tone.Analyser.Type.Waveform;\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {Tone.Analyser}\n\t */\n\tthis._analyser = this.input = this.output = new Tone.Analyser(options);\n};\n\nTone.extend(Tone.Waveform, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.Waveform.defaults = {\n\t\"size\" : 1024\n};\n\n/**\n *  Gets the waveform of the audio source. Returns the waveform data\n *  of length [size](#size) as a Float32Array with values between -1 and 1.\n *  @returns {TypedArray}\n */\nTone.Waveform.prototype.getValue = function(){\n\treturn this._analyser.getValue();\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 32 to 32768.\n *  @memberOf Tone.Waveform#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.Waveform.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.size;\n\t},\n\tset : function(size){\n\t\tthis._analyser.size = size;\n\t}\n});\n/**\n *  Clean up.\n *  @return  {Tone.Waveform}  this\n */\nTone.Waveform.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n};\n\nexport default Tone.Waveform;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/CrossFade\";\nimport \"../component/Merge\";\nimport \"../component/Split\";\nimport \"../signal/Signal\";\nimport \"../signal/AudioToGain\";\nimport \"../signal/Zero\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n *          Tries to normalize the API across various browsers. See Tone.Listener\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Number} positionX The initial x position.\n *  @param {Number} positionY The initial y position.\n *  @param {Number} positionZ The initial z position.\n */\nTone.Panner3D = function(){\n\n\tvar options = Tone.defaults(arguments, [\"positionX\", \"positionY\", \"positionZ\"], Tone.Panner3D);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The panner node\n\t *  @type {PannerNode}\n\t *  @private\n\t */\n\tthis._panner = this.input = this.output = this.context.createPanner();\n\t//set some values\n\tthis._panner.panningModel = options.panningModel;\n\tthis._panner.maxDistance = options.maxDistance;\n\tthis._panner.distanceModel = options.distanceModel;\n\tthis._panner.coneOuterGain = options.coneOuterGain;\n\tthis._panner.coneOuterAngle = options.coneOuterAngle;\n\tthis._panner.coneInnerAngle = options.coneInnerAngle;\n\tthis._panner.refDistance = options.refDistance;\n\tthis._panner.rolloffFactor = options.rolloffFactor;\n\n\t/**\n\t *  Holds the current orientation\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._orientation = [options.orientationX, options.orientationY, options.orientationZ];\n\n\t/**\n\t *  Holds the current position\n\t *  @type  {Array}\n\t *  @private\n\t */\n\tthis._position = [options.positionX, options.positionY, options.positionZ];\n\n\t// set the default position/orientation\n\tthis.orientationX = options.orientationX;\n\tthis.orientationY = options.orientationY;\n\tthis.orientationZ = options.orientationZ;\n\tthis.positionX = options.positionX;\n\tthis.positionY = options.positionY;\n\tthis.positionZ = options.positionZ;\n};\n\nTone.extend(Tone.Panner3D, Tone.AudioNode);\n\n/**\n *  Defaults according to the specification\n *  @static\n *  @const\n *  @type {Object}\n */\nTone.Panner3D.defaults = {\n\t\"positionX\" : 0,\n\t\"positionY\" : 0,\n\t\"positionZ\" : 0,\n\t\"orientationX\" : 0,\n\t\"orientationY\" : 0,\n\t\"orientationZ\" : 0,\n\t\"panningModel\" : \"equalpower\",\n\t\"maxDistance\" : 10000,\n\t\"distanceModel\" : \"inverse\",\n\t\"coneOuterGain\" : 0,\n\t\"coneOuterAngle\" : 360,\n\t\"coneInnerAngle\" : 360,\n\t\"refDistance\" : 1,\n\t\"rolloffFactor\" : 1\n};\n\n/**\n * The ramp time which is applied to the setTargetAtTime\n * @type {Number}\n * @private\n */\nTone.Panner3D.prototype._rampTimeConstant = 0.01;\n\n/**\n *  Sets the position of the source in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.setPosition = function(x, y, z){\n\tif (this._panner.positionX){\n\t\tvar now = this.now();\n\t\tthis._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis._panner.setPosition(x, y, z);\n\t}\n\tthis._position = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  Sets the orientation of the source in 3d space.\n *  @param  {Number}  x\n *  @param  {Number}  y\n *  @param  {Number}  z\n *  @return {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.setOrientation = function(x, y, z){\n\tif (this._panner.orientationX){\n\t\tvar now = this.now();\n\t\tthis._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\tthis._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\tthis._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t} else {\n\t\tthis._panner.setOrientation(x, y, z);\n\t}\n\tthis._orientation = Array.prototype.slice.call(arguments);\n\treturn this;\n};\n\n/**\n *  The x position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionX\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionX\", {\n\tset : function(pos){\n\t\tthis._position[0] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[0];\n\t}\n});\n\n/**\n *  The y position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionY\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionY\", {\n\tset : function(pos){\n\t\tthis._position[1] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[1];\n\t}\n});\n\n/**\n *  The z position of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name positionZ\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"positionZ\", {\n\tset : function(pos){\n\t\tthis._position[2] = pos;\n\t\tthis.setPosition.apply(this, this._position);\n\t},\n\tget : function(){\n\t\treturn this._position[2];\n\t}\n});\n\n/**\n *  The x orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationX\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationX\", {\n\tset : function(pos){\n\t\tthis._orientation[0] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[0];\n\t}\n});\n\n/**\n *  The y orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationY\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationY\", {\n\tset : function(pos){\n\t\tthis._orientation[1] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[1];\n\t}\n});\n\n/**\n *  The z orientation of the panner object.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name orientationZ\n */\nObject.defineProperty(Tone.Panner3D.prototype, \"orientationZ\", {\n\tset : function(pos){\n\t\tthis._orientation[2] = pos;\n\t\tthis.setOrientation.apply(this, this._orientation);\n\t},\n\tget : function(){\n\t\treturn this._orientation[2];\n\t}\n});\n\n/**\n *  Proxy a property on the panner to an exposed public propery\n *  @param  {String}  prop\n *  @private\n */\nTone.Panner3D._aliasProperty = function(prop){\n\tObject.defineProperty(Tone.Panner3D.prototype, prop, {\n\t\tset : function(val){\n\t\t\tthis._panner[prop] = val;\n\t\t},\n\t\tget : function(){\n\t\t\treturn this._panner[prop];\n\t\t}\n\t});\n};\n\n/**\n *  The panning model. Either \"equalpower\" or \"HRTF\".\n *  @type {String}\n *  @memberOf Tone.Panner3D#\n *  @name panningModel\n */\nTone.Panner3D._aliasProperty(\"panningModel\");\n\n/**\n *  A reference distance for reducing volume as source move further from the listener\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name refDistance\n */\nTone.Panner3D._aliasProperty(\"refDistance\");\n\n/**\n *  Describes how quickly the volume is reduced as source moves away from listener.\n *  @type {Number}\n *  @memberOf Tone.Panner3D#\n *  @name rolloffFactor\n */\nTone.Panner3D._aliasProperty(\"rolloffFactor\");\n\n/**\n *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n *  @type {String}\n *  @memberOf Tone.Panner3D#\n *  @name distanceModel\n */\nTone.Panner3D._aliasProperty(\"distanceModel\");\n\n/**\n *  The angle, in degrees, inside of which there will be no volume reduction\n *  @type {Degrees}\n *  @memberOf Tone.Panner3D#\n *  @name coneInnerAngle\n */\nTone.Panner3D._aliasProperty(\"coneInnerAngle\");\n\n/**\n *  The angle, in degrees, outside of which the volume will be reduced\n *  to a constant value of coneOuterGain\n *  @type {Degrees}\n *  @memberOf Tone.Panner3D#\n *  @name coneOuterAngle\n */\nTone.Panner3D._aliasProperty(\"coneOuterAngle\");\n\n/**\n *  The gain outside of the coneOuterAngle\n *  @type {Gain}\n *  @memberOf Tone.Panner3D#\n *  @name coneOuterGain\n */\nTone.Panner3D._aliasProperty(\"coneOuterGain\");\n\n/**\n *  The maximum distance between source and listener,\n *  after which the volume will not be reduced any further.\n *  @type {Positive}\n *  @memberOf Tone.Panner3D#\n *  @name maxDistance\n */\nTone.Panner3D._aliasProperty(\"maxDistance\");\n\n/**\n *  Clean up.\n *  @returns {Tone.Panner3D} this\n */\nTone.Panner3D.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._panner.disconnect();\n\tthis._panner = null;\n\tthis._orientation = null;\n\tthis._position = null;\n\treturn this;\n};\n\nexport default Tone.Panner3D;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MultibandSplit\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class A compressor with seperate controls over low/mid/high dynamics\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Object} options The low/mid/high compressor settings.\n *  @example\n *  var multiband = new Tone.MultibandCompressor({\n *  \t\"lowFrequency\" : 200,\n *  \t\"highFrequency\" : 1300\n *  \t\"low\" : {\n *  \t\t\"threshold\" : -12\n *  \t}\n *  })\n */\nTone.MultibandCompressor = function(options){\n\n\tTone.AudioNode.call(this);\n\toptions = Tone.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\n\t/**\n\t *  split the incoming signal into high/mid/low\n\t *  @type {Tone.MultibandSplit}\n\t *  @private\n\t */\n\tthis._splitter = this.input = new Tone.MultibandSplit({\n\t\t\"lowFrequency\" : options.lowFrequency,\n\t\t\"highFrequency\" : options.highFrequency\n\t});\n\n\t/**\n\t *  low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = this._splitter.lowFrequency;\n\n\t/**\n\t *  mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = this._splitter.highFrequency;\n\n\t/**\n\t *  the output\n\t *  @type {Tone.Gain}\n\t *  @private\n\t */\n\tthis.output = new Tone.Gain();\n\n\t/**\n\t *  The compressor applied to the low frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.low = new Tone.Compressor(options.low);\n\n\t/**\n\t *  The compressor applied to the mid frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.mid = new Tone.Compressor(options.mid);\n\n\t/**\n\t *  The compressor applied to the high frequencies.\n\t *  @type {Tone.Compressor}\n\t */\n\tthis.high = new Tone.Compressor(options.high);\n\n\t//connect the compressor\n\tthis._splitter.low.chain(this.low, this.output);\n\tthis._splitter.mid.chain(this.mid, this.output);\n\tthis._splitter.high.chain(this.high, this.output);\n\n\tthis._readOnly([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n};\n\nTone.extend(Tone.MultibandCompressor, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MultibandCompressor.defaults = {\n\t\"low\" : Tone.Compressor.defaults,\n\t\"mid\" : Tone.Compressor.defaults,\n\t\"high\" : Tone.Compressor.defaults,\n\t\"lowFrequency\" : 250,\n\t\"highFrequency\" : 2000\n};\n\n/**\n *  clean up\n *  @returns {Tone.MultibandCompressor} this\n */\nTone.MultibandCompressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._splitter.dispose();\n\tthis._writable([\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n\tthis.low.dispose();\n\tthis.mid.dispose();\n\tthis.high.dispose();\n\tthis._splitter = null;\n\tthis.low = null;\n\tthis.mid = null;\n\tthis.high = null;\n\tthis.lowFrequency = null;\n\tthis.highFrequency = null;\n\treturn this;\n};\n\nexport default Tone.MultibandCompressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Merge\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n *         where both left and right channels have the same value. This can be useful\n *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n */\nTone.Mono = function(){\n\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 0);\n\n\t/**\n\t *  merge the signal\n\t *  @type {Tone.Merge}\n\t *  @private\n\t */\n\tthis._merge = this.output = new Tone.Merge();\n\n\tTone.connect(this.input, this._merge, 0, 0);\n\tTone.connect(this.input, this._merge, 0, 1);\n};\n\nTone.extend(Tone.Mono, Tone.AudioNode);\n\n/**\n *  clean up\n *  @returns {Tone.Mono} this\n */\nTone.Mono.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._merge.dispose();\n\tthis._merge = null;\n\treturn this;\n};\n\nexport default Tone.Mono;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MidSideSplit\";\nimport \"../component/MidSideMerge\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.MidSideCompressor applies two different compressors to the mid\n *         and side signal components. See Tone.MidSideSplit.\n *\n *  @extends {Tone.AudioNode}\n *  @param {Object} options The options that are passed to the mid and side\n *                          compressors.\n *  @constructor\n */\nTone.MidSideCompressor = function(options){\n\n\tTone.AudioNode.call(this);\n\toptions = Tone.defaultArg(options, Tone.MidSideCompressor.defaults);\n\n\t/**\n\t *  the mid/side split\n\t *  @type  {Tone.MidSideSplit}\n\t *  @private\n\t */\n\tthis._midSideSplit = this.input = new Tone.MidSideSplit();\n\n\t/**\n\t *  the mid/side recombination\n\t *  @type  {Tone.MidSideMerge}\n\t *  @private\n\t */\n\tthis._midSideMerge = this.output = new Tone.MidSideMerge();\n\n\t/**\n\t *  The compressor applied to the mid signal\n\t *  @type  {Tone.Compressor}\n\t */\n\tthis.mid = new Tone.Compressor(options.mid);\n\n\t/**\n\t *  The compressor applied to the side signal\n\t *  @type  {Tone.Compressor}\n\t */\n\tthis.side = new Tone.Compressor(options.side);\n\n\tthis._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\tthis._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\tthis._readOnly([\"mid\", \"side\"]);\n};\n\nTone.extend(Tone.MidSideCompressor, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.MidSideCompressor.defaults = {\n\t\"mid\" : {\n\t\t\"ratio\" : 3,\n\t\t\"threshold\" : -24,\n\t\t\"release\" : 0.03,\n\t\t\"attack\" : 0.02,\n\t\t\"knee\" : 16\n\t},\n\t\"side\" : {\n\t\t\"ratio\" : 6,\n\t\t\"threshold\" : -30,\n\t\t\"release\" : 0.25,\n\t\t\"attack\" : 0.03,\n\t\t\"knee\" : 10\n\t}\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.MidSideCompressor} this\n */\nTone.MidSideCompressor.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"mid\", \"side\"]);\n\tthis.mid.dispose();\n\tthis.mid = null;\n\tthis.side.dispose();\n\tthis.side = null;\n\tthis._midSideSplit.dispose();\n\tthis._midSideSplit = null;\n\tthis._midSideMerge.dispose();\n\tthis._midSideMerge = null;\n\treturn this;\n};\n\nexport default Tone.MidSideCompressor;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n *          of an input signal. It can also get the raw\n *          value of the input signal.\n *\n *  @constructor\n *  @param {Number} smoothing The amount of smoothing applied between frames.\n *  @extends {Tone.AudioNode}\n *  @example\n * var meter = new Tone.Meter();\n * var mic = new Tone.UserMedia().open();\n * //connect mic to the meter\n * mic.connect(meter);\n * //the current level of the mic input in decibels\n * var level = meter.getLevel();\n */\nTone.Meter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"smoothing\"], Tone.Meter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t * A value from 0 -> 1 where 0 represents no time averaging with the last analysis frame.\n\t * @type {Number}\n\t */\n\tthis.smoothing = options.smoothing;\n\n\t/**\n\t * The previous frame's value\n\t * @type {Number}\n\t * @private\n\t */\n\tthis._rms = 0;\n\n\t/**\n\t *  The analyser node which computes the levels.\n\t *  @private\n\t *  @type  {Tone.Analyser}\n\t */\n\tthis.input = this.output = this._analyser = new Tone.Analyser(\"waveform\", 256);\n};\n\nTone.extend(Tone.Meter, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type {Object}\n *  @static\n *  @const\n */\nTone.Meter.defaults = {\n\t\"smoothing\" : 0.8,\n};\n\n/**\n *  Get the current decibel value of the incoming signal\n *  @returns {Decibels}\n */\nTone.Meter.prototype.getLevel = function(){\n\tvar values = this._analyser.getValue();\n\tvar totalSquared = 0;\n\tfor (var i = 0; i < values.length; i++){\n\t\tvar value = values[i];\n\t\ttotalSquared += value * value;\n\t}\n\tvar rms = Math.sqrt(totalSquared / values.length);\n\n\t//the rms can only fall at the rate of the smoothing\n\t//but can jump up instantly\n\tthis._rms = Math.max(rms, this._rms * this.smoothing);\n\n\treturn Tone.gainToDb(this._rms);\n};\n\n/**\n *  Get the signal value of the incoming signal\n *  @returns {Number}\n */\nTone.Meter.prototype.getValue = function(){\n\tvar value = this._analyser.getValue();\n\treturn value[0];\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Meter} this\n */\nTone.Meter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n\treturn this;\n};\n\nexport default Tone.Meter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Compressor\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Limiter will limit the loudness of an incoming signal.\n *         It is composed of a Tone.Compressor with a fast attack\n *         and release. Limiters are commonly used to safeguard against\n *         signal clipping. Unlike a compressor, limiters do not provide\n *         smooth gain reduction and almost completely prevent\n *         additional gain above the threshold.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {number} threshold The theshold above which the limiting is applied.\n *  @example\n *  var limiter = new Tone.Limiter(-6);\n */\nTone.Limiter = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\"], Tone.Limiter);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the compressor\n\t *  @private\n\t *  @type {Tone.Compressor}\n\t */\n\tthis._compressor = this.input = this.output = new Tone.Compressor({\n\t\t\"attack\" : 0.001,\n\t\t\"decay\" : 0.001,\n\t\t\"threshold\" : options.threshold\n\t});\n\n\t/**\n\t * The threshold of of the limiter\n\t * @type {Decibel}\n\t * @signal\n\t */\n\tthis.threshold = this._compressor.threshold;\n\n\tthis._readOnly(\"threshold\");\n};\n\nTone.extend(Tone.Limiter, Tone.AudioNode);\n\n/**\n *  The default value\n *  @type {Object}\n *  @const\n *  @static\n */\nTone.Limiter.defaults = {\n\t\"threshold\" : -12\n};\n\n/**\n *  Clean up.\n *  @returns {Tone.Limiter} this\n */\nTone.Limiter.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._compressor.dispose();\n\tthis._compressor = null;\n\tthis._writable(\"threshold\");\n\tthis.threshold = null;\n\treturn this;\n};\n\nexport default Tone.Limiter;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Follower\";\nimport \"../signal/GreaterThan\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Tone.Gate only passes a signal through when the incoming\n *          signal exceeds a specified threshold. To do this, Gate uses\n *          a Tone.Follower to follow the amplitude of the incoming signal.\n *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {Decibels|Object} [threshold] The threshold above which the gate will open.\n *  @param {Time=} smoothing The follower's smoothing time\n *  @example\n * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n * var mic = new Tone.UserMedia().connect(gate);\n * //the gate will only pass through the incoming\n * //signal when it's louder than -30db\n */\nTone.Gate = function(){\n\n\tvar options = Tone.defaults(arguments, [\"threshold\", \"smoothing\"], Tone.Gate);\n\tTone.AudioNode.call(this);\n\tthis.createInsOuts(1, 1);\n\n\t/**\n\t *  @type {Tone.Follower}\n\t *  @private\n\t */\n\tthis._follower = new Tone.Follower(options.smoothing);\n\n\t/**\n\t *  @type {Tone.GreaterThan}\n\t *  @private\n\t */\n\tthis._gt = new Tone.GreaterThan(Tone.dbToGain(options.threshold));\n\n\t//the connections\n\tTone.connect(this.input, this.output);\n\t//the control signal\n\tTone.connectSeries(this.input, this._follower, this._gt, this.output.gain);\n};\n\nTone.extend(Tone.Gate, Tone.AudioNode);\n\n/**\n *  @const\n *  @static\n *  @type {Object}\n */\nTone.Gate.defaults = {\n\t\"smoothing\" : 0.1,\n\t\"threshold\" : -40\n};\n\n/**\n * The threshold of the gate in decibels\n * @memberOf Tone.Gate#\n * @type {Decibels}\n * @name threshold\n */\nObject.defineProperty(Tone.Gate.prototype, \"threshold\", {\n\tget : function(){\n\t\treturn Tone.gainToDb(this._gt.value);\n\t},\n\tset : function(thresh){\n\t\tthis._gt.value = Tone.dbToGain(thresh);\n\t}\n});\n\n/**\n * The attack/decay speed of the gate\n * @memberOf Tone.Gate#\n * @type {Time}\n * @name smoothing\n */\nObject.defineProperty(Tone.Gate.prototype, \"smoothing\", {\n\tget : function(){\n\t\treturn this._follower.smoothing;\n\t},\n\tset : function(smoothingTime){\n\t\tthis._follower.smoothing = smoothingTime;\n\t}\n});\n\n/**\n *  Clean up.\n *  @returns {Tone.Gate} this\n */\nTone.Gate.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._follower.dispose();\n\tthis._gt.dispose();\n\tthis._follower = null;\n\tthis._gt = null;\n\treturn this;\n};\n\nexport default Tone.Gate;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/Analyser\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class  Get the current frequency data of the connected audio source\n *          using a fast Fourier transform.\n *  @extends {Tone.AudioNode}\n *  @param {Number=} size The size of the FFT. Value must be a power of\n *                       two in the range 16 to 16384.\n */\nTone.FFT = function(){\n\n\tvar options = Tone.defaults(arguments, [\"size\"], Tone.FFT);\n\toptions.type = Tone.Analyser.Type.FFT;\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  The analyser node.\n\t *  @private\n\t *  @type {Tone.Analyser}\n\t */\n\tthis._analyser = this.input = this.output = new Tone.Analyser(options);\n};\n\nTone.extend(Tone.FFT, Tone.AudioNode);\n\n/**\n *  The default values.\n *  @type {Object}\n *  @const\n */\nTone.FFT.defaults = {\n\t\"size\" : 1024\n};\n\n/**\n *  Gets the current frequency data from the connected audio source. \n *  Returns the frequency data of length [size](#size) as a Float32Array of decibel values. \n *  @returns {TypedArray}\n */\nTone.FFT.prototype.getValue = function(){\n\treturn this._analyser.getValue();\n};\n\n/**\n *  The size of analysis. This must be a power of two in the range 16 to 16384.\n *  Determines the size of the array returned by [getValue](#getvalue) (i.e. the number of\n *  frequency bins). Large FFT sizes may be costly to compute.\n *  @memberOf Tone.FFT#\n *  @type {Number}\n *  @name size\n */\nObject.defineProperty(Tone.FFT.prototype, \"size\", {\n\tget : function(){\n\t\treturn this._analyser.size;\n\t},\n\tset : function(size){\n\t\tthis._analyser.size = size;\n\t}\n});\n\n/**\n *  Clean up.\n *  @return  {Tone.FFT}  this\n */\nTone.FFT.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._analyser.dispose();\n\tthis._analyser = null;\n};\n\nexport default Tone.FFT;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/MultibandSplit\";\nimport \"../core/Gain\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n *         well as the low and high crossover frequencies.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *\n *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n *  @param {Decibels} [midLevel] The gain applied to the mid.\n *  @param {Decibels} [highLevel] The gain applied to the high.\n *  @example\n * var eq = new Tone.EQ3(-10, 3, -20);\n */\nTone.EQ3 = function(){\n\n\tvar options = Tone.defaults(arguments, [\"low\", \"mid\", \"high\"], Tone.EQ3);\n\tTone.AudioNode.call(this);\n\n\t/**\n\t *  the output node\n\t *  @type {GainNode}\n\t *  @private\n\t */\n\tthis.output = new Tone.Gain();\n\n\t/**\n\t *  the multiband split\n\t *  @type {Tone.MultibandSplit}\n\t *  @private\n\t */\n\tthis._multibandSplit = this.input = new Tone.MultibandSplit({\n\t\t\"lowFrequency\" : options.lowFrequency,\n\t\t\"highFrequency\" : options.highFrequency\n\t});\n\n\t/**\n\t *  The gain for the lower signals\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\n\t/**\n\t *  The gain for the mid signals\n\t *  @type  {Tone.Gain}\n\t *  @private\n\t */\n\tthis._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\n\t/**\n\t * The gain in decibels of the high part\n\t * @type {Tone.Gain}\n\t * @private\n\t */\n\tthis._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\n\t/**\n\t * The gain in decibels of the low part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.low = this._lowGain.gain;\n\n\t/**\n\t * The gain in decibels of the mid part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.mid = this._midGain.gain;\n\n\t/**\n\t * The gain in decibels of the high part\n\t * @type {Decibels}\n\t * @signal\n\t */\n\tthis.high = this._highGain.gain;\n\n\t/**\n\t *  The Q value for all of the filters.\n\t *  @type {Positive}\n\t *  @signal\n\t */\n\tthis.Q = this._multibandSplit.Q;\n\n\t/**\n\t *  The low/mid crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.lowFrequency = this._multibandSplit.lowFrequency;\n\n\t/**\n\t *  The mid/high crossover frequency.\n\t *  @type {Frequency}\n\t *  @signal\n\t */\n\tthis.highFrequency = this._multibandSplit.highFrequency;\n\n\t//the frequency bands\n\tthis._multibandSplit.low.chain(this._lowGain, this.output);\n\tthis._multibandSplit.mid.chain(this._midGain, this.output);\n\tthis._multibandSplit.high.chain(this._highGain, this.output);\n\tthis._readOnly([\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n};\n\nTone.extend(Tone.EQ3, Tone.AudioNode);\n\n/**\n *  the default values\n */\nTone.EQ3.defaults = {\n\t\"low\" : 0,\n\t\"mid\" : 0,\n\t\"high\" : 0,\n\t\"lowFrequency\" : 400,\n\t\"highFrequency\" : 2500\n};\n\n/**\n *  clean up\n *  @returns {Tone.EQ3} this\n */\nTone.EQ3.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n\tthis._multibandSplit.dispose();\n\tthis._multibandSplit = null;\n\tthis.lowFrequency = null;\n\tthis.highFrequency = null;\n\tthis._lowGain.dispose();\n\tthis._lowGain = null;\n\tthis._midGain.dispose();\n\tthis._midGain = null;\n\tthis._highGain.dispose();\n\tthis._highGain = null;\n\tthis.low = null;\n\tthis.mid = null;\n\tthis.high = null;\n\tthis.Q = null;\n\treturn this;\n};\n\nexport default Tone.EQ3;\n\n","import Tone from \"../core/Tone\";\nimport \"../component/PanVol\";\nimport \"../component/Solo\";\nimport \"../core/AudioNode\";\n\n/**\n *  @class Tone.Channel provides a channel strip interface with \n *  volume, pan, solo and mute controls. \n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels} volume The output volume.\n *  @param {AudioRange} pan the initial pan\n *  @example\n * //pan the incoming signal left and drop the volume\n * var channel = new Tone.Channel(-0.25, -12);\n */\nTone.Channel = function(){\n\n\tvar options = Tone.defaults(arguments, [\"volume\", \"pan\"], Tone.PanVol);\n\tTone.AudioNode.call(this, options);\n\n\t/**\n\t *  The soloing interface\n\t *  @type {Tone.Solo}\n\t *  @private\n\t */\n\tthis._solo = this.input = new Tone.Solo(options.solo);\n\n\t/**\n\t *  The panning and volume node\n\t *  @type {Tone.PanVol}\n\t *  @private\n\t */\n\tthis._panVol = this.output = new Tone.PanVol({\n\t\t\"pan\" : options.pan, \n\t\t\"volume\" : options.volume,\n\t\t\"mute\" : options.mute\n\t});\n\n\t/**\n\t *  The L/R panning control.\n\t *  @type {AudioRange}\n\t *  @signal\n\t */\n\tthis.pan = this._panVol.pan;\n\n\t/**\n\t *  The volume control in decibels.\n\t *  @type {Decibels}\n\t *  @signal\n\t */\n\tthis.volume = this._panVol.volume;\n\n\tthis._solo.connect(this._panVol);\n\tthis._readOnly([\"pan\", \"volume\"]);\n};\n\nTone.extend(Tone.Channel, Tone.AudioNode);\n\n/**\n *  The defaults\n *  @type  {Object}\n *  @const\n *  @static\n */\nTone.Channel.defaults = {\n\t\"pan\" : 0,\n\t\"volume\" : 0,\n\t\"mute\" : false,\n\t\"solo\" : false\n};\n\n/**\n * Solo/unsolo the channel. Soloing is only relative to other\n * Tone.Channels and Tone.Solos. \n * @memberOf Tone.Channel#\n * @name solo\n * @type {Boolean}\n */\nObject.defineProperty(Tone.Channel.prototype, \"solo\", {\n\tget : function(){\n\t\treturn this._solo.solo;\n\t},\n\tset : function(solo){\n\t\tthis._solo.solo = solo;\n\t}\n});\n\n/**\n *  If the current instance is muted, i.e. another instance is soloed,\n *  or the channel is muted\n *  @memberOf Tone.Channel#\n *  @type {Boolean}\n *  @name muted\n *  @readOnly\n */\nObject.defineProperty(Tone.Channel.prototype, \"muted\", {\n\tget : function(){\n\t\treturn this._solo.muted || this.mute;\n\t}\n});\n\n/**\n * Mute/unmute the volume\n * @memberOf Tone.Channel#\n * @name mute\n * @type {Boolean}\n */\nObject.defineProperty(Tone.Channel.prototype, \"mute\", {\n\tget : function(){\n\t\treturn this._panVol.mute;\n\t},\n\tset : function(mute){\n\t\tthis._panVol.mute = mute;\n\t}\n});\n\n/**\n *  clean up\n *  @returns {Tone.Channel} this\n */\nTone.Channel.prototype.dispose = function(){\n\tTone.AudioNode.prototype.dispose.call(this);\n\tthis._writable([\"pan\", \"volume\"]);\n\tthis._panVol.dispose();\n\tthis._panVol = null;\n\tthis.pan = null;\n\tthis.volume = null;\n\tthis._solo.dispose();\n\tthis._solo = null;\n\treturn this;\n};\n\nexport default Tone.Channel;\n\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","require(\"./component/AmplitudeEnvelope\");\nrequire(\"./component/Analyser\");\nrequire(\"./component/Channel\");\nrequire(\"./component/Compressor\");\nrequire(\"./component/CrossFade\");\nrequire(\"./component/Envelope\");\nrequire(\"./component/EQ3\");\nrequire(\"./component/FeedbackCombFilter\");\nrequire(\"./component/FFT\");\nrequire(\"./component/Filter\");\nrequire(\"./component/Follower\");\nrequire(\"./component/FrequencyEnvelope\");\nrequire(\"./component/Gate\");\nrequire(\"./component/LFO\");\nrequire(\"./component/Limiter\");\nrequire(\"./component/LowpassCombFilter\");\nrequire(\"./component/Merge\");\nrequire(\"./component/Meter\");\nrequire(\"./component/MidSideCompressor\");\nrequire(\"./component/MidSideMerge\");\nrequire(\"./component/MidSideSplit\");\nrequire(\"./component/Mono\");\nrequire(\"./component/MultibandCompressor\");\nrequire(\"./component/MultibandSplit\");\nrequire(\"./component/Panner\");\nrequire(\"./component/Panner3D\");\nrequire(\"./component/PanVol\");\nrequire(\"./component/ScaledEnvelope\");\nrequire(\"./component/Solo\");\nrequire(\"./component/Split\");\nrequire(\"./component/Volume\");\nrequire(\"./component/Waveform\");\nrequire(\"./control/CtrlInterpolate\");\nrequire(\"./control/CtrlMarkov\");\nrequire(\"./control/CtrlPattern\");\nrequire(\"./control/CtrlRandom\");\nrequire(\"./core/AudioNode\");\nrequire(\"./core/Buffer\");\nrequire(\"./core/Buffers\");\nrequire(\"./core/Bus\");\nrequire(\"./core/Clock\");\nrequire(\"./core/Context\");\nrequire(\"./core/Delay\");\nrequire(\"./core/Draw\");\nrequire(\"./core/Emitter\");\nrequire(\"./core/Gain\");\nrequire(\"./core/IntervalTimeline\");\nrequire(\"./core/Listener\");\nrequire(\"./core/Master\");\nrequire(\"./core/Offline\");\nrequire(\"./core/OfflineContext\");\nrequire(\"./core/Param\");\nrequire(\"./core/Timeline\");\nrequire(\"./core/TimelineState\");\nrequire(\"./core/Transport\");\nrequire(\"./core/TransportEvent\");\nrequire(\"./core/TransportRepeatEvent\");\nrequire(\"./effect/AutoFilter\");\nrequire(\"./effect/AutoPanner\");\nrequire(\"./effect/AutoWah\");\nrequire(\"./effect/BitCrusher\");\nrequire(\"./effect/Chebyshev\");\nrequire(\"./effect/Chorus\");\nrequire(\"./effect/Convolver\");\nrequire(\"./effect/Distortion\");\nrequire(\"./effect/Effect\");\nrequire(\"./effect/FeedbackDelay\");\nrequire(\"./effect/FeedbackEffect\");\nrequire(\"./effect/Freeverb\");\nrequire(\"./effect/JCReverb\");\nrequire(\"./effect/MidSideEffect\");\nrequire(\"./effect/Phaser\");\nrequire(\"./effect/PingPongDelay\");\nrequire(\"./effect/PitchShift\");\nrequire(\"./effect/Reverb\");\nrequire(\"./effect/StereoEffect\");\nrequire(\"./effect/StereoFeedbackEffect\");\nrequire(\"./effect/StereoWidener\");\nrequire(\"./effect/StereoXFeedbackEffect\");\nrequire(\"./effect/Tremolo\");\nrequire(\"./effect/Vibrato\");\nrequire(\"./event/Event\");\nrequire(\"./event/Loop\");\nrequire(\"./event/Part\");\nrequire(\"./event/Pattern\");\nrequire(\"./event/Sequence\");\nrequire(\"./instrument/AMSynth\");\nrequire(\"./instrument/DuoSynth\");\nrequire(\"./instrument/FMSynth\");\nrequire(\"./instrument/Instrument\");\nrequire(\"./instrument/MembraneSynth\");\nrequire(\"./instrument/MetalSynth\");\nrequire(\"./instrument/Monophonic\");\nrequire(\"./instrument/MonoSynth\");\nrequire(\"./instrument/NoiseSynth\");\nrequire(\"./instrument/PluckSynth\");\nrequire(\"./instrument/PolySynth\");\nrequire(\"./instrument/Sampler\");\nrequire(\"./instrument/Synth\");\nrequire(\"./signal/Abs\");\nrequire(\"./signal/Add\");\nrequire(\"./signal/AudioToGain\");\nrequire(\"./signal/EqualPowerGain\");\nrequire(\"./signal/GainToAudio\");\nrequire(\"./signal/GreaterThan\");\nrequire(\"./signal/GreaterThanZero\");\nrequire(\"./signal/Modulo\");\nrequire(\"./signal/Multiply\");\nrequire(\"./signal/Negate\");\nrequire(\"./signal/Normalize\");\nrequire(\"./signal/Pow\");\nrequire(\"./signal/Scale\");\nrequire(\"./signal/ScaleExp\");\nrequire(\"./signal/Signal\");\nrequire(\"./signal/SignalBase\");\nrequire(\"./signal/Subtract\");\nrequire(\"./signal/TickSignal\");\nrequire(\"./signal/TransportTimelineSignal\");\nrequire(\"./signal/WaveShaper\");\nrequire(\"./signal/Zero\");\nrequire(\"./source/AMOscillator\");\nrequire(\"./source/BufferSource\");\nrequire(\"./source/FatOscillator\");\nrequire(\"./source/FMOscillator\");\nrequire(\"./source/GrainPlayer\");\nrequire(\"./source/Noise\");\nrequire(\"./source/OmniOscillator\");\nrequire(\"./source/Oscillator\");\nrequire(\"./source/OscillatorNode\");\nrequire(\"./source/Player\");\nrequire(\"./source/Players\");\nrequire(\"./source/PulseOscillator\");\nrequire(\"./source/PWMOscillator\");\nrequire(\"./source/Source\");\nrequire(\"./source/TickSource\");\nrequire(\"./source/UserMedia\");\nrequire(\"./type/Frequency\");\nrequire(\"./type/Midi\");\nrequire(\"./type/Ticks\");\nrequire(\"./type/Time\");\nrequire(\"./type/TimeBase\");\nrequire(\"./type/TransportTime\");\nrequire(\"./type/Type\");\nmodule.exports = require(\"./core/Tone\").default;\n"],"sourceRoot":""}